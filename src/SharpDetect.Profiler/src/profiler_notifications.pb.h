// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/SharpDetect.Common/Messages/profiler_notifications.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[25]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
namespace SharpDetect {
namespace Common {
namespace Messages {
class NotifyMessage;
class NotifyMessageDefaultTypeInternal;
extern NotifyMessageDefaultTypeInternal _NotifyMessage_default_instance_;
class Notify_ClassLoaded;
class Notify_ClassLoadedDefaultTypeInternal;
extern Notify_ClassLoadedDefaultTypeInternal _Notify_ClassLoaded_default_instance_;
class Notify_FunctionJITCompilationStarted;
class Notify_FunctionJITCompilationStartedDefaultTypeInternal;
extern Notify_FunctionJITCompilationStartedDefaultTypeInternal _Notify_FunctionJITCompilationStarted_default_instance_;
class Notify_GarbageCollectionFinished;
class Notify_GarbageCollectionFinishedDefaultTypeInternal;
extern Notify_GarbageCollectionFinishedDefaultTypeInternal _Notify_GarbageCollectionFinished_default_instance_;
class Notify_GarbageCollectionStarted;
class Notify_GarbageCollectionStartedDefaultTypeInternal;
extern Notify_GarbageCollectionStartedDefaultTypeInternal _Notify_GarbageCollectionStarted_default_instance_;
class Notify_HelperMethodReferenced;
class Notify_HelperMethodReferencedDefaultTypeInternal;
extern Notify_HelperMethodReferencedDefaultTypeInternal _Notify_HelperMethodReferenced_default_instance_;
class Notify_MethodCalled;
class Notify_MethodCalledDefaultTypeInternal;
extern Notify_MethodCalledDefaultTypeInternal _Notify_MethodCalled_default_instance_;
class Notify_MethodInjected;
class Notify_MethodInjectedDefaultTypeInternal;
extern Notify_MethodInjectedDefaultTypeInternal _Notify_MethodInjected_default_instance_;
class Notify_MethodReturned;
class Notify_MethodReturnedDefaultTypeInternal;
extern Notify_MethodReturnedDefaultTypeInternal _Notify_MethodReturned_default_instance_;
class Notify_MethodWrapperInjected;
class Notify_MethodWrapperInjectedDefaultTypeInternal;
extern Notify_MethodWrapperInjectedDefaultTypeInternal _Notify_MethodWrapperInjected_default_instance_;
class Notify_ModuleLoaded;
class Notify_ModuleLoadedDefaultTypeInternal;
extern Notify_ModuleLoadedDefaultTypeInternal _Notify_ModuleLoaded_default_instance_;
class Notify_MovedReferences;
class Notify_MovedReferencesDefaultTypeInternal;
extern Notify_MovedReferencesDefaultTypeInternal _Notify_MovedReferences_default_instance_;
class Notify_ProfilerDestroyed;
class Notify_ProfilerDestroyedDefaultTypeInternal;
extern Notify_ProfilerDestroyedDefaultTypeInternal _Notify_ProfilerDestroyed_default_instance_;
class Notify_ProfilerInitialized;
class Notify_ProfilerInitializedDefaultTypeInternal;
extern Notify_ProfilerInitializedDefaultTypeInternal _Notify_ProfilerInitialized_default_instance_;
class Notify_RuntimeSuspendFinished;
class Notify_RuntimeSuspendFinishedDefaultTypeInternal;
extern Notify_RuntimeSuspendFinishedDefaultTypeInternal _Notify_RuntimeSuspendFinished_default_instance_;
class Notify_RuntimeSuspendStarted;
class Notify_RuntimeSuspendStartedDefaultTypeInternal;
extern Notify_RuntimeSuspendStartedDefaultTypeInternal _Notify_RuntimeSuspendStarted_default_instance_;
class Notify_RuntimeThreadResumed;
class Notify_RuntimeThreadResumedDefaultTypeInternal;
extern Notify_RuntimeThreadResumedDefaultTypeInternal _Notify_RuntimeThreadResumed_default_instance_;
class Notify_RuntimeThreadSuspended;
class Notify_RuntimeThreadSuspendedDefaultTypeInternal;
extern Notify_RuntimeThreadSuspendedDefaultTypeInternal _Notify_RuntimeThreadSuspended_default_instance_;
class Notify_SurvivingReferences;
class Notify_SurvivingReferencesDefaultTypeInternal;
extern Notify_SurvivingReferencesDefaultTypeInternal _Notify_SurvivingReferences_default_instance_;
class Notify_ThreadCreated;
class Notify_ThreadCreatedDefaultTypeInternal;
extern Notify_ThreadCreatedDefaultTypeInternal _Notify_ThreadCreated_default_instance_;
class Notify_ThreadDestroyed;
class Notify_ThreadDestroyedDefaultTypeInternal;
extern Notify_ThreadDestroyedDefaultTypeInternal _Notify_ThreadDestroyed_default_instance_;
class Notify_TypeInjected;
class Notify_TypeInjectedDefaultTypeInternal;
extern Notify_TypeInjectedDefaultTypeInternal _Notify_TypeInjected_default_instance_;
class Notify_TypeReferenced;
class Notify_TypeReferencedDefaultTypeInternal;
extern Notify_TypeReferencedDefaultTypeInternal _Notify_TypeReferenced_default_instance_;
class Notify_WrapperMethodReferenced;
class Notify_WrapperMethodReferencedDefaultTypeInternal;
extern Notify_WrapperMethodReferencedDefaultTypeInternal _Notify_WrapperMethodReferenced_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
}  // namespace Messages
}  // namespace Common
}  // namespace SharpDetect
PROTOBUF_NAMESPACE_OPEN
template<> ::SharpDetect::Common::Messages::NotifyMessage* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::NotifyMessage>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_ClassLoaded* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_ClassLoaded>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_FunctionJITCompilationStarted* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_FunctionJITCompilationStarted>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_GarbageCollectionFinished* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_GarbageCollectionFinished>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_GarbageCollectionStarted* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_GarbageCollectionStarted>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_HelperMethodReferenced* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_HelperMethodReferenced>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_MethodCalled* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_MethodCalled>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_MethodInjected* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_MethodInjected>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_MethodReturned* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_MethodReturned>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_MethodWrapperInjected* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_MethodWrapperInjected>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_ModuleLoaded* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_ModuleLoaded>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_MovedReferences* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_MovedReferences>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_ProfilerDestroyed* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_ProfilerDestroyed>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_ProfilerInitialized* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_ProfilerInitialized>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_RuntimeSuspendFinished* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_RuntimeSuspendFinished>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_RuntimeSuspendStarted* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_RuntimeSuspendStarted>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_RuntimeThreadResumed* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_RuntimeThreadResumed>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_RuntimeThreadSuspended* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_RuntimeThreadSuspended>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_SurvivingReferences* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_SurvivingReferences>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_ThreadCreated* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_ThreadCreated>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_ThreadDestroyed* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_ThreadDestroyed>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_TypeInjected* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_TypeInjected>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_TypeReferenced* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_TypeReferenced>(Arena*);
template<> ::SharpDetect::Common::Messages::Notify_WrapperMethodReferenced* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Notify_WrapperMethodReferenced>(Arena*);
template<> ::SharpDetect::Common::Messages::Response* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace SharpDetect {
namespace Common {
namespace Messages {

enum MethodType : int {
  UNKNOWN = 0,
  FIELD_ACCESS = 1,
  FIELD_INSTANCE_REF_ACCESS = 2,
  ARRAY_ELEMENT_ACCESS = 3,
  ARRAY_INSTANCE_REF_ACCESS = 4,
  ARRAY_INDEX_ACCESS = 5,
  MethodType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  MethodType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool MethodType_IsValid(int value);
constexpr MethodType MethodType_MIN = UNKNOWN;
constexpr MethodType MethodType_MAX = ARRAY_INDEX_ACCESS;
constexpr int MethodType_ARRAYSIZE = MethodType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MethodType_descriptor();
template<typename T>
inline const std::string& MethodType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MethodType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MethodType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MethodType_descriptor(), enum_t_value);
}
inline bool MethodType_Parse(
    const std::string& name, MethodType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MethodType>(
    MethodType_descriptor(), name, value);
}
enum RuntimeSuspensionReason : int {
  OTHER = 0,
  GC = 1,
  APPDOMAIN_SHUTDOWN = 2,
  CODE_PITCHING = 3,
  SHUTDOWN = 4,
  INPROC_DEBUGGER = 6,
  GC_PREPARATION = 7,
  REJIT = 8,
  RuntimeSuspensionReason_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  RuntimeSuspensionReason_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool RuntimeSuspensionReason_IsValid(int value);
constexpr RuntimeSuspensionReason RuntimeSuspensionReason_MIN = OTHER;
constexpr RuntimeSuspensionReason RuntimeSuspensionReason_MAX = REJIT;
constexpr int RuntimeSuspensionReason_ARRAYSIZE = RuntimeSuspensionReason_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RuntimeSuspensionReason_descriptor();
template<typename T>
inline const std::string& RuntimeSuspensionReason_Name(T enum_t_value) {
  static_assert(::std::is_same<T, RuntimeSuspensionReason>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function RuntimeSuspensionReason_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    RuntimeSuspensionReason_descriptor(), enum_t_value);
}
inline bool RuntimeSuspensionReason_Parse(
    const std::string& name, RuntimeSuspensionReason* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<RuntimeSuspensionReason>(
    RuntimeSuspensionReason_descriptor(), name, value);
}
// ===================================================================

class NotifyMessage :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.NotifyMessage) */ {
 public:
  NotifyMessage();
  virtual ~NotifyMessage();

  NotifyMessage(const NotifyMessage& from);
  NotifyMessage(NotifyMessage&& from) noexcept
    : NotifyMessage() {
    *this = ::std::move(from);
  }

  inline NotifyMessage& operator=(const NotifyMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyMessage& operator=(NotifyMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NotifyMessage& default_instance();

  enum PayloadCase {
    kResponse = 3,
    kProfilerInitialized = 4,
    kProfilerDestroyed = 5,
    kModuleLoaded = 6,
    kClassLoaded = 7,
    kFunctionJITCompilationStarted = 8,
    kThreadCreated = 9,
    kThreadDestroyed = 10,
    kTypeInjected = 11,
    kTypeReferenced = 12,
    kMethodInjected = 13,
    kHelperMethodReferenced = 14,
    kWrapperMethodReferenced = 15,
    kMethodCalled = 16,
    kMethodReturned = 17,
    kMethodWrapperInjected = 18,
    kGarbageCollectionStarted = 19,
    kGarbageCollectionFinished = 20,
    kRuntimeSuspendStarted = 21,
    kRuntimeSuspendFinished = 22,
    kRuntimeThreadSuspended = 23,
    kRuntimeThreadResumed = 24,
    kSurvivingReferences = 25,
    kMovedReferences = 26,
    PAYLOAD_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NotifyMessage* internal_default_instance() {
    return reinterpret_cast<const NotifyMessage*>(
               &_NotifyMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(NotifyMessage& a, NotifyMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(NotifyMessage* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NotifyMessage* New() const final {
    return CreateMaybeMessage<NotifyMessage>(nullptr);
  }

  NotifyMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NotifyMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NotifyMessage& from);
  void MergeFrom(const NotifyMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NotifyMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.NotifyMessage";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNotificationIdFieldNumber = 1,
    kThreadFieldNumber = 2,
    kResponseFieldNumber = 3,
    kProfilerInitializedFieldNumber = 4,
    kProfilerDestroyedFieldNumber = 5,
    kModuleLoadedFieldNumber = 6,
    kClassLoadedFieldNumber = 7,
    kFunctionJITCompilationStartedFieldNumber = 8,
    kThreadCreatedFieldNumber = 9,
    kThreadDestroyedFieldNumber = 10,
    kTypeInjectedFieldNumber = 11,
    kTypeReferencedFieldNumber = 12,
    kMethodInjectedFieldNumber = 13,
    kHelperMethodReferencedFieldNumber = 14,
    kWrapperMethodReferencedFieldNumber = 15,
    kMethodCalledFieldNumber = 16,
    kMethodReturnedFieldNumber = 17,
    kMethodWrapperInjectedFieldNumber = 18,
    kGarbageCollectionStartedFieldNumber = 19,
    kGarbageCollectionFinishedFieldNumber = 20,
    kRuntimeSuspendStartedFieldNumber = 21,
    kRuntimeSuspendFinishedFieldNumber = 22,
    kRuntimeThreadSuspendedFieldNumber = 23,
    kRuntimeThreadResumedFieldNumber = 24,
    kSurvivingReferencesFieldNumber = 25,
    kMovedReferencesFieldNumber = 26,
  };
  // uint64 NotificationId = 1;
  void clear_notificationid();
  ::PROTOBUF_NAMESPACE_ID::uint64 notificationid() const;
  void set_notificationid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_notificationid() const;
  void _internal_set_notificationid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 Thread = 2;
  void clear_thread();
  ::PROTOBUF_NAMESPACE_ID::uint64 thread() const;
  void set_thread(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_thread() const;
  void _internal_set_thread(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .SharpDetect.Common.Messages.Response Response = 3;
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  const ::SharpDetect::Common::Messages::Response& response() const;
  ::SharpDetect::Common::Messages::Response* release_response();
  ::SharpDetect::Common::Messages::Response* mutable_response();
  void set_allocated_response(::SharpDetect::Common::Messages::Response* response);
  private:
  const ::SharpDetect::Common::Messages::Response& _internal_response() const;
  ::SharpDetect::Common::Messages::Response* _internal_mutable_response();
  public:

  // .SharpDetect.Common.Messages.Notify_ProfilerInitialized ProfilerInitialized = 4;
  bool has_profilerinitialized() const;
  private:
  bool _internal_has_profilerinitialized() const;
  public:
  void clear_profilerinitialized();
  const ::SharpDetect::Common::Messages::Notify_ProfilerInitialized& profilerinitialized() const;
  ::SharpDetect::Common::Messages::Notify_ProfilerInitialized* release_profilerinitialized();
  ::SharpDetect::Common::Messages::Notify_ProfilerInitialized* mutable_profilerinitialized();
  void set_allocated_profilerinitialized(::SharpDetect::Common::Messages::Notify_ProfilerInitialized* profilerinitialized);
  private:
  const ::SharpDetect::Common::Messages::Notify_ProfilerInitialized& _internal_profilerinitialized() const;
  ::SharpDetect::Common::Messages::Notify_ProfilerInitialized* _internal_mutable_profilerinitialized();
  public:

  // .SharpDetect.Common.Messages.Notify_ProfilerDestroyed ProfilerDestroyed = 5;
  bool has_profilerdestroyed() const;
  private:
  bool _internal_has_profilerdestroyed() const;
  public:
  void clear_profilerdestroyed();
  const ::SharpDetect::Common::Messages::Notify_ProfilerDestroyed& profilerdestroyed() const;
  ::SharpDetect::Common::Messages::Notify_ProfilerDestroyed* release_profilerdestroyed();
  ::SharpDetect::Common::Messages::Notify_ProfilerDestroyed* mutable_profilerdestroyed();
  void set_allocated_profilerdestroyed(::SharpDetect::Common::Messages::Notify_ProfilerDestroyed* profilerdestroyed);
  private:
  const ::SharpDetect::Common::Messages::Notify_ProfilerDestroyed& _internal_profilerdestroyed() const;
  ::SharpDetect::Common::Messages::Notify_ProfilerDestroyed* _internal_mutable_profilerdestroyed();
  public:

  // .SharpDetect.Common.Messages.Notify_ModuleLoaded ModuleLoaded = 6;
  bool has_moduleloaded() const;
  private:
  bool _internal_has_moduleloaded() const;
  public:
  void clear_moduleloaded();
  const ::SharpDetect::Common::Messages::Notify_ModuleLoaded& moduleloaded() const;
  ::SharpDetect::Common::Messages::Notify_ModuleLoaded* release_moduleloaded();
  ::SharpDetect::Common::Messages::Notify_ModuleLoaded* mutable_moduleloaded();
  void set_allocated_moduleloaded(::SharpDetect::Common::Messages::Notify_ModuleLoaded* moduleloaded);
  private:
  const ::SharpDetect::Common::Messages::Notify_ModuleLoaded& _internal_moduleloaded() const;
  ::SharpDetect::Common::Messages::Notify_ModuleLoaded* _internal_mutable_moduleloaded();
  public:

  // .SharpDetect.Common.Messages.Notify_ClassLoaded ClassLoaded = 7;
  bool has_classloaded() const;
  private:
  bool _internal_has_classloaded() const;
  public:
  void clear_classloaded();
  const ::SharpDetect::Common::Messages::Notify_ClassLoaded& classloaded() const;
  ::SharpDetect::Common::Messages::Notify_ClassLoaded* release_classloaded();
  ::SharpDetect::Common::Messages::Notify_ClassLoaded* mutable_classloaded();
  void set_allocated_classloaded(::SharpDetect::Common::Messages::Notify_ClassLoaded* classloaded);
  private:
  const ::SharpDetect::Common::Messages::Notify_ClassLoaded& _internal_classloaded() const;
  ::SharpDetect::Common::Messages::Notify_ClassLoaded* _internal_mutable_classloaded();
  public:

  // .SharpDetect.Common.Messages.Notify_FunctionJITCompilationStarted FunctionJITCompilationStarted = 8;
  bool has_functionjitcompilationstarted() const;
  private:
  bool _internal_has_functionjitcompilationstarted() const;
  public:
  void clear_functionjitcompilationstarted();
  const ::SharpDetect::Common::Messages::Notify_FunctionJITCompilationStarted& functionjitcompilationstarted() const;
  ::SharpDetect::Common::Messages::Notify_FunctionJITCompilationStarted* release_functionjitcompilationstarted();
  ::SharpDetect::Common::Messages::Notify_FunctionJITCompilationStarted* mutable_functionjitcompilationstarted();
  void set_allocated_functionjitcompilationstarted(::SharpDetect::Common::Messages::Notify_FunctionJITCompilationStarted* functionjitcompilationstarted);
  private:
  const ::SharpDetect::Common::Messages::Notify_FunctionJITCompilationStarted& _internal_functionjitcompilationstarted() const;
  ::SharpDetect::Common::Messages::Notify_FunctionJITCompilationStarted* _internal_mutable_functionjitcompilationstarted();
  public:

  // .SharpDetect.Common.Messages.Notify_ThreadCreated ThreadCreated = 9;
  bool has_threadcreated() const;
  private:
  bool _internal_has_threadcreated() const;
  public:
  void clear_threadcreated();
  const ::SharpDetect::Common::Messages::Notify_ThreadCreated& threadcreated() const;
  ::SharpDetect::Common::Messages::Notify_ThreadCreated* release_threadcreated();
  ::SharpDetect::Common::Messages::Notify_ThreadCreated* mutable_threadcreated();
  void set_allocated_threadcreated(::SharpDetect::Common::Messages::Notify_ThreadCreated* threadcreated);
  private:
  const ::SharpDetect::Common::Messages::Notify_ThreadCreated& _internal_threadcreated() const;
  ::SharpDetect::Common::Messages::Notify_ThreadCreated* _internal_mutable_threadcreated();
  public:

  // .SharpDetect.Common.Messages.Notify_ThreadDestroyed ThreadDestroyed = 10;
  bool has_threaddestroyed() const;
  private:
  bool _internal_has_threaddestroyed() const;
  public:
  void clear_threaddestroyed();
  const ::SharpDetect::Common::Messages::Notify_ThreadDestroyed& threaddestroyed() const;
  ::SharpDetect::Common::Messages::Notify_ThreadDestroyed* release_threaddestroyed();
  ::SharpDetect::Common::Messages::Notify_ThreadDestroyed* mutable_threaddestroyed();
  void set_allocated_threaddestroyed(::SharpDetect::Common::Messages::Notify_ThreadDestroyed* threaddestroyed);
  private:
  const ::SharpDetect::Common::Messages::Notify_ThreadDestroyed& _internal_threaddestroyed() const;
  ::SharpDetect::Common::Messages::Notify_ThreadDestroyed* _internal_mutable_threaddestroyed();
  public:

  // .SharpDetect.Common.Messages.Notify_TypeInjected TypeInjected = 11;
  bool has_typeinjected() const;
  private:
  bool _internal_has_typeinjected() const;
  public:
  void clear_typeinjected();
  const ::SharpDetect::Common::Messages::Notify_TypeInjected& typeinjected() const;
  ::SharpDetect::Common::Messages::Notify_TypeInjected* release_typeinjected();
  ::SharpDetect::Common::Messages::Notify_TypeInjected* mutable_typeinjected();
  void set_allocated_typeinjected(::SharpDetect::Common::Messages::Notify_TypeInjected* typeinjected);
  private:
  const ::SharpDetect::Common::Messages::Notify_TypeInjected& _internal_typeinjected() const;
  ::SharpDetect::Common::Messages::Notify_TypeInjected* _internal_mutable_typeinjected();
  public:

  // .SharpDetect.Common.Messages.Notify_TypeReferenced TypeReferenced = 12;
  bool has_typereferenced() const;
  private:
  bool _internal_has_typereferenced() const;
  public:
  void clear_typereferenced();
  const ::SharpDetect::Common::Messages::Notify_TypeReferenced& typereferenced() const;
  ::SharpDetect::Common::Messages::Notify_TypeReferenced* release_typereferenced();
  ::SharpDetect::Common::Messages::Notify_TypeReferenced* mutable_typereferenced();
  void set_allocated_typereferenced(::SharpDetect::Common::Messages::Notify_TypeReferenced* typereferenced);
  private:
  const ::SharpDetect::Common::Messages::Notify_TypeReferenced& _internal_typereferenced() const;
  ::SharpDetect::Common::Messages::Notify_TypeReferenced* _internal_mutable_typereferenced();
  public:

  // .SharpDetect.Common.Messages.Notify_MethodInjected MethodInjected = 13;
  bool has_methodinjected() const;
  private:
  bool _internal_has_methodinjected() const;
  public:
  void clear_methodinjected();
  const ::SharpDetect::Common::Messages::Notify_MethodInjected& methodinjected() const;
  ::SharpDetect::Common::Messages::Notify_MethodInjected* release_methodinjected();
  ::SharpDetect::Common::Messages::Notify_MethodInjected* mutable_methodinjected();
  void set_allocated_methodinjected(::SharpDetect::Common::Messages::Notify_MethodInjected* methodinjected);
  private:
  const ::SharpDetect::Common::Messages::Notify_MethodInjected& _internal_methodinjected() const;
  ::SharpDetect::Common::Messages::Notify_MethodInjected* _internal_mutable_methodinjected();
  public:

  // .SharpDetect.Common.Messages.Notify_HelperMethodReferenced HelperMethodReferenced = 14;
  bool has_helpermethodreferenced() const;
  private:
  bool _internal_has_helpermethodreferenced() const;
  public:
  void clear_helpermethodreferenced();
  const ::SharpDetect::Common::Messages::Notify_HelperMethodReferenced& helpermethodreferenced() const;
  ::SharpDetect::Common::Messages::Notify_HelperMethodReferenced* release_helpermethodreferenced();
  ::SharpDetect::Common::Messages::Notify_HelperMethodReferenced* mutable_helpermethodreferenced();
  void set_allocated_helpermethodreferenced(::SharpDetect::Common::Messages::Notify_HelperMethodReferenced* helpermethodreferenced);
  private:
  const ::SharpDetect::Common::Messages::Notify_HelperMethodReferenced& _internal_helpermethodreferenced() const;
  ::SharpDetect::Common::Messages::Notify_HelperMethodReferenced* _internal_mutable_helpermethodreferenced();
  public:

  // .SharpDetect.Common.Messages.Notify_WrapperMethodReferenced WrapperMethodReferenced = 15;
  bool has_wrappermethodreferenced() const;
  private:
  bool _internal_has_wrappermethodreferenced() const;
  public:
  void clear_wrappermethodreferenced();
  const ::SharpDetect::Common::Messages::Notify_WrapperMethodReferenced& wrappermethodreferenced() const;
  ::SharpDetect::Common::Messages::Notify_WrapperMethodReferenced* release_wrappermethodreferenced();
  ::SharpDetect::Common::Messages::Notify_WrapperMethodReferenced* mutable_wrappermethodreferenced();
  void set_allocated_wrappermethodreferenced(::SharpDetect::Common::Messages::Notify_WrapperMethodReferenced* wrappermethodreferenced);
  private:
  const ::SharpDetect::Common::Messages::Notify_WrapperMethodReferenced& _internal_wrappermethodreferenced() const;
  ::SharpDetect::Common::Messages::Notify_WrapperMethodReferenced* _internal_mutable_wrappermethodreferenced();
  public:

  // .SharpDetect.Common.Messages.Notify_MethodCalled MethodCalled = 16;
  bool has_methodcalled() const;
  private:
  bool _internal_has_methodcalled() const;
  public:
  void clear_methodcalled();
  const ::SharpDetect::Common::Messages::Notify_MethodCalled& methodcalled() const;
  ::SharpDetect::Common::Messages::Notify_MethodCalled* release_methodcalled();
  ::SharpDetect::Common::Messages::Notify_MethodCalled* mutable_methodcalled();
  void set_allocated_methodcalled(::SharpDetect::Common::Messages::Notify_MethodCalled* methodcalled);
  private:
  const ::SharpDetect::Common::Messages::Notify_MethodCalled& _internal_methodcalled() const;
  ::SharpDetect::Common::Messages::Notify_MethodCalled* _internal_mutable_methodcalled();
  public:

  // .SharpDetect.Common.Messages.Notify_MethodReturned MethodReturned = 17;
  bool has_methodreturned() const;
  private:
  bool _internal_has_methodreturned() const;
  public:
  void clear_methodreturned();
  const ::SharpDetect::Common::Messages::Notify_MethodReturned& methodreturned() const;
  ::SharpDetect::Common::Messages::Notify_MethodReturned* release_methodreturned();
  ::SharpDetect::Common::Messages::Notify_MethodReturned* mutable_methodreturned();
  void set_allocated_methodreturned(::SharpDetect::Common::Messages::Notify_MethodReturned* methodreturned);
  private:
  const ::SharpDetect::Common::Messages::Notify_MethodReturned& _internal_methodreturned() const;
  ::SharpDetect::Common::Messages::Notify_MethodReturned* _internal_mutable_methodreturned();
  public:

  // .SharpDetect.Common.Messages.Notify_MethodWrapperInjected MethodWrapperInjected = 18;
  bool has_methodwrapperinjected() const;
  private:
  bool _internal_has_methodwrapperinjected() const;
  public:
  void clear_methodwrapperinjected();
  const ::SharpDetect::Common::Messages::Notify_MethodWrapperInjected& methodwrapperinjected() const;
  ::SharpDetect::Common::Messages::Notify_MethodWrapperInjected* release_methodwrapperinjected();
  ::SharpDetect::Common::Messages::Notify_MethodWrapperInjected* mutable_methodwrapperinjected();
  void set_allocated_methodwrapperinjected(::SharpDetect::Common::Messages::Notify_MethodWrapperInjected* methodwrapperinjected);
  private:
  const ::SharpDetect::Common::Messages::Notify_MethodWrapperInjected& _internal_methodwrapperinjected() const;
  ::SharpDetect::Common::Messages::Notify_MethodWrapperInjected* _internal_mutable_methodwrapperinjected();
  public:

  // .SharpDetect.Common.Messages.Notify_GarbageCollectionStarted GarbageCollectionStarted = 19;
  bool has_garbagecollectionstarted() const;
  private:
  bool _internal_has_garbagecollectionstarted() const;
  public:
  void clear_garbagecollectionstarted();
  const ::SharpDetect::Common::Messages::Notify_GarbageCollectionStarted& garbagecollectionstarted() const;
  ::SharpDetect::Common::Messages::Notify_GarbageCollectionStarted* release_garbagecollectionstarted();
  ::SharpDetect::Common::Messages::Notify_GarbageCollectionStarted* mutable_garbagecollectionstarted();
  void set_allocated_garbagecollectionstarted(::SharpDetect::Common::Messages::Notify_GarbageCollectionStarted* garbagecollectionstarted);
  private:
  const ::SharpDetect::Common::Messages::Notify_GarbageCollectionStarted& _internal_garbagecollectionstarted() const;
  ::SharpDetect::Common::Messages::Notify_GarbageCollectionStarted* _internal_mutable_garbagecollectionstarted();
  public:

  // .SharpDetect.Common.Messages.Notify_GarbageCollectionFinished GarbageCollectionFinished = 20;
  bool has_garbagecollectionfinished() const;
  private:
  bool _internal_has_garbagecollectionfinished() const;
  public:
  void clear_garbagecollectionfinished();
  const ::SharpDetect::Common::Messages::Notify_GarbageCollectionFinished& garbagecollectionfinished() const;
  ::SharpDetect::Common::Messages::Notify_GarbageCollectionFinished* release_garbagecollectionfinished();
  ::SharpDetect::Common::Messages::Notify_GarbageCollectionFinished* mutable_garbagecollectionfinished();
  void set_allocated_garbagecollectionfinished(::SharpDetect::Common::Messages::Notify_GarbageCollectionFinished* garbagecollectionfinished);
  private:
  const ::SharpDetect::Common::Messages::Notify_GarbageCollectionFinished& _internal_garbagecollectionfinished() const;
  ::SharpDetect::Common::Messages::Notify_GarbageCollectionFinished* _internal_mutable_garbagecollectionfinished();
  public:

  // .SharpDetect.Common.Messages.Notify_RuntimeSuspendStarted RuntimeSuspendStarted = 21;
  bool has_runtimesuspendstarted() const;
  private:
  bool _internal_has_runtimesuspendstarted() const;
  public:
  void clear_runtimesuspendstarted();
  const ::SharpDetect::Common::Messages::Notify_RuntimeSuspendStarted& runtimesuspendstarted() const;
  ::SharpDetect::Common::Messages::Notify_RuntimeSuspendStarted* release_runtimesuspendstarted();
  ::SharpDetect::Common::Messages::Notify_RuntimeSuspendStarted* mutable_runtimesuspendstarted();
  void set_allocated_runtimesuspendstarted(::SharpDetect::Common::Messages::Notify_RuntimeSuspendStarted* runtimesuspendstarted);
  private:
  const ::SharpDetect::Common::Messages::Notify_RuntimeSuspendStarted& _internal_runtimesuspendstarted() const;
  ::SharpDetect::Common::Messages::Notify_RuntimeSuspendStarted* _internal_mutable_runtimesuspendstarted();
  public:

  // .SharpDetect.Common.Messages.Notify_RuntimeSuspendFinished RuntimeSuspendFinished = 22;
  bool has_runtimesuspendfinished() const;
  private:
  bool _internal_has_runtimesuspendfinished() const;
  public:
  void clear_runtimesuspendfinished();
  const ::SharpDetect::Common::Messages::Notify_RuntimeSuspendFinished& runtimesuspendfinished() const;
  ::SharpDetect::Common::Messages::Notify_RuntimeSuspendFinished* release_runtimesuspendfinished();
  ::SharpDetect::Common::Messages::Notify_RuntimeSuspendFinished* mutable_runtimesuspendfinished();
  void set_allocated_runtimesuspendfinished(::SharpDetect::Common::Messages::Notify_RuntimeSuspendFinished* runtimesuspendfinished);
  private:
  const ::SharpDetect::Common::Messages::Notify_RuntimeSuspendFinished& _internal_runtimesuspendfinished() const;
  ::SharpDetect::Common::Messages::Notify_RuntimeSuspendFinished* _internal_mutable_runtimesuspendfinished();
  public:

  // .SharpDetect.Common.Messages.Notify_RuntimeThreadSuspended RuntimeThreadSuspended = 23;
  bool has_runtimethreadsuspended() const;
  private:
  bool _internal_has_runtimethreadsuspended() const;
  public:
  void clear_runtimethreadsuspended();
  const ::SharpDetect::Common::Messages::Notify_RuntimeThreadSuspended& runtimethreadsuspended() const;
  ::SharpDetect::Common::Messages::Notify_RuntimeThreadSuspended* release_runtimethreadsuspended();
  ::SharpDetect::Common::Messages::Notify_RuntimeThreadSuspended* mutable_runtimethreadsuspended();
  void set_allocated_runtimethreadsuspended(::SharpDetect::Common::Messages::Notify_RuntimeThreadSuspended* runtimethreadsuspended);
  private:
  const ::SharpDetect::Common::Messages::Notify_RuntimeThreadSuspended& _internal_runtimethreadsuspended() const;
  ::SharpDetect::Common::Messages::Notify_RuntimeThreadSuspended* _internal_mutable_runtimethreadsuspended();
  public:

  // .SharpDetect.Common.Messages.Notify_RuntimeThreadResumed RuntimeThreadResumed = 24;
  bool has_runtimethreadresumed() const;
  private:
  bool _internal_has_runtimethreadresumed() const;
  public:
  void clear_runtimethreadresumed();
  const ::SharpDetect::Common::Messages::Notify_RuntimeThreadResumed& runtimethreadresumed() const;
  ::SharpDetect::Common::Messages::Notify_RuntimeThreadResumed* release_runtimethreadresumed();
  ::SharpDetect::Common::Messages::Notify_RuntimeThreadResumed* mutable_runtimethreadresumed();
  void set_allocated_runtimethreadresumed(::SharpDetect::Common::Messages::Notify_RuntimeThreadResumed* runtimethreadresumed);
  private:
  const ::SharpDetect::Common::Messages::Notify_RuntimeThreadResumed& _internal_runtimethreadresumed() const;
  ::SharpDetect::Common::Messages::Notify_RuntimeThreadResumed* _internal_mutable_runtimethreadresumed();
  public:

  // .SharpDetect.Common.Messages.Notify_SurvivingReferences SurvivingReferences = 25;
  bool has_survivingreferences() const;
  private:
  bool _internal_has_survivingreferences() const;
  public:
  void clear_survivingreferences();
  const ::SharpDetect::Common::Messages::Notify_SurvivingReferences& survivingreferences() const;
  ::SharpDetect::Common::Messages::Notify_SurvivingReferences* release_survivingreferences();
  ::SharpDetect::Common::Messages::Notify_SurvivingReferences* mutable_survivingreferences();
  void set_allocated_survivingreferences(::SharpDetect::Common::Messages::Notify_SurvivingReferences* survivingreferences);
  private:
  const ::SharpDetect::Common::Messages::Notify_SurvivingReferences& _internal_survivingreferences() const;
  ::SharpDetect::Common::Messages::Notify_SurvivingReferences* _internal_mutable_survivingreferences();
  public:

  // .SharpDetect.Common.Messages.Notify_MovedReferences MovedReferences = 26;
  bool has_movedreferences() const;
  private:
  bool _internal_has_movedreferences() const;
  public:
  void clear_movedreferences();
  const ::SharpDetect::Common::Messages::Notify_MovedReferences& movedreferences() const;
  ::SharpDetect::Common::Messages::Notify_MovedReferences* release_movedreferences();
  ::SharpDetect::Common::Messages::Notify_MovedReferences* mutable_movedreferences();
  void set_allocated_movedreferences(::SharpDetect::Common::Messages::Notify_MovedReferences* movedreferences);
  private:
  const ::SharpDetect::Common::Messages::Notify_MovedReferences& _internal_movedreferences() const;
  ::SharpDetect::Common::Messages::Notify_MovedReferences* _internal_mutable_movedreferences();
  public:

  void clear_Payload();
  PayloadCase Payload_case() const;
  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.NotifyMessage)
 private:
  class _Internal;
  void set_has_response();
  void set_has_profilerinitialized();
  void set_has_profilerdestroyed();
  void set_has_moduleloaded();
  void set_has_classloaded();
  void set_has_functionjitcompilationstarted();
  void set_has_threadcreated();
  void set_has_threaddestroyed();
  void set_has_typeinjected();
  void set_has_typereferenced();
  void set_has_methodinjected();
  void set_has_helpermethodreferenced();
  void set_has_wrappermethodreferenced();
  void set_has_methodcalled();
  void set_has_methodreturned();
  void set_has_methodwrapperinjected();
  void set_has_garbagecollectionstarted();
  void set_has_garbagecollectionfinished();
  void set_has_runtimesuspendstarted();
  void set_has_runtimesuspendfinished();
  void set_has_runtimethreadsuspended();
  void set_has_runtimethreadresumed();
  void set_has_survivingreferences();
  void set_has_movedreferences();

  inline bool has_Payload() const;
  inline void clear_has_Payload();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 notificationid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 thread_;
  union PayloadUnion {
    PayloadUnion() {}
    ::SharpDetect::Common::Messages::Response* response_;
    ::SharpDetect::Common::Messages::Notify_ProfilerInitialized* profilerinitialized_;
    ::SharpDetect::Common::Messages::Notify_ProfilerDestroyed* profilerdestroyed_;
    ::SharpDetect::Common::Messages::Notify_ModuleLoaded* moduleloaded_;
    ::SharpDetect::Common::Messages::Notify_ClassLoaded* classloaded_;
    ::SharpDetect::Common::Messages::Notify_FunctionJITCompilationStarted* functionjitcompilationstarted_;
    ::SharpDetect::Common::Messages::Notify_ThreadCreated* threadcreated_;
    ::SharpDetect::Common::Messages::Notify_ThreadDestroyed* threaddestroyed_;
    ::SharpDetect::Common::Messages::Notify_TypeInjected* typeinjected_;
    ::SharpDetect::Common::Messages::Notify_TypeReferenced* typereferenced_;
    ::SharpDetect::Common::Messages::Notify_MethodInjected* methodinjected_;
    ::SharpDetect::Common::Messages::Notify_HelperMethodReferenced* helpermethodreferenced_;
    ::SharpDetect::Common::Messages::Notify_WrapperMethodReferenced* wrappermethodreferenced_;
    ::SharpDetect::Common::Messages::Notify_MethodCalled* methodcalled_;
    ::SharpDetect::Common::Messages::Notify_MethodReturned* methodreturned_;
    ::SharpDetect::Common::Messages::Notify_MethodWrapperInjected* methodwrapperinjected_;
    ::SharpDetect::Common::Messages::Notify_GarbageCollectionStarted* garbagecollectionstarted_;
    ::SharpDetect::Common::Messages::Notify_GarbageCollectionFinished* garbagecollectionfinished_;
    ::SharpDetect::Common::Messages::Notify_RuntimeSuspendStarted* runtimesuspendstarted_;
    ::SharpDetect::Common::Messages::Notify_RuntimeSuspendFinished* runtimesuspendfinished_;
    ::SharpDetect::Common::Messages::Notify_RuntimeThreadSuspended* runtimethreadsuspended_;
    ::SharpDetect::Common::Messages::Notify_RuntimeThreadResumed* runtimethreadresumed_;
    ::SharpDetect::Common::Messages::Notify_SurvivingReferences* survivingreferences_;
    ::SharpDetect::Common::Messages::Notify_MovedReferences* movedreferences_;
  } Payload_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Response :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }
  inline void Swap(Response* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const final {
    return CreateMaybeMessage<Response>(nullptr);
  }

  Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Response";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequestIdFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // uint64 RequestId = 1;
  void clear_requestid();
  ::PROTOBUF_NAMESPACE_ID::uint64 requestid() const;
  void set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_requestid() const;
  void _internal_set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // bool Result = 2;
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Response)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 requestid_;
  bool result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_ProfilerInitialized :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_ProfilerInitialized) */ {
 public:
  Notify_ProfilerInitialized();
  virtual ~Notify_ProfilerInitialized();

  Notify_ProfilerInitialized(const Notify_ProfilerInitialized& from);
  Notify_ProfilerInitialized(Notify_ProfilerInitialized&& from) noexcept
    : Notify_ProfilerInitialized() {
    *this = ::std::move(from);
  }

  inline Notify_ProfilerInitialized& operator=(const Notify_ProfilerInitialized& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_ProfilerInitialized& operator=(Notify_ProfilerInitialized&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_ProfilerInitialized& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_ProfilerInitialized* internal_default_instance() {
    return reinterpret_cast<const Notify_ProfilerInitialized*>(
               &_Notify_ProfilerInitialized_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Notify_ProfilerInitialized& a, Notify_ProfilerInitialized& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_ProfilerInitialized* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_ProfilerInitialized* New() const final {
    return CreateMaybeMessage<Notify_ProfilerInitialized>(nullptr);
  }

  Notify_ProfilerInitialized* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_ProfilerInitialized>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_ProfilerInitialized& from);
  void MergeFrom(const Notify_ProfilerInitialized& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_ProfilerInitialized* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_ProfilerInitialized";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_ProfilerInitialized)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_ProfilerDestroyed :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_ProfilerDestroyed) */ {
 public:
  Notify_ProfilerDestroyed();
  virtual ~Notify_ProfilerDestroyed();

  Notify_ProfilerDestroyed(const Notify_ProfilerDestroyed& from);
  Notify_ProfilerDestroyed(Notify_ProfilerDestroyed&& from) noexcept
    : Notify_ProfilerDestroyed() {
    *this = ::std::move(from);
  }

  inline Notify_ProfilerDestroyed& operator=(const Notify_ProfilerDestroyed& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_ProfilerDestroyed& operator=(Notify_ProfilerDestroyed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_ProfilerDestroyed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_ProfilerDestroyed* internal_default_instance() {
    return reinterpret_cast<const Notify_ProfilerDestroyed*>(
               &_Notify_ProfilerDestroyed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Notify_ProfilerDestroyed& a, Notify_ProfilerDestroyed& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_ProfilerDestroyed* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_ProfilerDestroyed* New() const final {
    return CreateMaybeMessage<Notify_ProfilerDestroyed>(nullptr);
  }

  Notify_ProfilerDestroyed* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_ProfilerDestroyed>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_ProfilerDestroyed& from);
  void MergeFrom(const Notify_ProfilerDestroyed& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_ProfilerDestroyed* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_ProfilerDestroyed";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_ProfilerDestroyed)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_ModuleLoaded :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_ModuleLoaded) */ {
 public:
  Notify_ModuleLoaded();
  virtual ~Notify_ModuleLoaded();

  Notify_ModuleLoaded(const Notify_ModuleLoaded& from);
  Notify_ModuleLoaded(Notify_ModuleLoaded&& from) noexcept
    : Notify_ModuleLoaded() {
    *this = ::std::move(from);
  }

  inline Notify_ModuleLoaded& operator=(const Notify_ModuleLoaded& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_ModuleLoaded& operator=(Notify_ModuleLoaded&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_ModuleLoaded& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_ModuleLoaded* internal_default_instance() {
    return reinterpret_cast<const Notify_ModuleLoaded*>(
               &_Notify_ModuleLoaded_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Notify_ModuleLoaded& a, Notify_ModuleLoaded& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_ModuleLoaded* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_ModuleLoaded* New() const final {
    return CreateMaybeMessage<Notify_ModuleLoaded>(nullptr);
  }

  Notify_ModuleLoaded* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_ModuleLoaded>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_ModuleLoaded& from);
  void MergeFrom(const Notify_ModuleLoaded& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_ModuleLoaded* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_ModuleLoaded";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModulePathFieldNumber = 2,
    kModuleIdFieldNumber = 1,
  };
  // string ModulePath = 2;
  void clear_modulepath();
  const std::string& modulepath() const;
  void set_modulepath(const std::string& value);
  void set_modulepath(std::string&& value);
  void set_modulepath(const char* value);
  void set_modulepath(const char* value, size_t size);
  std::string* mutable_modulepath();
  std::string* release_modulepath();
  void set_allocated_modulepath(std::string* modulepath);
  private:
  const std::string& _internal_modulepath() const;
  void _internal_set_modulepath(const std::string& value);
  std::string* _internal_mutable_modulepath();
  public:

  // uint64 ModuleId = 1;
  void clear_moduleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid() const;
  void set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_moduleid() const;
  void _internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_ModuleLoaded)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr modulepath_;
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_ClassLoaded :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_ClassLoaded) */ {
 public:
  Notify_ClassLoaded();
  virtual ~Notify_ClassLoaded();

  Notify_ClassLoaded(const Notify_ClassLoaded& from);
  Notify_ClassLoaded(Notify_ClassLoaded&& from) noexcept
    : Notify_ClassLoaded() {
    *this = ::std::move(from);
  }

  inline Notify_ClassLoaded& operator=(const Notify_ClassLoaded& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_ClassLoaded& operator=(Notify_ClassLoaded&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_ClassLoaded& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_ClassLoaded* internal_default_instance() {
    return reinterpret_cast<const Notify_ClassLoaded*>(
               &_Notify_ClassLoaded_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Notify_ClassLoaded& a, Notify_ClassLoaded& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_ClassLoaded* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_ClassLoaded* New() const final {
    return CreateMaybeMessage<Notify_ClassLoaded>(nullptr);
  }

  Notify_ClassLoaded* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_ClassLoaded>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_ClassLoaded& from);
  void MergeFrom(const Notify_ClassLoaded& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_ClassLoaded* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_ClassLoaded";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModuleIdFieldNumber = 1,
    kClassTokenFieldNumber = 2,
  };
  // uint64 ModuleId = 1;
  void clear_moduleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid() const;
  void set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_moduleid() const;
  void _internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 ClassToken = 2;
  void clear_classtoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 classtoken() const;
  void set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_classtoken() const;
  void _internal_set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_ClassLoaded)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 classtoken_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_FunctionJITCompilationStarted :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_FunctionJITCompilationStarted) */ {
 public:
  Notify_FunctionJITCompilationStarted();
  virtual ~Notify_FunctionJITCompilationStarted();

  Notify_FunctionJITCompilationStarted(const Notify_FunctionJITCompilationStarted& from);
  Notify_FunctionJITCompilationStarted(Notify_FunctionJITCompilationStarted&& from) noexcept
    : Notify_FunctionJITCompilationStarted() {
    *this = ::std::move(from);
  }

  inline Notify_FunctionJITCompilationStarted& operator=(const Notify_FunctionJITCompilationStarted& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_FunctionJITCompilationStarted& operator=(Notify_FunctionJITCompilationStarted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_FunctionJITCompilationStarted& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_FunctionJITCompilationStarted* internal_default_instance() {
    return reinterpret_cast<const Notify_FunctionJITCompilationStarted*>(
               &_Notify_FunctionJITCompilationStarted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Notify_FunctionJITCompilationStarted& a, Notify_FunctionJITCompilationStarted& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_FunctionJITCompilationStarted* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_FunctionJITCompilationStarted* New() const final {
    return CreateMaybeMessage<Notify_FunctionJITCompilationStarted>(nullptr);
  }

  Notify_FunctionJITCompilationStarted* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_FunctionJITCompilationStarted>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_FunctionJITCompilationStarted& from);
  void MergeFrom(const Notify_FunctionJITCompilationStarted& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_FunctionJITCompilationStarted* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_FunctionJITCompilationStarted";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModuleIdFieldNumber = 1,
    kClassTokenFieldNumber = 2,
    kFunctionTokenFieldNumber = 3,
  };
  // uint64 ModuleId = 1;
  void clear_moduleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid() const;
  void set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_moduleid() const;
  void _internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 ClassToken = 2;
  void clear_classtoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 classtoken() const;
  void set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_classtoken() const;
  void _internal_set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 FunctionToken = 3;
  void clear_functiontoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 functiontoken() const;
  void set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_functiontoken() const;
  void _internal_set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_FunctionJITCompilationStarted)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 classtoken_;
  ::PROTOBUF_NAMESPACE_ID::uint32 functiontoken_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_ThreadCreated :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_ThreadCreated) */ {
 public:
  Notify_ThreadCreated();
  virtual ~Notify_ThreadCreated();

  Notify_ThreadCreated(const Notify_ThreadCreated& from);
  Notify_ThreadCreated(Notify_ThreadCreated&& from) noexcept
    : Notify_ThreadCreated() {
    *this = ::std::move(from);
  }

  inline Notify_ThreadCreated& operator=(const Notify_ThreadCreated& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_ThreadCreated& operator=(Notify_ThreadCreated&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_ThreadCreated& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_ThreadCreated* internal_default_instance() {
    return reinterpret_cast<const Notify_ThreadCreated*>(
               &_Notify_ThreadCreated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Notify_ThreadCreated& a, Notify_ThreadCreated& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_ThreadCreated* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_ThreadCreated* New() const final {
    return CreateMaybeMessage<Notify_ThreadCreated>(nullptr);
  }

  Notify_ThreadCreated* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_ThreadCreated>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_ThreadCreated& from);
  void MergeFrom(const Notify_ThreadCreated& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_ThreadCreated* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_ThreadCreated";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThreadIdFieldNumber = 1,
  };
  // uint64 ThreadId = 1;
  void clear_threadid();
  ::PROTOBUF_NAMESPACE_ID::uint64 threadid() const;
  void set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_threadid() const;
  void _internal_set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_ThreadCreated)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 threadid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_ThreadDestroyed :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_ThreadDestroyed) */ {
 public:
  Notify_ThreadDestroyed();
  virtual ~Notify_ThreadDestroyed();

  Notify_ThreadDestroyed(const Notify_ThreadDestroyed& from);
  Notify_ThreadDestroyed(Notify_ThreadDestroyed&& from) noexcept
    : Notify_ThreadDestroyed() {
    *this = ::std::move(from);
  }

  inline Notify_ThreadDestroyed& operator=(const Notify_ThreadDestroyed& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_ThreadDestroyed& operator=(Notify_ThreadDestroyed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_ThreadDestroyed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_ThreadDestroyed* internal_default_instance() {
    return reinterpret_cast<const Notify_ThreadDestroyed*>(
               &_Notify_ThreadDestroyed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(Notify_ThreadDestroyed& a, Notify_ThreadDestroyed& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_ThreadDestroyed* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_ThreadDestroyed* New() const final {
    return CreateMaybeMessage<Notify_ThreadDestroyed>(nullptr);
  }

  Notify_ThreadDestroyed* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_ThreadDestroyed>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_ThreadDestroyed& from);
  void MergeFrom(const Notify_ThreadDestroyed& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_ThreadDestroyed* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_ThreadDestroyed";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThreadIdFieldNumber = 1,
  };
  // uint64 ThreadId = 1;
  void clear_threadid();
  ::PROTOBUF_NAMESPACE_ID::uint64 threadid() const;
  void set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_threadid() const;
  void _internal_set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_ThreadDestroyed)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 threadid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_TypeInjected :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_TypeInjected) */ {
 public:
  Notify_TypeInjected();
  virtual ~Notify_TypeInjected();

  Notify_TypeInjected(const Notify_TypeInjected& from);
  Notify_TypeInjected(Notify_TypeInjected&& from) noexcept
    : Notify_TypeInjected() {
    *this = ::std::move(from);
  }

  inline Notify_TypeInjected& operator=(const Notify_TypeInjected& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_TypeInjected& operator=(Notify_TypeInjected&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_TypeInjected& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_TypeInjected* internal_default_instance() {
    return reinterpret_cast<const Notify_TypeInjected*>(
               &_Notify_TypeInjected_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(Notify_TypeInjected& a, Notify_TypeInjected& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_TypeInjected* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_TypeInjected* New() const final {
    return CreateMaybeMessage<Notify_TypeInjected>(nullptr);
  }

  Notify_TypeInjected* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_TypeInjected>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_TypeInjected& from);
  void MergeFrom(const Notify_TypeInjected& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_TypeInjected* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_TypeInjected";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModuleIdFieldNumber = 1,
    kClassTokenFieldNumber = 2,
  };
  // uint64 ModuleId = 1;
  void clear_moduleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid() const;
  void set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_moduleid() const;
  void _internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 ClassToken = 2;
  void clear_classtoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 classtoken() const;
  void set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_classtoken() const;
  void _internal_set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_TypeInjected)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 classtoken_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_TypeReferenced :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_TypeReferenced) */ {
 public:
  Notify_TypeReferenced();
  virtual ~Notify_TypeReferenced();

  Notify_TypeReferenced(const Notify_TypeReferenced& from);
  Notify_TypeReferenced(Notify_TypeReferenced&& from) noexcept
    : Notify_TypeReferenced() {
    *this = ::std::move(from);
  }

  inline Notify_TypeReferenced& operator=(const Notify_TypeReferenced& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_TypeReferenced& operator=(Notify_TypeReferenced&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_TypeReferenced& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_TypeReferenced* internal_default_instance() {
    return reinterpret_cast<const Notify_TypeReferenced*>(
               &_Notify_TypeReferenced_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(Notify_TypeReferenced& a, Notify_TypeReferenced& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_TypeReferenced* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_TypeReferenced* New() const final {
    return CreateMaybeMessage<Notify_TypeReferenced>(nullptr);
  }

  Notify_TypeReferenced* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_TypeReferenced>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_TypeReferenced& from);
  void MergeFrom(const Notify_TypeReferenced& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_TypeReferenced* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_TypeReferenced";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModuleIdFieldNumber = 1,
    kClassTokenFieldNumber = 2,
  };
  // uint64 ModuleId = 1;
  void clear_moduleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid() const;
  void set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_moduleid() const;
  void _internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 ClassToken = 2;
  void clear_classtoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 classtoken() const;
  void set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_classtoken() const;
  void _internal_set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_TypeReferenced)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 classtoken_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_MethodInjected :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_MethodInjected) */ {
 public:
  Notify_MethodInjected();
  virtual ~Notify_MethodInjected();

  Notify_MethodInjected(const Notify_MethodInjected& from);
  Notify_MethodInjected(Notify_MethodInjected&& from) noexcept
    : Notify_MethodInjected() {
    *this = ::std::move(from);
  }

  inline Notify_MethodInjected& operator=(const Notify_MethodInjected& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_MethodInjected& operator=(Notify_MethodInjected&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_MethodInjected& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_MethodInjected* internal_default_instance() {
    return reinterpret_cast<const Notify_MethodInjected*>(
               &_Notify_MethodInjected_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(Notify_MethodInjected& a, Notify_MethodInjected& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_MethodInjected* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_MethodInjected* New() const final {
    return CreateMaybeMessage<Notify_MethodInjected>(nullptr);
  }

  Notify_MethodInjected* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_MethodInjected>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_MethodInjected& from);
  void MergeFrom(const Notify_MethodInjected& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_MethodInjected* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_MethodInjected";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModuleIdFieldNumber = 1,
    kClassTokenFieldNumber = 2,
    kFunctionTokenFieldNumber = 3,
    kTypeFieldNumber = 4,
  };
  // uint64 ModuleId = 1;
  void clear_moduleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid() const;
  void set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_moduleid() const;
  void _internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 ClassToken = 2;
  void clear_classtoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 classtoken() const;
  void set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_classtoken() const;
  void _internal_set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 FunctionToken = 3;
  void clear_functiontoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 functiontoken() const;
  void set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_functiontoken() const;
  void _internal_set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .SharpDetect.Common.Messages.MethodType Type = 4;
  void clear_type();
  ::SharpDetect::Common::Messages::MethodType type() const;
  void set_type(::SharpDetect::Common::Messages::MethodType value);
  private:
  ::SharpDetect::Common::Messages::MethodType _internal_type() const;
  void _internal_set_type(::SharpDetect::Common::Messages::MethodType value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_MethodInjected)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 classtoken_;
  ::PROTOBUF_NAMESPACE_ID::uint32 functiontoken_;
  int type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_MethodWrapperInjected :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_MethodWrapperInjected) */ {
 public:
  Notify_MethodWrapperInjected();
  virtual ~Notify_MethodWrapperInjected();

  Notify_MethodWrapperInjected(const Notify_MethodWrapperInjected& from);
  Notify_MethodWrapperInjected(Notify_MethodWrapperInjected&& from) noexcept
    : Notify_MethodWrapperInjected() {
    *this = ::std::move(from);
  }

  inline Notify_MethodWrapperInjected& operator=(const Notify_MethodWrapperInjected& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_MethodWrapperInjected& operator=(Notify_MethodWrapperInjected&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_MethodWrapperInjected& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_MethodWrapperInjected* internal_default_instance() {
    return reinterpret_cast<const Notify_MethodWrapperInjected*>(
               &_Notify_MethodWrapperInjected_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(Notify_MethodWrapperInjected& a, Notify_MethodWrapperInjected& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_MethodWrapperInjected* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_MethodWrapperInjected* New() const final {
    return CreateMaybeMessage<Notify_MethodWrapperInjected>(nullptr);
  }

  Notify_MethodWrapperInjected* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_MethodWrapperInjected>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_MethodWrapperInjected& from);
  void MergeFrom(const Notify_MethodWrapperInjected& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_MethodWrapperInjected* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_MethodWrapperInjected";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModuleIdFieldNumber = 1,
    kClassTokenFieldNumber = 2,
    kOriginalFunctionTokenFieldNumber = 3,
    kWrapperFunctionTokenFieldNumber = 4,
  };
  // uint64 ModuleId = 1;
  void clear_moduleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid() const;
  void set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_moduleid() const;
  void _internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 ClassToken = 2;
  void clear_classtoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 classtoken() const;
  void set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_classtoken() const;
  void _internal_set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 OriginalFunctionToken = 3;
  void clear_originalfunctiontoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 originalfunctiontoken() const;
  void set_originalfunctiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_originalfunctiontoken() const;
  void _internal_set_originalfunctiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 WrapperFunctionToken = 4;
  void clear_wrapperfunctiontoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 wrapperfunctiontoken() const;
  void set_wrapperfunctiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_wrapperfunctiontoken() const;
  void _internal_set_wrapperfunctiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_MethodWrapperInjected)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 classtoken_;
  ::PROTOBUF_NAMESPACE_ID::uint32 originalfunctiontoken_;
  ::PROTOBUF_NAMESPACE_ID::uint32 wrapperfunctiontoken_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_HelperMethodReferenced :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_HelperMethodReferenced) */ {
 public:
  Notify_HelperMethodReferenced();
  virtual ~Notify_HelperMethodReferenced();

  Notify_HelperMethodReferenced(const Notify_HelperMethodReferenced& from);
  Notify_HelperMethodReferenced(Notify_HelperMethodReferenced&& from) noexcept
    : Notify_HelperMethodReferenced() {
    *this = ::std::move(from);
  }

  inline Notify_HelperMethodReferenced& operator=(const Notify_HelperMethodReferenced& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_HelperMethodReferenced& operator=(Notify_HelperMethodReferenced&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_HelperMethodReferenced& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_HelperMethodReferenced* internal_default_instance() {
    return reinterpret_cast<const Notify_HelperMethodReferenced*>(
               &_Notify_HelperMethodReferenced_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(Notify_HelperMethodReferenced& a, Notify_HelperMethodReferenced& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_HelperMethodReferenced* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_HelperMethodReferenced* New() const final {
    return CreateMaybeMessage<Notify_HelperMethodReferenced>(nullptr);
  }

  Notify_HelperMethodReferenced* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_HelperMethodReferenced>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_HelperMethodReferenced& from);
  void MergeFrom(const Notify_HelperMethodReferenced& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_HelperMethodReferenced* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_HelperMethodReferenced";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModuleIdFieldNumber = 1,
    kClassTokenFieldNumber = 2,
    kFunctionTokenFieldNumber = 3,
    kTypeFieldNumber = 4,
  };
  // uint64 ModuleId = 1;
  void clear_moduleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid() const;
  void set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_moduleid() const;
  void _internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 ClassToken = 2;
  void clear_classtoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 classtoken() const;
  void set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_classtoken() const;
  void _internal_set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 FunctionToken = 3;
  void clear_functiontoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 functiontoken() const;
  void set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_functiontoken() const;
  void _internal_set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .SharpDetect.Common.Messages.MethodType Type = 4;
  void clear_type();
  ::SharpDetect::Common::Messages::MethodType type() const;
  void set_type(::SharpDetect::Common::Messages::MethodType value);
  private:
  ::SharpDetect::Common::Messages::MethodType _internal_type() const;
  void _internal_set_type(::SharpDetect::Common::Messages::MethodType value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_HelperMethodReferenced)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 classtoken_;
  ::PROTOBUF_NAMESPACE_ID::uint32 functiontoken_;
  int type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_WrapperMethodReferenced :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_WrapperMethodReferenced) */ {
 public:
  Notify_WrapperMethodReferenced();
  virtual ~Notify_WrapperMethodReferenced();

  Notify_WrapperMethodReferenced(const Notify_WrapperMethodReferenced& from);
  Notify_WrapperMethodReferenced(Notify_WrapperMethodReferenced&& from) noexcept
    : Notify_WrapperMethodReferenced() {
    *this = ::std::move(from);
  }

  inline Notify_WrapperMethodReferenced& operator=(const Notify_WrapperMethodReferenced& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_WrapperMethodReferenced& operator=(Notify_WrapperMethodReferenced&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_WrapperMethodReferenced& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_WrapperMethodReferenced* internal_default_instance() {
    return reinterpret_cast<const Notify_WrapperMethodReferenced*>(
               &_Notify_WrapperMethodReferenced_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(Notify_WrapperMethodReferenced& a, Notify_WrapperMethodReferenced& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_WrapperMethodReferenced* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_WrapperMethodReferenced* New() const final {
    return CreateMaybeMessage<Notify_WrapperMethodReferenced>(nullptr);
  }

  Notify_WrapperMethodReferenced* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_WrapperMethodReferenced>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_WrapperMethodReferenced& from);
  void MergeFrom(const Notify_WrapperMethodReferenced& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_WrapperMethodReferenced* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_WrapperMethodReferenced";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDefModuleIdFieldNumber = 1,
    kDefClassTokenFieldNumber = 2,
    kDefFunctionTokenFieldNumber = 3,
    kRefModuleIdFieldNumber = 4,
    kRefClassTokenFieldNumber = 5,
    kRefFunctionTokenFieldNumber = 6,
  };
  // uint64 DefModuleId = 1;
  void clear_defmoduleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 defmoduleid() const;
  void set_defmoduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_defmoduleid() const;
  void _internal_set_defmoduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 DefClassToken = 2;
  void clear_defclasstoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 defclasstoken() const;
  void set_defclasstoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_defclasstoken() const;
  void _internal_set_defclasstoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 DefFunctionToken = 3;
  void clear_deffunctiontoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 deffunctiontoken() const;
  void set_deffunctiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_deffunctiontoken() const;
  void _internal_set_deffunctiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 RefModuleId = 4;
  void clear_refmoduleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 refmoduleid() const;
  void set_refmoduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_refmoduleid() const;
  void _internal_set_refmoduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 RefClassToken = 5;
  void clear_refclasstoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 refclasstoken() const;
  void set_refclasstoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_refclasstoken() const;
  void _internal_set_refclasstoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 RefFunctionToken = 6;
  void clear_reffunctiontoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 reffunctiontoken() const;
  void set_reffunctiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reffunctiontoken() const;
  void _internal_set_reffunctiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_WrapperMethodReferenced)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 defmoduleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 defclasstoken_;
  ::PROTOBUF_NAMESPACE_ID::uint32 deffunctiontoken_;
  ::PROTOBUF_NAMESPACE_ID::uint64 refmoduleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 refclasstoken_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reffunctiontoken_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_MethodCalled :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_MethodCalled) */ {
 public:
  Notify_MethodCalled();
  virtual ~Notify_MethodCalled();

  Notify_MethodCalled(const Notify_MethodCalled& from);
  Notify_MethodCalled(Notify_MethodCalled&& from) noexcept
    : Notify_MethodCalled() {
    *this = ::std::move(from);
  }

  inline Notify_MethodCalled& operator=(const Notify_MethodCalled& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_MethodCalled& operator=(Notify_MethodCalled&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_MethodCalled& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_MethodCalled* internal_default_instance() {
    return reinterpret_cast<const Notify_MethodCalled*>(
               &_Notify_MethodCalled_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(Notify_MethodCalled& a, Notify_MethodCalled& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_MethodCalled* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_MethodCalled* New() const final {
    return CreateMaybeMessage<Notify_MethodCalled>(nullptr);
  }

  Notify_MethodCalled* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_MethodCalled>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_MethodCalled& from);
  void MergeFrom(const Notify_MethodCalled& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_MethodCalled* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_MethodCalled";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArgumentValuesFieldNumber = 4,
    kArgumentOffsetsFieldNumber = 5,
    kModuleIdFieldNumber = 1,
    kClassTokenFieldNumber = 2,
    kFunctionTokenFieldNumber = 3,
  };
  // bytes ArgumentValues = 4;
  void clear_argumentvalues();
  const std::string& argumentvalues() const;
  void set_argumentvalues(const std::string& value);
  void set_argumentvalues(std::string&& value);
  void set_argumentvalues(const char* value);
  void set_argumentvalues(const void* value, size_t size);
  std::string* mutable_argumentvalues();
  std::string* release_argumentvalues();
  void set_allocated_argumentvalues(std::string* argumentvalues);
  private:
  const std::string& _internal_argumentvalues() const;
  void _internal_set_argumentvalues(const std::string& value);
  std::string* _internal_mutable_argumentvalues();
  public:

  // bytes ArgumentOffsets = 5;
  void clear_argumentoffsets();
  const std::string& argumentoffsets() const;
  void set_argumentoffsets(const std::string& value);
  void set_argumentoffsets(std::string&& value);
  void set_argumentoffsets(const char* value);
  void set_argumentoffsets(const void* value, size_t size);
  std::string* mutable_argumentoffsets();
  std::string* release_argumentoffsets();
  void set_allocated_argumentoffsets(std::string* argumentoffsets);
  private:
  const std::string& _internal_argumentoffsets() const;
  void _internal_set_argumentoffsets(const std::string& value);
  std::string* _internal_mutable_argumentoffsets();
  public:

  // uint64 ModuleId = 1;
  void clear_moduleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid() const;
  void set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_moduleid() const;
  void _internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 ClassToken = 2;
  void clear_classtoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 classtoken() const;
  void set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_classtoken() const;
  void _internal_set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 FunctionToken = 3;
  void clear_functiontoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 functiontoken() const;
  void set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_functiontoken() const;
  void _internal_set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_MethodCalled)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr argumentvalues_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr argumentoffsets_;
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 classtoken_;
  ::PROTOBUF_NAMESPACE_ID::uint32 functiontoken_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_MethodReturned :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_MethodReturned) */ {
 public:
  Notify_MethodReturned();
  virtual ~Notify_MethodReturned();

  Notify_MethodReturned(const Notify_MethodReturned& from);
  Notify_MethodReturned(Notify_MethodReturned&& from) noexcept
    : Notify_MethodReturned() {
    *this = ::std::move(from);
  }

  inline Notify_MethodReturned& operator=(const Notify_MethodReturned& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_MethodReturned& operator=(Notify_MethodReturned&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_MethodReturned& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_MethodReturned* internal_default_instance() {
    return reinterpret_cast<const Notify_MethodReturned*>(
               &_Notify_MethodReturned_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(Notify_MethodReturned& a, Notify_MethodReturned& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_MethodReturned* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_MethodReturned* New() const final {
    return CreateMaybeMessage<Notify_MethodReturned>(nullptr);
  }

  Notify_MethodReturned* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_MethodReturned>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_MethodReturned& from);
  void MergeFrom(const Notify_MethodReturned& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_MethodReturned* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_MethodReturned";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 4,
    kByRefArgumentValuesFieldNumber = 5,
    kByRefArgumentOffsetsFieldNumber = 6,
    kModuleIdFieldNumber = 1,
    kClassTokenFieldNumber = 2,
    kFunctionTokenFieldNumber = 3,
  };
  // bytes ReturnValue = 4;
  void clear_returnvalue();
  const std::string& returnvalue() const;
  void set_returnvalue(const std::string& value);
  void set_returnvalue(std::string&& value);
  void set_returnvalue(const char* value);
  void set_returnvalue(const void* value, size_t size);
  std::string* mutable_returnvalue();
  std::string* release_returnvalue();
  void set_allocated_returnvalue(std::string* returnvalue);
  private:
  const std::string& _internal_returnvalue() const;
  void _internal_set_returnvalue(const std::string& value);
  std::string* _internal_mutable_returnvalue();
  public:

  // bytes ByRefArgumentValues = 5;
  void clear_byrefargumentvalues();
  const std::string& byrefargumentvalues() const;
  void set_byrefargumentvalues(const std::string& value);
  void set_byrefargumentvalues(std::string&& value);
  void set_byrefargumentvalues(const char* value);
  void set_byrefargumentvalues(const void* value, size_t size);
  std::string* mutable_byrefargumentvalues();
  std::string* release_byrefargumentvalues();
  void set_allocated_byrefargumentvalues(std::string* byrefargumentvalues);
  private:
  const std::string& _internal_byrefargumentvalues() const;
  void _internal_set_byrefargumentvalues(const std::string& value);
  std::string* _internal_mutable_byrefargumentvalues();
  public:

  // bytes ByRefArgumentOffsets = 6;
  void clear_byrefargumentoffsets();
  const std::string& byrefargumentoffsets() const;
  void set_byrefargumentoffsets(const std::string& value);
  void set_byrefargumentoffsets(std::string&& value);
  void set_byrefargumentoffsets(const char* value);
  void set_byrefargumentoffsets(const void* value, size_t size);
  std::string* mutable_byrefargumentoffsets();
  std::string* release_byrefargumentoffsets();
  void set_allocated_byrefargumentoffsets(std::string* byrefargumentoffsets);
  private:
  const std::string& _internal_byrefargumentoffsets() const;
  void _internal_set_byrefargumentoffsets(const std::string& value);
  std::string* _internal_mutable_byrefargumentoffsets();
  public:

  // uint64 ModuleId = 1;
  void clear_moduleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid() const;
  void set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_moduleid() const;
  void _internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 ClassToken = 2;
  void clear_classtoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 classtoken() const;
  void set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_classtoken() const;
  void _internal_set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 FunctionToken = 3;
  void clear_functiontoken();
  ::PROTOBUF_NAMESPACE_ID::uint32 functiontoken() const;
  void set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_functiontoken() const;
  void _internal_set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_MethodReturned)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr returnvalue_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr byrefargumentvalues_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr byrefargumentoffsets_;
  ::PROTOBUF_NAMESPACE_ID::uint64 moduleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 classtoken_;
  ::PROTOBUF_NAMESPACE_ID::uint32 functiontoken_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_GarbageCollectionStarted :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_GarbageCollectionStarted) */ {
 public:
  Notify_GarbageCollectionStarted();
  virtual ~Notify_GarbageCollectionStarted();

  Notify_GarbageCollectionStarted(const Notify_GarbageCollectionStarted& from);
  Notify_GarbageCollectionStarted(Notify_GarbageCollectionStarted&& from) noexcept
    : Notify_GarbageCollectionStarted() {
    *this = ::std::move(from);
  }

  inline Notify_GarbageCollectionStarted& operator=(const Notify_GarbageCollectionStarted& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_GarbageCollectionStarted& operator=(Notify_GarbageCollectionStarted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_GarbageCollectionStarted& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_GarbageCollectionStarted* internal_default_instance() {
    return reinterpret_cast<const Notify_GarbageCollectionStarted*>(
               &_Notify_GarbageCollectionStarted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(Notify_GarbageCollectionStarted& a, Notify_GarbageCollectionStarted& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_GarbageCollectionStarted* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_GarbageCollectionStarted* New() const final {
    return CreateMaybeMessage<Notify_GarbageCollectionStarted>(nullptr);
  }

  Notify_GarbageCollectionStarted* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_GarbageCollectionStarted>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_GarbageCollectionStarted& from);
  void MergeFrom(const Notify_GarbageCollectionStarted& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_GarbageCollectionStarted* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_GarbageCollectionStarted";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGenerationsCollectedFieldNumber = 1,
    kGenerationSegmentBoundsFieldNumber = 2,
  };
  // bytes GenerationsCollected = 1;
  void clear_generationscollected();
  const std::string& generationscollected() const;
  void set_generationscollected(const std::string& value);
  void set_generationscollected(std::string&& value);
  void set_generationscollected(const char* value);
  void set_generationscollected(const void* value, size_t size);
  std::string* mutable_generationscollected();
  std::string* release_generationscollected();
  void set_allocated_generationscollected(std::string* generationscollected);
  private:
  const std::string& _internal_generationscollected() const;
  void _internal_set_generationscollected(const std::string& value);
  std::string* _internal_mutable_generationscollected();
  public:

  // bytes GenerationSegmentBounds = 2;
  void clear_generationsegmentbounds();
  const std::string& generationsegmentbounds() const;
  void set_generationsegmentbounds(const std::string& value);
  void set_generationsegmentbounds(std::string&& value);
  void set_generationsegmentbounds(const char* value);
  void set_generationsegmentbounds(const void* value, size_t size);
  std::string* mutable_generationsegmentbounds();
  std::string* release_generationsegmentbounds();
  void set_allocated_generationsegmentbounds(std::string* generationsegmentbounds);
  private:
  const std::string& _internal_generationsegmentbounds() const;
  void _internal_set_generationsegmentbounds(const std::string& value);
  std::string* _internal_mutable_generationsegmentbounds();
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_GarbageCollectionStarted)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr generationscollected_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr generationsegmentbounds_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_GarbageCollectionFinished :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_GarbageCollectionFinished) */ {
 public:
  Notify_GarbageCollectionFinished();
  virtual ~Notify_GarbageCollectionFinished();

  Notify_GarbageCollectionFinished(const Notify_GarbageCollectionFinished& from);
  Notify_GarbageCollectionFinished(Notify_GarbageCollectionFinished&& from) noexcept
    : Notify_GarbageCollectionFinished() {
    *this = ::std::move(from);
  }

  inline Notify_GarbageCollectionFinished& operator=(const Notify_GarbageCollectionFinished& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_GarbageCollectionFinished& operator=(Notify_GarbageCollectionFinished&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_GarbageCollectionFinished& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_GarbageCollectionFinished* internal_default_instance() {
    return reinterpret_cast<const Notify_GarbageCollectionFinished*>(
               &_Notify_GarbageCollectionFinished_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(Notify_GarbageCollectionFinished& a, Notify_GarbageCollectionFinished& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_GarbageCollectionFinished* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_GarbageCollectionFinished* New() const final {
    return CreateMaybeMessage<Notify_GarbageCollectionFinished>(nullptr);
  }

  Notify_GarbageCollectionFinished* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_GarbageCollectionFinished>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_GarbageCollectionFinished& from);
  void MergeFrom(const Notify_GarbageCollectionFinished& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_GarbageCollectionFinished* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_GarbageCollectionFinished";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGenerationsCollectedFieldNumber = 1,
    kGenerationSegmentBoundsFieldNumber = 2,
  };
  // bytes GenerationsCollected = 1;
  void clear_generationscollected();
  const std::string& generationscollected() const;
  void set_generationscollected(const std::string& value);
  void set_generationscollected(std::string&& value);
  void set_generationscollected(const char* value);
  void set_generationscollected(const void* value, size_t size);
  std::string* mutable_generationscollected();
  std::string* release_generationscollected();
  void set_allocated_generationscollected(std::string* generationscollected);
  private:
  const std::string& _internal_generationscollected() const;
  void _internal_set_generationscollected(const std::string& value);
  std::string* _internal_mutable_generationscollected();
  public:

  // bytes GenerationSegmentBounds = 2;
  void clear_generationsegmentbounds();
  const std::string& generationsegmentbounds() const;
  void set_generationsegmentbounds(const std::string& value);
  void set_generationsegmentbounds(std::string&& value);
  void set_generationsegmentbounds(const char* value);
  void set_generationsegmentbounds(const void* value, size_t size);
  std::string* mutable_generationsegmentbounds();
  std::string* release_generationsegmentbounds();
  void set_allocated_generationsegmentbounds(std::string* generationsegmentbounds);
  private:
  const std::string& _internal_generationsegmentbounds() const;
  void _internal_set_generationsegmentbounds(const std::string& value);
  std::string* _internal_mutable_generationsegmentbounds();
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_GarbageCollectionFinished)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr generationscollected_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr generationsegmentbounds_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_RuntimeSuspendStarted :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_RuntimeSuspendStarted) */ {
 public:
  Notify_RuntimeSuspendStarted();
  virtual ~Notify_RuntimeSuspendStarted();

  Notify_RuntimeSuspendStarted(const Notify_RuntimeSuspendStarted& from);
  Notify_RuntimeSuspendStarted(Notify_RuntimeSuspendStarted&& from) noexcept
    : Notify_RuntimeSuspendStarted() {
    *this = ::std::move(from);
  }

  inline Notify_RuntimeSuspendStarted& operator=(const Notify_RuntimeSuspendStarted& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_RuntimeSuspendStarted& operator=(Notify_RuntimeSuspendStarted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_RuntimeSuspendStarted& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_RuntimeSuspendStarted* internal_default_instance() {
    return reinterpret_cast<const Notify_RuntimeSuspendStarted*>(
               &_Notify_RuntimeSuspendStarted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(Notify_RuntimeSuspendStarted& a, Notify_RuntimeSuspendStarted& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_RuntimeSuspendStarted* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_RuntimeSuspendStarted* New() const final {
    return CreateMaybeMessage<Notify_RuntimeSuspendStarted>(nullptr);
  }

  Notify_RuntimeSuspendStarted* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_RuntimeSuspendStarted>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_RuntimeSuspendStarted& from);
  void MergeFrom(const Notify_RuntimeSuspendStarted& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_RuntimeSuspendStarted* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_RuntimeSuspendStarted";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReasonFieldNumber = 1,
  };
  // .SharpDetect.Common.Messages.RuntimeSuspensionReason Reason = 1;
  void clear_reason();
  ::SharpDetect::Common::Messages::RuntimeSuspensionReason reason() const;
  void set_reason(::SharpDetect::Common::Messages::RuntimeSuspensionReason value);
  private:
  ::SharpDetect::Common::Messages::RuntimeSuspensionReason _internal_reason() const;
  void _internal_set_reason(::SharpDetect::Common::Messages::RuntimeSuspensionReason value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_RuntimeSuspendStarted)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  int reason_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_RuntimeSuspendFinished :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_RuntimeSuspendFinished) */ {
 public:
  Notify_RuntimeSuspendFinished();
  virtual ~Notify_RuntimeSuspendFinished();

  Notify_RuntimeSuspendFinished(const Notify_RuntimeSuspendFinished& from);
  Notify_RuntimeSuspendFinished(Notify_RuntimeSuspendFinished&& from) noexcept
    : Notify_RuntimeSuspendFinished() {
    *this = ::std::move(from);
  }

  inline Notify_RuntimeSuspendFinished& operator=(const Notify_RuntimeSuspendFinished& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_RuntimeSuspendFinished& operator=(Notify_RuntimeSuspendFinished&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_RuntimeSuspendFinished& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_RuntimeSuspendFinished* internal_default_instance() {
    return reinterpret_cast<const Notify_RuntimeSuspendFinished*>(
               &_Notify_RuntimeSuspendFinished_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(Notify_RuntimeSuspendFinished& a, Notify_RuntimeSuspendFinished& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_RuntimeSuspendFinished* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_RuntimeSuspendFinished* New() const final {
    return CreateMaybeMessage<Notify_RuntimeSuspendFinished>(nullptr);
  }

  Notify_RuntimeSuspendFinished* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_RuntimeSuspendFinished>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_RuntimeSuspendFinished& from);
  void MergeFrom(const Notify_RuntimeSuspendFinished& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_RuntimeSuspendFinished* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_RuntimeSuspendFinished";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_RuntimeSuspendFinished)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_RuntimeThreadSuspended :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_RuntimeThreadSuspended) */ {
 public:
  Notify_RuntimeThreadSuspended();
  virtual ~Notify_RuntimeThreadSuspended();

  Notify_RuntimeThreadSuspended(const Notify_RuntimeThreadSuspended& from);
  Notify_RuntimeThreadSuspended(Notify_RuntimeThreadSuspended&& from) noexcept
    : Notify_RuntimeThreadSuspended() {
    *this = ::std::move(from);
  }

  inline Notify_RuntimeThreadSuspended& operator=(const Notify_RuntimeThreadSuspended& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_RuntimeThreadSuspended& operator=(Notify_RuntimeThreadSuspended&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_RuntimeThreadSuspended& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_RuntimeThreadSuspended* internal_default_instance() {
    return reinterpret_cast<const Notify_RuntimeThreadSuspended*>(
               &_Notify_RuntimeThreadSuspended_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(Notify_RuntimeThreadSuspended& a, Notify_RuntimeThreadSuspended& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_RuntimeThreadSuspended* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_RuntimeThreadSuspended* New() const final {
    return CreateMaybeMessage<Notify_RuntimeThreadSuspended>(nullptr);
  }

  Notify_RuntimeThreadSuspended* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_RuntimeThreadSuspended>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_RuntimeThreadSuspended& from);
  void MergeFrom(const Notify_RuntimeThreadSuspended& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_RuntimeThreadSuspended* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_RuntimeThreadSuspended";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThreadIdFieldNumber = 1,
  };
  // uint64 ThreadId = 1;
  void clear_threadid();
  ::PROTOBUF_NAMESPACE_ID::uint64 threadid() const;
  void set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_threadid() const;
  void _internal_set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_RuntimeThreadSuspended)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 threadid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_RuntimeThreadResumed :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_RuntimeThreadResumed) */ {
 public:
  Notify_RuntimeThreadResumed();
  virtual ~Notify_RuntimeThreadResumed();

  Notify_RuntimeThreadResumed(const Notify_RuntimeThreadResumed& from);
  Notify_RuntimeThreadResumed(Notify_RuntimeThreadResumed&& from) noexcept
    : Notify_RuntimeThreadResumed() {
    *this = ::std::move(from);
  }

  inline Notify_RuntimeThreadResumed& operator=(const Notify_RuntimeThreadResumed& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_RuntimeThreadResumed& operator=(Notify_RuntimeThreadResumed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_RuntimeThreadResumed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_RuntimeThreadResumed* internal_default_instance() {
    return reinterpret_cast<const Notify_RuntimeThreadResumed*>(
               &_Notify_RuntimeThreadResumed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(Notify_RuntimeThreadResumed& a, Notify_RuntimeThreadResumed& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_RuntimeThreadResumed* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_RuntimeThreadResumed* New() const final {
    return CreateMaybeMessage<Notify_RuntimeThreadResumed>(nullptr);
  }

  Notify_RuntimeThreadResumed* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_RuntimeThreadResumed>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_RuntimeThreadResumed& from);
  void MergeFrom(const Notify_RuntimeThreadResumed& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_RuntimeThreadResumed* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_RuntimeThreadResumed";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThreadIdFieldNumber = 1,
  };
  // uint64 ThreadId = 1;
  void clear_threadid();
  ::PROTOBUF_NAMESPACE_ID::uint64 threadid() const;
  void set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_threadid() const;
  void _internal_set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_RuntimeThreadResumed)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 threadid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_SurvivingReferences :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_SurvivingReferences) */ {
 public:
  Notify_SurvivingReferences();
  virtual ~Notify_SurvivingReferences();

  Notify_SurvivingReferences(const Notify_SurvivingReferences& from);
  Notify_SurvivingReferences(Notify_SurvivingReferences&& from) noexcept
    : Notify_SurvivingReferences() {
    *this = ::std::move(from);
  }

  inline Notify_SurvivingReferences& operator=(const Notify_SurvivingReferences& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_SurvivingReferences& operator=(Notify_SurvivingReferences&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_SurvivingReferences& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_SurvivingReferences* internal_default_instance() {
    return reinterpret_cast<const Notify_SurvivingReferences*>(
               &_Notify_SurvivingReferences_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(Notify_SurvivingReferences& a, Notify_SurvivingReferences& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_SurvivingReferences* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_SurvivingReferences* New() const final {
    return CreateMaybeMessage<Notify_SurvivingReferences>(nullptr);
  }

  Notify_SurvivingReferences* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_SurvivingReferences>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_SurvivingReferences& from);
  void MergeFrom(const Notify_SurvivingReferences& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_SurvivingReferences* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_SurvivingReferences";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlocksFieldNumber = 1,
    kLengthsFieldNumber = 2,
  };
  // bytes Blocks = 1;
  void clear_blocks();
  const std::string& blocks() const;
  void set_blocks(const std::string& value);
  void set_blocks(std::string&& value);
  void set_blocks(const char* value);
  void set_blocks(const void* value, size_t size);
  std::string* mutable_blocks();
  std::string* release_blocks();
  void set_allocated_blocks(std::string* blocks);
  private:
  const std::string& _internal_blocks() const;
  void _internal_set_blocks(const std::string& value);
  std::string* _internal_mutable_blocks();
  public:

  // bytes Lengths = 2;
  void clear_lengths();
  const std::string& lengths() const;
  void set_lengths(const std::string& value);
  void set_lengths(std::string&& value);
  void set_lengths(const char* value);
  void set_lengths(const void* value, size_t size);
  std::string* mutable_lengths();
  std::string* release_lengths();
  void set_allocated_lengths(std::string* lengths);
  private:
  const std::string& _internal_lengths() const;
  void _internal_set_lengths(const std::string& value);
  std::string* _internal_mutable_lengths();
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_SurvivingReferences)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr blocks_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr lengths_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// -------------------------------------------------------------------

class Notify_MovedReferences :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Notify_MovedReferences) */ {
 public:
  Notify_MovedReferences();
  virtual ~Notify_MovedReferences();

  Notify_MovedReferences(const Notify_MovedReferences& from);
  Notify_MovedReferences(Notify_MovedReferences&& from) noexcept
    : Notify_MovedReferences() {
    *this = ::std::move(from);
  }

  inline Notify_MovedReferences& operator=(const Notify_MovedReferences& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notify_MovedReferences& operator=(Notify_MovedReferences&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notify_MovedReferences& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notify_MovedReferences* internal_default_instance() {
    return reinterpret_cast<const Notify_MovedReferences*>(
               &_Notify_MovedReferences_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(Notify_MovedReferences& a, Notify_MovedReferences& b) {
    a.Swap(&b);
  }
  inline void Swap(Notify_MovedReferences* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notify_MovedReferences* New() const final {
    return CreateMaybeMessage<Notify_MovedReferences>(nullptr);
  }

  Notify_MovedReferences* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notify_MovedReferences>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notify_MovedReferences& from);
  void MergeFrom(const Notify_MovedReferences& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notify_MovedReferences* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Notify_MovedReferences";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto);
    return ::descriptor_table_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOldBlocksFieldNumber = 1,
    kNewBlocksFieldNumber = 2,
    kLengthsFieldNumber = 3,
  };
  // bytes OldBlocks = 1;
  void clear_oldblocks();
  const std::string& oldblocks() const;
  void set_oldblocks(const std::string& value);
  void set_oldblocks(std::string&& value);
  void set_oldblocks(const char* value);
  void set_oldblocks(const void* value, size_t size);
  std::string* mutable_oldblocks();
  std::string* release_oldblocks();
  void set_allocated_oldblocks(std::string* oldblocks);
  private:
  const std::string& _internal_oldblocks() const;
  void _internal_set_oldblocks(const std::string& value);
  std::string* _internal_mutable_oldblocks();
  public:

  // bytes NewBlocks = 2;
  void clear_newblocks();
  const std::string& newblocks() const;
  void set_newblocks(const std::string& value);
  void set_newblocks(std::string&& value);
  void set_newblocks(const char* value);
  void set_newblocks(const void* value, size_t size);
  std::string* mutable_newblocks();
  std::string* release_newblocks();
  void set_allocated_newblocks(std::string* newblocks);
  private:
  const std::string& _internal_newblocks() const;
  void _internal_set_newblocks(const std::string& value);
  std::string* _internal_mutable_newblocks();
  public:

  // bytes Lengths = 3;
  void clear_lengths();
  const std::string& lengths() const;
  void set_lengths(const std::string& value);
  void set_lengths(std::string&& value);
  void set_lengths(const char* value);
  void set_lengths(const void* value, size_t size);
  std::string* mutable_lengths();
  std::string* release_lengths();
  void set_allocated_lengths(std::string* lengths);
  private:
  const std::string& _internal_lengths() const;
  void _internal_set_lengths(const std::string& value);
  std::string* _internal_mutable_lengths();
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Notify_MovedReferences)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr oldblocks_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr newblocks_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr lengths_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NotifyMessage

// uint64 NotificationId = 1;
inline void NotifyMessage::clear_notificationid() {
  notificationid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 NotifyMessage::_internal_notificationid() const {
  return notificationid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 NotifyMessage::notificationid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.NotificationId)
  return _internal_notificationid();
}
inline void NotifyMessage::_internal_set_notificationid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  notificationid_ = value;
}
inline void NotifyMessage::set_notificationid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_notificationid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.NotifyMessage.NotificationId)
}

// uint64 Thread = 2;
inline void NotifyMessage::clear_thread() {
  thread_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 NotifyMessage::_internal_thread() const {
  return thread_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 NotifyMessage::thread() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.Thread)
  return _internal_thread();
}
inline void NotifyMessage::_internal_set_thread(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  thread_ = value;
}
inline void NotifyMessage::set_thread(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_thread(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.NotifyMessage.Thread)
}

// .SharpDetect.Common.Messages.Response Response = 3;
inline bool NotifyMessage::_internal_has_response() const {
  return Payload_case() == kResponse;
}
inline bool NotifyMessage::has_response() const {
  return _internal_has_response();
}
inline void NotifyMessage::set_has_response() {
  _oneof_case_[0] = kResponse;
}
inline void NotifyMessage::clear_response() {
  if (_internal_has_response()) {
    delete Payload_.response_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Response* NotifyMessage::release_response() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.Response)
  if (_internal_has_response()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Response* temp = Payload_.response_;
    Payload_.response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Response& NotifyMessage::_internal_response() const {
  return _internal_has_response()
      ? *Payload_.response_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Response*>(&::SharpDetect::Common::Messages::_Response_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Response& NotifyMessage::response() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.Response)
  return _internal_response();
}
inline ::SharpDetect::Common::Messages::Response* NotifyMessage::_internal_mutable_response() {
  if (!_internal_has_response()) {
    clear_Payload();
    set_has_response();
    Payload_.response_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Response >(
        GetArenaNoVirtual());
  }
  return Payload_.response_;
}
inline ::SharpDetect::Common::Messages::Response* NotifyMessage::mutable_response() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.Response)
  return _internal_mutable_response();
}

// .SharpDetect.Common.Messages.Notify_ProfilerInitialized ProfilerInitialized = 4;
inline bool NotifyMessage::_internal_has_profilerinitialized() const {
  return Payload_case() == kProfilerInitialized;
}
inline bool NotifyMessage::has_profilerinitialized() const {
  return _internal_has_profilerinitialized();
}
inline void NotifyMessage::set_has_profilerinitialized() {
  _oneof_case_[0] = kProfilerInitialized;
}
inline void NotifyMessage::clear_profilerinitialized() {
  if (_internal_has_profilerinitialized()) {
    delete Payload_.profilerinitialized_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_ProfilerInitialized* NotifyMessage::release_profilerinitialized() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.ProfilerInitialized)
  if (_internal_has_profilerinitialized()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_ProfilerInitialized* temp = Payload_.profilerinitialized_;
    Payload_.profilerinitialized_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_ProfilerInitialized& NotifyMessage::_internal_profilerinitialized() const {
  return _internal_has_profilerinitialized()
      ? *Payload_.profilerinitialized_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_ProfilerInitialized*>(&::SharpDetect::Common::Messages::_Notify_ProfilerInitialized_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_ProfilerInitialized& NotifyMessage::profilerinitialized() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.ProfilerInitialized)
  return _internal_profilerinitialized();
}
inline ::SharpDetect::Common::Messages::Notify_ProfilerInitialized* NotifyMessage::_internal_mutable_profilerinitialized() {
  if (!_internal_has_profilerinitialized()) {
    clear_Payload();
    set_has_profilerinitialized();
    Payload_.profilerinitialized_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_ProfilerInitialized >(
        GetArenaNoVirtual());
  }
  return Payload_.profilerinitialized_;
}
inline ::SharpDetect::Common::Messages::Notify_ProfilerInitialized* NotifyMessage::mutable_profilerinitialized() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.ProfilerInitialized)
  return _internal_mutable_profilerinitialized();
}

// .SharpDetect.Common.Messages.Notify_ProfilerDestroyed ProfilerDestroyed = 5;
inline bool NotifyMessage::_internal_has_profilerdestroyed() const {
  return Payload_case() == kProfilerDestroyed;
}
inline bool NotifyMessage::has_profilerdestroyed() const {
  return _internal_has_profilerdestroyed();
}
inline void NotifyMessage::set_has_profilerdestroyed() {
  _oneof_case_[0] = kProfilerDestroyed;
}
inline void NotifyMessage::clear_profilerdestroyed() {
  if (_internal_has_profilerdestroyed()) {
    delete Payload_.profilerdestroyed_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_ProfilerDestroyed* NotifyMessage::release_profilerdestroyed() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.ProfilerDestroyed)
  if (_internal_has_profilerdestroyed()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_ProfilerDestroyed* temp = Payload_.profilerdestroyed_;
    Payload_.profilerdestroyed_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_ProfilerDestroyed& NotifyMessage::_internal_profilerdestroyed() const {
  return _internal_has_profilerdestroyed()
      ? *Payload_.profilerdestroyed_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_ProfilerDestroyed*>(&::SharpDetect::Common::Messages::_Notify_ProfilerDestroyed_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_ProfilerDestroyed& NotifyMessage::profilerdestroyed() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.ProfilerDestroyed)
  return _internal_profilerdestroyed();
}
inline ::SharpDetect::Common::Messages::Notify_ProfilerDestroyed* NotifyMessage::_internal_mutable_profilerdestroyed() {
  if (!_internal_has_profilerdestroyed()) {
    clear_Payload();
    set_has_profilerdestroyed();
    Payload_.profilerdestroyed_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_ProfilerDestroyed >(
        GetArenaNoVirtual());
  }
  return Payload_.profilerdestroyed_;
}
inline ::SharpDetect::Common::Messages::Notify_ProfilerDestroyed* NotifyMessage::mutable_profilerdestroyed() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.ProfilerDestroyed)
  return _internal_mutable_profilerdestroyed();
}

// .SharpDetect.Common.Messages.Notify_ModuleLoaded ModuleLoaded = 6;
inline bool NotifyMessage::_internal_has_moduleloaded() const {
  return Payload_case() == kModuleLoaded;
}
inline bool NotifyMessage::has_moduleloaded() const {
  return _internal_has_moduleloaded();
}
inline void NotifyMessage::set_has_moduleloaded() {
  _oneof_case_[0] = kModuleLoaded;
}
inline void NotifyMessage::clear_moduleloaded() {
  if (_internal_has_moduleloaded()) {
    delete Payload_.moduleloaded_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_ModuleLoaded* NotifyMessage::release_moduleloaded() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.ModuleLoaded)
  if (_internal_has_moduleloaded()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_ModuleLoaded* temp = Payload_.moduleloaded_;
    Payload_.moduleloaded_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_ModuleLoaded& NotifyMessage::_internal_moduleloaded() const {
  return _internal_has_moduleloaded()
      ? *Payload_.moduleloaded_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_ModuleLoaded*>(&::SharpDetect::Common::Messages::_Notify_ModuleLoaded_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_ModuleLoaded& NotifyMessage::moduleloaded() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.ModuleLoaded)
  return _internal_moduleloaded();
}
inline ::SharpDetect::Common::Messages::Notify_ModuleLoaded* NotifyMessage::_internal_mutable_moduleloaded() {
  if (!_internal_has_moduleloaded()) {
    clear_Payload();
    set_has_moduleloaded();
    Payload_.moduleloaded_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_ModuleLoaded >(
        GetArenaNoVirtual());
  }
  return Payload_.moduleloaded_;
}
inline ::SharpDetect::Common::Messages::Notify_ModuleLoaded* NotifyMessage::mutable_moduleloaded() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.ModuleLoaded)
  return _internal_mutable_moduleloaded();
}

// .SharpDetect.Common.Messages.Notify_ClassLoaded ClassLoaded = 7;
inline bool NotifyMessage::_internal_has_classloaded() const {
  return Payload_case() == kClassLoaded;
}
inline bool NotifyMessage::has_classloaded() const {
  return _internal_has_classloaded();
}
inline void NotifyMessage::set_has_classloaded() {
  _oneof_case_[0] = kClassLoaded;
}
inline void NotifyMessage::clear_classloaded() {
  if (_internal_has_classloaded()) {
    delete Payload_.classloaded_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_ClassLoaded* NotifyMessage::release_classloaded() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.ClassLoaded)
  if (_internal_has_classloaded()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_ClassLoaded* temp = Payload_.classloaded_;
    Payload_.classloaded_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_ClassLoaded& NotifyMessage::_internal_classloaded() const {
  return _internal_has_classloaded()
      ? *Payload_.classloaded_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_ClassLoaded*>(&::SharpDetect::Common::Messages::_Notify_ClassLoaded_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_ClassLoaded& NotifyMessage::classloaded() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.ClassLoaded)
  return _internal_classloaded();
}
inline ::SharpDetect::Common::Messages::Notify_ClassLoaded* NotifyMessage::_internal_mutable_classloaded() {
  if (!_internal_has_classloaded()) {
    clear_Payload();
    set_has_classloaded();
    Payload_.classloaded_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_ClassLoaded >(
        GetArenaNoVirtual());
  }
  return Payload_.classloaded_;
}
inline ::SharpDetect::Common::Messages::Notify_ClassLoaded* NotifyMessage::mutable_classloaded() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.ClassLoaded)
  return _internal_mutable_classloaded();
}

// .SharpDetect.Common.Messages.Notify_FunctionJITCompilationStarted FunctionJITCompilationStarted = 8;
inline bool NotifyMessage::_internal_has_functionjitcompilationstarted() const {
  return Payload_case() == kFunctionJITCompilationStarted;
}
inline bool NotifyMessage::has_functionjitcompilationstarted() const {
  return _internal_has_functionjitcompilationstarted();
}
inline void NotifyMessage::set_has_functionjitcompilationstarted() {
  _oneof_case_[0] = kFunctionJITCompilationStarted;
}
inline void NotifyMessage::clear_functionjitcompilationstarted() {
  if (_internal_has_functionjitcompilationstarted()) {
    delete Payload_.functionjitcompilationstarted_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_FunctionJITCompilationStarted* NotifyMessage::release_functionjitcompilationstarted() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.FunctionJITCompilationStarted)
  if (_internal_has_functionjitcompilationstarted()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_FunctionJITCompilationStarted* temp = Payload_.functionjitcompilationstarted_;
    Payload_.functionjitcompilationstarted_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_FunctionJITCompilationStarted& NotifyMessage::_internal_functionjitcompilationstarted() const {
  return _internal_has_functionjitcompilationstarted()
      ? *Payload_.functionjitcompilationstarted_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_FunctionJITCompilationStarted*>(&::SharpDetect::Common::Messages::_Notify_FunctionJITCompilationStarted_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_FunctionJITCompilationStarted& NotifyMessage::functionjitcompilationstarted() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.FunctionJITCompilationStarted)
  return _internal_functionjitcompilationstarted();
}
inline ::SharpDetect::Common::Messages::Notify_FunctionJITCompilationStarted* NotifyMessage::_internal_mutable_functionjitcompilationstarted() {
  if (!_internal_has_functionjitcompilationstarted()) {
    clear_Payload();
    set_has_functionjitcompilationstarted();
    Payload_.functionjitcompilationstarted_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_FunctionJITCompilationStarted >(
        GetArenaNoVirtual());
  }
  return Payload_.functionjitcompilationstarted_;
}
inline ::SharpDetect::Common::Messages::Notify_FunctionJITCompilationStarted* NotifyMessage::mutable_functionjitcompilationstarted() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.FunctionJITCompilationStarted)
  return _internal_mutable_functionjitcompilationstarted();
}

// .SharpDetect.Common.Messages.Notify_ThreadCreated ThreadCreated = 9;
inline bool NotifyMessage::_internal_has_threadcreated() const {
  return Payload_case() == kThreadCreated;
}
inline bool NotifyMessage::has_threadcreated() const {
  return _internal_has_threadcreated();
}
inline void NotifyMessage::set_has_threadcreated() {
  _oneof_case_[0] = kThreadCreated;
}
inline void NotifyMessage::clear_threadcreated() {
  if (_internal_has_threadcreated()) {
    delete Payload_.threadcreated_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_ThreadCreated* NotifyMessage::release_threadcreated() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.ThreadCreated)
  if (_internal_has_threadcreated()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_ThreadCreated* temp = Payload_.threadcreated_;
    Payload_.threadcreated_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_ThreadCreated& NotifyMessage::_internal_threadcreated() const {
  return _internal_has_threadcreated()
      ? *Payload_.threadcreated_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_ThreadCreated*>(&::SharpDetect::Common::Messages::_Notify_ThreadCreated_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_ThreadCreated& NotifyMessage::threadcreated() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.ThreadCreated)
  return _internal_threadcreated();
}
inline ::SharpDetect::Common::Messages::Notify_ThreadCreated* NotifyMessage::_internal_mutable_threadcreated() {
  if (!_internal_has_threadcreated()) {
    clear_Payload();
    set_has_threadcreated();
    Payload_.threadcreated_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_ThreadCreated >(
        GetArenaNoVirtual());
  }
  return Payload_.threadcreated_;
}
inline ::SharpDetect::Common::Messages::Notify_ThreadCreated* NotifyMessage::mutable_threadcreated() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.ThreadCreated)
  return _internal_mutable_threadcreated();
}

// .SharpDetect.Common.Messages.Notify_ThreadDestroyed ThreadDestroyed = 10;
inline bool NotifyMessage::_internal_has_threaddestroyed() const {
  return Payload_case() == kThreadDestroyed;
}
inline bool NotifyMessage::has_threaddestroyed() const {
  return _internal_has_threaddestroyed();
}
inline void NotifyMessage::set_has_threaddestroyed() {
  _oneof_case_[0] = kThreadDestroyed;
}
inline void NotifyMessage::clear_threaddestroyed() {
  if (_internal_has_threaddestroyed()) {
    delete Payload_.threaddestroyed_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_ThreadDestroyed* NotifyMessage::release_threaddestroyed() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.ThreadDestroyed)
  if (_internal_has_threaddestroyed()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_ThreadDestroyed* temp = Payload_.threaddestroyed_;
    Payload_.threaddestroyed_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_ThreadDestroyed& NotifyMessage::_internal_threaddestroyed() const {
  return _internal_has_threaddestroyed()
      ? *Payload_.threaddestroyed_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_ThreadDestroyed*>(&::SharpDetect::Common::Messages::_Notify_ThreadDestroyed_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_ThreadDestroyed& NotifyMessage::threaddestroyed() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.ThreadDestroyed)
  return _internal_threaddestroyed();
}
inline ::SharpDetect::Common::Messages::Notify_ThreadDestroyed* NotifyMessage::_internal_mutable_threaddestroyed() {
  if (!_internal_has_threaddestroyed()) {
    clear_Payload();
    set_has_threaddestroyed();
    Payload_.threaddestroyed_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_ThreadDestroyed >(
        GetArenaNoVirtual());
  }
  return Payload_.threaddestroyed_;
}
inline ::SharpDetect::Common::Messages::Notify_ThreadDestroyed* NotifyMessage::mutable_threaddestroyed() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.ThreadDestroyed)
  return _internal_mutable_threaddestroyed();
}

// .SharpDetect.Common.Messages.Notify_TypeInjected TypeInjected = 11;
inline bool NotifyMessage::_internal_has_typeinjected() const {
  return Payload_case() == kTypeInjected;
}
inline bool NotifyMessage::has_typeinjected() const {
  return _internal_has_typeinjected();
}
inline void NotifyMessage::set_has_typeinjected() {
  _oneof_case_[0] = kTypeInjected;
}
inline void NotifyMessage::clear_typeinjected() {
  if (_internal_has_typeinjected()) {
    delete Payload_.typeinjected_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_TypeInjected* NotifyMessage::release_typeinjected() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.TypeInjected)
  if (_internal_has_typeinjected()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_TypeInjected* temp = Payload_.typeinjected_;
    Payload_.typeinjected_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_TypeInjected& NotifyMessage::_internal_typeinjected() const {
  return _internal_has_typeinjected()
      ? *Payload_.typeinjected_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_TypeInjected*>(&::SharpDetect::Common::Messages::_Notify_TypeInjected_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_TypeInjected& NotifyMessage::typeinjected() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.TypeInjected)
  return _internal_typeinjected();
}
inline ::SharpDetect::Common::Messages::Notify_TypeInjected* NotifyMessage::_internal_mutable_typeinjected() {
  if (!_internal_has_typeinjected()) {
    clear_Payload();
    set_has_typeinjected();
    Payload_.typeinjected_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_TypeInjected >(
        GetArenaNoVirtual());
  }
  return Payload_.typeinjected_;
}
inline ::SharpDetect::Common::Messages::Notify_TypeInjected* NotifyMessage::mutable_typeinjected() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.TypeInjected)
  return _internal_mutable_typeinjected();
}

// .SharpDetect.Common.Messages.Notify_TypeReferenced TypeReferenced = 12;
inline bool NotifyMessage::_internal_has_typereferenced() const {
  return Payload_case() == kTypeReferenced;
}
inline bool NotifyMessage::has_typereferenced() const {
  return _internal_has_typereferenced();
}
inline void NotifyMessage::set_has_typereferenced() {
  _oneof_case_[0] = kTypeReferenced;
}
inline void NotifyMessage::clear_typereferenced() {
  if (_internal_has_typereferenced()) {
    delete Payload_.typereferenced_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_TypeReferenced* NotifyMessage::release_typereferenced() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.TypeReferenced)
  if (_internal_has_typereferenced()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_TypeReferenced* temp = Payload_.typereferenced_;
    Payload_.typereferenced_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_TypeReferenced& NotifyMessage::_internal_typereferenced() const {
  return _internal_has_typereferenced()
      ? *Payload_.typereferenced_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_TypeReferenced*>(&::SharpDetect::Common::Messages::_Notify_TypeReferenced_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_TypeReferenced& NotifyMessage::typereferenced() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.TypeReferenced)
  return _internal_typereferenced();
}
inline ::SharpDetect::Common::Messages::Notify_TypeReferenced* NotifyMessage::_internal_mutable_typereferenced() {
  if (!_internal_has_typereferenced()) {
    clear_Payload();
    set_has_typereferenced();
    Payload_.typereferenced_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_TypeReferenced >(
        GetArenaNoVirtual());
  }
  return Payload_.typereferenced_;
}
inline ::SharpDetect::Common::Messages::Notify_TypeReferenced* NotifyMessage::mutable_typereferenced() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.TypeReferenced)
  return _internal_mutable_typereferenced();
}

// .SharpDetect.Common.Messages.Notify_MethodInjected MethodInjected = 13;
inline bool NotifyMessage::_internal_has_methodinjected() const {
  return Payload_case() == kMethodInjected;
}
inline bool NotifyMessage::has_methodinjected() const {
  return _internal_has_methodinjected();
}
inline void NotifyMessage::set_has_methodinjected() {
  _oneof_case_[0] = kMethodInjected;
}
inline void NotifyMessage::clear_methodinjected() {
  if (_internal_has_methodinjected()) {
    delete Payload_.methodinjected_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_MethodInjected* NotifyMessage::release_methodinjected() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.MethodInjected)
  if (_internal_has_methodinjected()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_MethodInjected* temp = Payload_.methodinjected_;
    Payload_.methodinjected_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_MethodInjected& NotifyMessage::_internal_methodinjected() const {
  return _internal_has_methodinjected()
      ? *Payload_.methodinjected_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_MethodInjected*>(&::SharpDetect::Common::Messages::_Notify_MethodInjected_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_MethodInjected& NotifyMessage::methodinjected() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.MethodInjected)
  return _internal_methodinjected();
}
inline ::SharpDetect::Common::Messages::Notify_MethodInjected* NotifyMessage::_internal_mutable_methodinjected() {
  if (!_internal_has_methodinjected()) {
    clear_Payload();
    set_has_methodinjected();
    Payload_.methodinjected_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_MethodInjected >(
        GetArenaNoVirtual());
  }
  return Payload_.methodinjected_;
}
inline ::SharpDetect::Common::Messages::Notify_MethodInjected* NotifyMessage::mutable_methodinjected() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.MethodInjected)
  return _internal_mutable_methodinjected();
}

// .SharpDetect.Common.Messages.Notify_HelperMethodReferenced HelperMethodReferenced = 14;
inline bool NotifyMessage::_internal_has_helpermethodreferenced() const {
  return Payload_case() == kHelperMethodReferenced;
}
inline bool NotifyMessage::has_helpermethodreferenced() const {
  return _internal_has_helpermethodreferenced();
}
inline void NotifyMessage::set_has_helpermethodreferenced() {
  _oneof_case_[0] = kHelperMethodReferenced;
}
inline void NotifyMessage::clear_helpermethodreferenced() {
  if (_internal_has_helpermethodreferenced()) {
    delete Payload_.helpermethodreferenced_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_HelperMethodReferenced* NotifyMessage::release_helpermethodreferenced() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.HelperMethodReferenced)
  if (_internal_has_helpermethodreferenced()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_HelperMethodReferenced* temp = Payload_.helpermethodreferenced_;
    Payload_.helpermethodreferenced_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_HelperMethodReferenced& NotifyMessage::_internal_helpermethodreferenced() const {
  return _internal_has_helpermethodreferenced()
      ? *Payload_.helpermethodreferenced_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_HelperMethodReferenced*>(&::SharpDetect::Common::Messages::_Notify_HelperMethodReferenced_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_HelperMethodReferenced& NotifyMessage::helpermethodreferenced() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.HelperMethodReferenced)
  return _internal_helpermethodreferenced();
}
inline ::SharpDetect::Common::Messages::Notify_HelperMethodReferenced* NotifyMessage::_internal_mutable_helpermethodreferenced() {
  if (!_internal_has_helpermethodreferenced()) {
    clear_Payload();
    set_has_helpermethodreferenced();
    Payload_.helpermethodreferenced_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_HelperMethodReferenced >(
        GetArenaNoVirtual());
  }
  return Payload_.helpermethodreferenced_;
}
inline ::SharpDetect::Common::Messages::Notify_HelperMethodReferenced* NotifyMessage::mutable_helpermethodreferenced() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.HelperMethodReferenced)
  return _internal_mutable_helpermethodreferenced();
}

// .SharpDetect.Common.Messages.Notify_WrapperMethodReferenced WrapperMethodReferenced = 15;
inline bool NotifyMessage::_internal_has_wrappermethodreferenced() const {
  return Payload_case() == kWrapperMethodReferenced;
}
inline bool NotifyMessage::has_wrappermethodreferenced() const {
  return _internal_has_wrappermethodreferenced();
}
inline void NotifyMessage::set_has_wrappermethodreferenced() {
  _oneof_case_[0] = kWrapperMethodReferenced;
}
inline void NotifyMessage::clear_wrappermethodreferenced() {
  if (_internal_has_wrappermethodreferenced()) {
    delete Payload_.wrappermethodreferenced_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_WrapperMethodReferenced* NotifyMessage::release_wrappermethodreferenced() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.WrapperMethodReferenced)
  if (_internal_has_wrappermethodreferenced()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_WrapperMethodReferenced* temp = Payload_.wrappermethodreferenced_;
    Payload_.wrappermethodreferenced_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_WrapperMethodReferenced& NotifyMessage::_internal_wrappermethodreferenced() const {
  return _internal_has_wrappermethodreferenced()
      ? *Payload_.wrappermethodreferenced_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_WrapperMethodReferenced*>(&::SharpDetect::Common::Messages::_Notify_WrapperMethodReferenced_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_WrapperMethodReferenced& NotifyMessage::wrappermethodreferenced() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.WrapperMethodReferenced)
  return _internal_wrappermethodreferenced();
}
inline ::SharpDetect::Common::Messages::Notify_WrapperMethodReferenced* NotifyMessage::_internal_mutable_wrappermethodreferenced() {
  if (!_internal_has_wrappermethodreferenced()) {
    clear_Payload();
    set_has_wrappermethodreferenced();
    Payload_.wrappermethodreferenced_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_WrapperMethodReferenced >(
        GetArenaNoVirtual());
  }
  return Payload_.wrappermethodreferenced_;
}
inline ::SharpDetect::Common::Messages::Notify_WrapperMethodReferenced* NotifyMessage::mutable_wrappermethodreferenced() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.WrapperMethodReferenced)
  return _internal_mutable_wrappermethodreferenced();
}

// .SharpDetect.Common.Messages.Notify_MethodCalled MethodCalled = 16;
inline bool NotifyMessage::_internal_has_methodcalled() const {
  return Payload_case() == kMethodCalled;
}
inline bool NotifyMessage::has_methodcalled() const {
  return _internal_has_methodcalled();
}
inline void NotifyMessage::set_has_methodcalled() {
  _oneof_case_[0] = kMethodCalled;
}
inline void NotifyMessage::clear_methodcalled() {
  if (_internal_has_methodcalled()) {
    delete Payload_.methodcalled_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_MethodCalled* NotifyMessage::release_methodcalled() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.MethodCalled)
  if (_internal_has_methodcalled()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_MethodCalled* temp = Payload_.methodcalled_;
    Payload_.methodcalled_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_MethodCalled& NotifyMessage::_internal_methodcalled() const {
  return _internal_has_methodcalled()
      ? *Payload_.methodcalled_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_MethodCalled*>(&::SharpDetect::Common::Messages::_Notify_MethodCalled_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_MethodCalled& NotifyMessage::methodcalled() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.MethodCalled)
  return _internal_methodcalled();
}
inline ::SharpDetect::Common::Messages::Notify_MethodCalled* NotifyMessage::_internal_mutable_methodcalled() {
  if (!_internal_has_methodcalled()) {
    clear_Payload();
    set_has_methodcalled();
    Payload_.methodcalled_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_MethodCalled >(
        GetArenaNoVirtual());
  }
  return Payload_.methodcalled_;
}
inline ::SharpDetect::Common::Messages::Notify_MethodCalled* NotifyMessage::mutable_methodcalled() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.MethodCalled)
  return _internal_mutable_methodcalled();
}

// .SharpDetect.Common.Messages.Notify_MethodReturned MethodReturned = 17;
inline bool NotifyMessage::_internal_has_methodreturned() const {
  return Payload_case() == kMethodReturned;
}
inline bool NotifyMessage::has_methodreturned() const {
  return _internal_has_methodreturned();
}
inline void NotifyMessage::set_has_methodreturned() {
  _oneof_case_[0] = kMethodReturned;
}
inline void NotifyMessage::clear_methodreturned() {
  if (_internal_has_methodreturned()) {
    delete Payload_.methodreturned_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_MethodReturned* NotifyMessage::release_methodreturned() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.MethodReturned)
  if (_internal_has_methodreturned()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_MethodReturned* temp = Payload_.methodreturned_;
    Payload_.methodreturned_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_MethodReturned& NotifyMessage::_internal_methodreturned() const {
  return _internal_has_methodreturned()
      ? *Payload_.methodreturned_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_MethodReturned*>(&::SharpDetect::Common::Messages::_Notify_MethodReturned_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_MethodReturned& NotifyMessage::methodreturned() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.MethodReturned)
  return _internal_methodreturned();
}
inline ::SharpDetect::Common::Messages::Notify_MethodReturned* NotifyMessage::_internal_mutable_methodreturned() {
  if (!_internal_has_methodreturned()) {
    clear_Payload();
    set_has_methodreturned();
    Payload_.methodreturned_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_MethodReturned >(
        GetArenaNoVirtual());
  }
  return Payload_.methodreturned_;
}
inline ::SharpDetect::Common::Messages::Notify_MethodReturned* NotifyMessage::mutable_methodreturned() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.MethodReturned)
  return _internal_mutable_methodreturned();
}

// .SharpDetect.Common.Messages.Notify_MethodWrapperInjected MethodWrapperInjected = 18;
inline bool NotifyMessage::_internal_has_methodwrapperinjected() const {
  return Payload_case() == kMethodWrapperInjected;
}
inline bool NotifyMessage::has_methodwrapperinjected() const {
  return _internal_has_methodwrapperinjected();
}
inline void NotifyMessage::set_has_methodwrapperinjected() {
  _oneof_case_[0] = kMethodWrapperInjected;
}
inline void NotifyMessage::clear_methodwrapperinjected() {
  if (_internal_has_methodwrapperinjected()) {
    delete Payload_.methodwrapperinjected_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_MethodWrapperInjected* NotifyMessage::release_methodwrapperinjected() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.MethodWrapperInjected)
  if (_internal_has_methodwrapperinjected()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_MethodWrapperInjected* temp = Payload_.methodwrapperinjected_;
    Payload_.methodwrapperinjected_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_MethodWrapperInjected& NotifyMessage::_internal_methodwrapperinjected() const {
  return _internal_has_methodwrapperinjected()
      ? *Payload_.methodwrapperinjected_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_MethodWrapperInjected*>(&::SharpDetect::Common::Messages::_Notify_MethodWrapperInjected_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_MethodWrapperInjected& NotifyMessage::methodwrapperinjected() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.MethodWrapperInjected)
  return _internal_methodwrapperinjected();
}
inline ::SharpDetect::Common::Messages::Notify_MethodWrapperInjected* NotifyMessage::_internal_mutable_methodwrapperinjected() {
  if (!_internal_has_methodwrapperinjected()) {
    clear_Payload();
    set_has_methodwrapperinjected();
    Payload_.methodwrapperinjected_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_MethodWrapperInjected >(
        GetArenaNoVirtual());
  }
  return Payload_.methodwrapperinjected_;
}
inline ::SharpDetect::Common::Messages::Notify_MethodWrapperInjected* NotifyMessage::mutable_methodwrapperinjected() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.MethodWrapperInjected)
  return _internal_mutable_methodwrapperinjected();
}

// .SharpDetect.Common.Messages.Notify_GarbageCollectionStarted GarbageCollectionStarted = 19;
inline bool NotifyMessage::_internal_has_garbagecollectionstarted() const {
  return Payload_case() == kGarbageCollectionStarted;
}
inline bool NotifyMessage::has_garbagecollectionstarted() const {
  return _internal_has_garbagecollectionstarted();
}
inline void NotifyMessage::set_has_garbagecollectionstarted() {
  _oneof_case_[0] = kGarbageCollectionStarted;
}
inline void NotifyMessage::clear_garbagecollectionstarted() {
  if (_internal_has_garbagecollectionstarted()) {
    delete Payload_.garbagecollectionstarted_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_GarbageCollectionStarted* NotifyMessage::release_garbagecollectionstarted() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.GarbageCollectionStarted)
  if (_internal_has_garbagecollectionstarted()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_GarbageCollectionStarted* temp = Payload_.garbagecollectionstarted_;
    Payload_.garbagecollectionstarted_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_GarbageCollectionStarted& NotifyMessage::_internal_garbagecollectionstarted() const {
  return _internal_has_garbagecollectionstarted()
      ? *Payload_.garbagecollectionstarted_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_GarbageCollectionStarted*>(&::SharpDetect::Common::Messages::_Notify_GarbageCollectionStarted_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_GarbageCollectionStarted& NotifyMessage::garbagecollectionstarted() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.GarbageCollectionStarted)
  return _internal_garbagecollectionstarted();
}
inline ::SharpDetect::Common::Messages::Notify_GarbageCollectionStarted* NotifyMessage::_internal_mutable_garbagecollectionstarted() {
  if (!_internal_has_garbagecollectionstarted()) {
    clear_Payload();
    set_has_garbagecollectionstarted();
    Payload_.garbagecollectionstarted_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_GarbageCollectionStarted >(
        GetArenaNoVirtual());
  }
  return Payload_.garbagecollectionstarted_;
}
inline ::SharpDetect::Common::Messages::Notify_GarbageCollectionStarted* NotifyMessage::mutable_garbagecollectionstarted() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.GarbageCollectionStarted)
  return _internal_mutable_garbagecollectionstarted();
}

// .SharpDetect.Common.Messages.Notify_GarbageCollectionFinished GarbageCollectionFinished = 20;
inline bool NotifyMessage::_internal_has_garbagecollectionfinished() const {
  return Payload_case() == kGarbageCollectionFinished;
}
inline bool NotifyMessage::has_garbagecollectionfinished() const {
  return _internal_has_garbagecollectionfinished();
}
inline void NotifyMessage::set_has_garbagecollectionfinished() {
  _oneof_case_[0] = kGarbageCollectionFinished;
}
inline void NotifyMessage::clear_garbagecollectionfinished() {
  if (_internal_has_garbagecollectionfinished()) {
    delete Payload_.garbagecollectionfinished_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_GarbageCollectionFinished* NotifyMessage::release_garbagecollectionfinished() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.GarbageCollectionFinished)
  if (_internal_has_garbagecollectionfinished()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_GarbageCollectionFinished* temp = Payload_.garbagecollectionfinished_;
    Payload_.garbagecollectionfinished_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_GarbageCollectionFinished& NotifyMessage::_internal_garbagecollectionfinished() const {
  return _internal_has_garbagecollectionfinished()
      ? *Payload_.garbagecollectionfinished_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_GarbageCollectionFinished*>(&::SharpDetect::Common::Messages::_Notify_GarbageCollectionFinished_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_GarbageCollectionFinished& NotifyMessage::garbagecollectionfinished() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.GarbageCollectionFinished)
  return _internal_garbagecollectionfinished();
}
inline ::SharpDetect::Common::Messages::Notify_GarbageCollectionFinished* NotifyMessage::_internal_mutable_garbagecollectionfinished() {
  if (!_internal_has_garbagecollectionfinished()) {
    clear_Payload();
    set_has_garbagecollectionfinished();
    Payload_.garbagecollectionfinished_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_GarbageCollectionFinished >(
        GetArenaNoVirtual());
  }
  return Payload_.garbagecollectionfinished_;
}
inline ::SharpDetect::Common::Messages::Notify_GarbageCollectionFinished* NotifyMessage::mutable_garbagecollectionfinished() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.GarbageCollectionFinished)
  return _internal_mutable_garbagecollectionfinished();
}

// .SharpDetect.Common.Messages.Notify_RuntimeSuspendStarted RuntimeSuspendStarted = 21;
inline bool NotifyMessage::_internal_has_runtimesuspendstarted() const {
  return Payload_case() == kRuntimeSuspendStarted;
}
inline bool NotifyMessage::has_runtimesuspendstarted() const {
  return _internal_has_runtimesuspendstarted();
}
inline void NotifyMessage::set_has_runtimesuspendstarted() {
  _oneof_case_[0] = kRuntimeSuspendStarted;
}
inline void NotifyMessage::clear_runtimesuspendstarted() {
  if (_internal_has_runtimesuspendstarted()) {
    delete Payload_.runtimesuspendstarted_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_RuntimeSuspendStarted* NotifyMessage::release_runtimesuspendstarted() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.RuntimeSuspendStarted)
  if (_internal_has_runtimesuspendstarted()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_RuntimeSuspendStarted* temp = Payload_.runtimesuspendstarted_;
    Payload_.runtimesuspendstarted_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_RuntimeSuspendStarted& NotifyMessage::_internal_runtimesuspendstarted() const {
  return _internal_has_runtimesuspendstarted()
      ? *Payload_.runtimesuspendstarted_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_RuntimeSuspendStarted*>(&::SharpDetect::Common::Messages::_Notify_RuntimeSuspendStarted_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_RuntimeSuspendStarted& NotifyMessage::runtimesuspendstarted() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.RuntimeSuspendStarted)
  return _internal_runtimesuspendstarted();
}
inline ::SharpDetect::Common::Messages::Notify_RuntimeSuspendStarted* NotifyMessage::_internal_mutable_runtimesuspendstarted() {
  if (!_internal_has_runtimesuspendstarted()) {
    clear_Payload();
    set_has_runtimesuspendstarted();
    Payload_.runtimesuspendstarted_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_RuntimeSuspendStarted >(
        GetArenaNoVirtual());
  }
  return Payload_.runtimesuspendstarted_;
}
inline ::SharpDetect::Common::Messages::Notify_RuntimeSuspendStarted* NotifyMessage::mutable_runtimesuspendstarted() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.RuntimeSuspendStarted)
  return _internal_mutable_runtimesuspendstarted();
}

// .SharpDetect.Common.Messages.Notify_RuntimeSuspendFinished RuntimeSuspendFinished = 22;
inline bool NotifyMessage::_internal_has_runtimesuspendfinished() const {
  return Payload_case() == kRuntimeSuspendFinished;
}
inline bool NotifyMessage::has_runtimesuspendfinished() const {
  return _internal_has_runtimesuspendfinished();
}
inline void NotifyMessage::set_has_runtimesuspendfinished() {
  _oneof_case_[0] = kRuntimeSuspendFinished;
}
inline void NotifyMessage::clear_runtimesuspendfinished() {
  if (_internal_has_runtimesuspendfinished()) {
    delete Payload_.runtimesuspendfinished_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_RuntimeSuspendFinished* NotifyMessage::release_runtimesuspendfinished() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.RuntimeSuspendFinished)
  if (_internal_has_runtimesuspendfinished()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_RuntimeSuspendFinished* temp = Payload_.runtimesuspendfinished_;
    Payload_.runtimesuspendfinished_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_RuntimeSuspendFinished& NotifyMessage::_internal_runtimesuspendfinished() const {
  return _internal_has_runtimesuspendfinished()
      ? *Payload_.runtimesuspendfinished_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_RuntimeSuspendFinished*>(&::SharpDetect::Common::Messages::_Notify_RuntimeSuspendFinished_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_RuntimeSuspendFinished& NotifyMessage::runtimesuspendfinished() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.RuntimeSuspendFinished)
  return _internal_runtimesuspendfinished();
}
inline ::SharpDetect::Common::Messages::Notify_RuntimeSuspendFinished* NotifyMessage::_internal_mutable_runtimesuspendfinished() {
  if (!_internal_has_runtimesuspendfinished()) {
    clear_Payload();
    set_has_runtimesuspendfinished();
    Payload_.runtimesuspendfinished_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_RuntimeSuspendFinished >(
        GetArenaNoVirtual());
  }
  return Payload_.runtimesuspendfinished_;
}
inline ::SharpDetect::Common::Messages::Notify_RuntimeSuspendFinished* NotifyMessage::mutable_runtimesuspendfinished() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.RuntimeSuspendFinished)
  return _internal_mutable_runtimesuspendfinished();
}

// .SharpDetect.Common.Messages.Notify_RuntimeThreadSuspended RuntimeThreadSuspended = 23;
inline bool NotifyMessage::_internal_has_runtimethreadsuspended() const {
  return Payload_case() == kRuntimeThreadSuspended;
}
inline bool NotifyMessage::has_runtimethreadsuspended() const {
  return _internal_has_runtimethreadsuspended();
}
inline void NotifyMessage::set_has_runtimethreadsuspended() {
  _oneof_case_[0] = kRuntimeThreadSuspended;
}
inline void NotifyMessage::clear_runtimethreadsuspended() {
  if (_internal_has_runtimethreadsuspended()) {
    delete Payload_.runtimethreadsuspended_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_RuntimeThreadSuspended* NotifyMessage::release_runtimethreadsuspended() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.RuntimeThreadSuspended)
  if (_internal_has_runtimethreadsuspended()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_RuntimeThreadSuspended* temp = Payload_.runtimethreadsuspended_;
    Payload_.runtimethreadsuspended_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_RuntimeThreadSuspended& NotifyMessage::_internal_runtimethreadsuspended() const {
  return _internal_has_runtimethreadsuspended()
      ? *Payload_.runtimethreadsuspended_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_RuntimeThreadSuspended*>(&::SharpDetect::Common::Messages::_Notify_RuntimeThreadSuspended_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_RuntimeThreadSuspended& NotifyMessage::runtimethreadsuspended() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.RuntimeThreadSuspended)
  return _internal_runtimethreadsuspended();
}
inline ::SharpDetect::Common::Messages::Notify_RuntimeThreadSuspended* NotifyMessage::_internal_mutable_runtimethreadsuspended() {
  if (!_internal_has_runtimethreadsuspended()) {
    clear_Payload();
    set_has_runtimethreadsuspended();
    Payload_.runtimethreadsuspended_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_RuntimeThreadSuspended >(
        GetArenaNoVirtual());
  }
  return Payload_.runtimethreadsuspended_;
}
inline ::SharpDetect::Common::Messages::Notify_RuntimeThreadSuspended* NotifyMessage::mutable_runtimethreadsuspended() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.RuntimeThreadSuspended)
  return _internal_mutable_runtimethreadsuspended();
}

// .SharpDetect.Common.Messages.Notify_RuntimeThreadResumed RuntimeThreadResumed = 24;
inline bool NotifyMessage::_internal_has_runtimethreadresumed() const {
  return Payload_case() == kRuntimeThreadResumed;
}
inline bool NotifyMessage::has_runtimethreadresumed() const {
  return _internal_has_runtimethreadresumed();
}
inline void NotifyMessage::set_has_runtimethreadresumed() {
  _oneof_case_[0] = kRuntimeThreadResumed;
}
inline void NotifyMessage::clear_runtimethreadresumed() {
  if (_internal_has_runtimethreadresumed()) {
    delete Payload_.runtimethreadresumed_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_RuntimeThreadResumed* NotifyMessage::release_runtimethreadresumed() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.RuntimeThreadResumed)
  if (_internal_has_runtimethreadresumed()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_RuntimeThreadResumed* temp = Payload_.runtimethreadresumed_;
    Payload_.runtimethreadresumed_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_RuntimeThreadResumed& NotifyMessage::_internal_runtimethreadresumed() const {
  return _internal_has_runtimethreadresumed()
      ? *Payload_.runtimethreadresumed_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_RuntimeThreadResumed*>(&::SharpDetect::Common::Messages::_Notify_RuntimeThreadResumed_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_RuntimeThreadResumed& NotifyMessage::runtimethreadresumed() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.RuntimeThreadResumed)
  return _internal_runtimethreadresumed();
}
inline ::SharpDetect::Common::Messages::Notify_RuntimeThreadResumed* NotifyMessage::_internal_mutable_runtimethreadresumed() {
  if (!_internal_has_runtimethreadresumed()) {
    clear_Payload();
    set_has_runtimethreadresumed();
    Payload_.runtimethreadresumed_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_RuntimeThreadResumed >(
        GetArenaNoVirtual());
  }
  return Payload_.runtimethreadresumed_;
}
inline ::SharpDetect::Common::Messages::Notify_RuntimeThreadResumed* NotifyMessage::mutable_runtimethreadresumed() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.RuntimeThreadResumed)
  return _internal_mutable_runtimethreadresumed();
}

// .SharpDetect.Common.Messages.Notify_SurvivingReferences SurvivingReferences = 25;
inline bool NotifyMessage::_internal_has_survivingreferences() const {
  return Payload_case() == kSurvivingReferences;
}
inline bool NotifyMessage::has_survivingreferences() const {
  return _internal_has_survivingreferences();
}
inline void NotifyMessage::set_has_survivingreferences() {
  _oneof_case_[0] = kSurvivingReferences;
}
inline void NotifyMessage::clear_survivingreferences() {
  if (_internal_has_survivingreferences()) {
    delete Payload_.survivingreferences_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_SurvivingReferences* NotifyMessage::release_survivingreferences() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.SurvivingReferences)
  if (_internal_has_survivingreferences()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_SurvivingReferences* temp = Payload_.survivingreferences_;
    Payload_.survivingreferences_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_SurvivingReferences& NotifyMessage::_internal_survivingreferences() const {
  return _internal_has_survivingreferences()
      ? *Payload_.survivingreferences_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_SurvivingReferences*>(&::SharpDetect::Common::Messages::_Notify_SurvivingReferences_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_SurvivingReferences& NotifyMessage::survivingreferences() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.SurvivingReferences)
  return _internal_survivingreferences();
}
inline ::SharpDetect::Common::Messages::Notify_SurvivingReferences* NotifyMessage::_internal_mutable_survivingreferences() {
  if (!_internal_has_survivingreferences()) {
    clear_Payload();
    set_has_survivingreferences();
    Payload_.survivingreferences_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_SurvivingReferences >(
        GetArenaNoVirtual());
  }
  return Payload_.survivingreferences_;
}
inline ::SharpDetect::Common::Messages::Notify_SurvivingReferences* NotifyMessage::mutable_survivingreferences() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.SurvivingReferences)
  return _internal_mutable_survivingreferences();
}

// .SharpDetect.Common.Messages.Notify_MovedReferences MovedReferences = 26;
inline bool NotifyMessage::_internal_has_movedreferences() const {
  return Payload_case() == kMovedReferences;
}
inline bool NotifyMessage::has_movedreferences() const {
  return _internal_has_movedreferences();
}
inline void NotifyMessage::set_has_movedreferences() {
  _oneof_case_[0] = kMovedReferences;
}
inline void NotifyMessage::clear_movedreferences() {
  if (_internal_has_movedreferences()) {
    delete Payload_.movedreferences_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Notify_MovedReferences* NotifyMessage::release_movedreferences() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.NotifyMessage.MovedReferences)
  if (_internal_has_movedreferences()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Notify_MovedReferences* temp = Payload_.movedreferences_;
    Payload_.movedreferences_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Notify_MovedReferences& NotifyMessage::_internal_movedreferences() const {
  return _internal_has_movedreferences()
      ? *Payload_.movedreferences_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Notify_MovedReferences*>(&::SharpDetect::Common::Messages::_Notify_MovedReferences_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Notify_MovedReferences& NotifyMessage::movedreferences() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.NotifyMessage.MovedReferences)
  return _internal_movedreferences();
}
inline ::SharpDetect::Common::Messages::Notify_MovedReferences* NotifyMessage::_internal_mutable_movedreferences() {
  if (!_internal_has_movedreferences()) {
    clear_Payload();
    set_has_movedreferences();
    Payload_.movedreferences_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Notify_MovedReferences >(
        GetArenaNoVirtual());
  }
  return Payload_.movedreferences_;
}
inline ::SharpDetect::Common::Messages::Notify_MovedReferences* NotifyMessage::mutable_movedreferences() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.NotifyMessage.MovedReferences)
  return _internal_mutable_movedreferences();
}

inline bool NotifyMessage::has_Payload() const {
  return Payload_case() != PAYLOAD_NOT_SET;
}
inline void NotifyMessage::clear_has_Payload() {
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}
inline NotifyMessage::PayloadCase NotifyMessage::Payload_case() const {
  return NotifyMessage::PayloadCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Response

// uint64 RequestId = 1;
inline void Response::clear_requestid() {
  requestid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Response::_internal_requestid() const {
  return requestid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Response::requestid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Response.RequestId)
  return _internal_requestid();
}
inline void Response::_internal_set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  requestid_ = value;
}
inline void Response::set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_requestid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Response.RequestId)
}

// bool Result = 2;
inline void Response::clear_result() {
  result_ = false;
}
inline bool Response::_internal_result() const {
  return result_;
}
inline bool Response::result() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Response.Result)
  return _internal_result();
}
inline void Response::_internal_set_result(bool value) {
  
  result_ = value;
}
inline void Response::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Response.Result)
}

// -------------------------------------------------------------------

// Notify_ProfilerInitialized

// -------------------------------------------------------------------

// Notify_ProfilerDestroyed

// -------------------------------------------------------------------

// Notify_ModuleLoaded

// uint64 ModuleId = 1;
inline void Notify_ModuleLoaded::clear_moduleid() {
  moduleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_ModuleLoaded::_internal_moduleid() const {
  return moduleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_ModuleLoaded::moduleid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_ModuleLoaded.ModuleId)
  return _internal_moduleid();
}
inline void Notify_ModuleLoaded::_internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  moduleid_ = value;
}
inline void Notify_ModuleLoaded::set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_moduleid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_ModuleLoaded.ModuleId)
}

// string ModulePath = 2;
inline void Notify_ModuleLoaded::clear_modulepath() {
  modulepath_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Notify_ModuleLoaded::modulepath() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_ModuleLoaded.ModulePath)
  return _internal_modulepath();
}
inline void Notify_ModuleLoaded::set_modulepath(const std::string& value) {
  _internal_set_modulepath(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_ModuleLoaded.ModulePath)
}
inline std::string* Notify_ModuleLoaded::mutable_modulepath() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.Notify_ModuleLoaded.ModulePath)
  return _internal_mutable_modulepath();
}
inline const std::string& Notify_ModuleLoaded::_internal_modulepath() const {
  return modulepath_.GetNoArena();
}
inline void Notify_ModuleLoaded::_internal_set_modulepath(const std::string& value) {
  
  modulepath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Notify_ModuleLoaded::set_modulepath(std::string&& value) {
  
  modulepath_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SharpDetect.Common.Messages.Notify_ModuleLoaded.ModulePath)
}
inline void Notify_ModuleLoaded::set_modulepath(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  modulepath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SharpDetect.Common.Messages.Notify_ModuleLoaded.ModulePath)
}
inline void Notify_ModuleLoaded::set_modulepath(const char* value, size_t size) {
  
  modulepath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SharpDetect.Common.Messages.Notify_ModuleLoaded.ModulePath)
}
inline std::string* Notify_ModuleLoaded::_internal_mutable_modulepath() {
  
  return modulepath_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Notify_ModuleLoaded::release_modulepath() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.Notify_ModuleLoaded.ModulePath)
  
  return modulepath_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Notify_ModuleLoaded::set_allocated_modulepath(std::string* modulepath) {
  if (modulepath != nullptr) {
    
  } else {
    
  }
  modulepath_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), modulepath);
  // @@protoc_insertion_point(field_set_allocated:SharpDetect.Common.Messages.Notify_ModuleLoaded.ModulePath)
}

// -------------------------------------------------------------------

// Notify_ClassLoaded

// uint64 ModuleId = 1;
inline void Notify_ClassLoaded::clear_moduleid() {
  moduleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_ClassLoaded::_internal_moduleid() const {
  return moduleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_ClassLoaded::moduleid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_ClassLoaded.ModuleId)
  return _internal_moduleid();
}
inline void Notify_ClassLoaded::_internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  moduleid_ = value;
}
inline void Notify_ClassLoaded::set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_moduleid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_ClassLoaded.ModuleId)
}

// uint32 ClassToken = 2;
inline void Notify_ClassLoaded::clear_classtoken() {
  classtoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_ClassLoaded::_internal_classtoken() const {
  return classtoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_ClassLoaded::classtoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_ClassLoaded.ClassToken)
  return _internal_classtoken();
}
inline void Notify_ClassLoaded::_internal_set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  classtoken_ = value;
}
inline void Notify_ClassLoaded::set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_classtoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_ClassLoaded.ClassToken)
}

// -------------------------------------------------------------------

// Notify_FunctionJITCompilationStarted

// uint64 ModuleId = 1;
inline void Notify_FunctionJITCompilationStarted::clear_moduleid() {
  moduleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_FunctionJITCompilationStarted::_internal_moduleid() const {
  return moduleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_FunctionJITCompilationStarted::moduleid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_FunctionJITCompilationStarted.ModuleId)
  return _internal_moduleid();
}
inline void Notify_FunctionJITCompilationStarted::_internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  moduleid_ = value;
}
inline void Notify_FunctionJITCompilationStarted::set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_moduleid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_FunctionJITCompilationStarted.ModuleId)
}

// uint32 ClassToken = 2;
inline void Notify_FunctionJITCompilationStarted::clear_classtoken() {
  classtoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_FunctionJITCompilationStarted::_internal_classtoken() const {
  return classtoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_FunctionJITCompilationStarted::classtoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_FunctionJITCompilationStarted.ClassToken)
  return _internal_classtoken();
}
inline void Notify_FunctionJITCompilationStarted::_internal_set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  classtoken_ = value;
}
inline void Notify_FunctionJITCompilationStarted::set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_classtoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_FunctionJITCompilationStarted.ClassToken)
}

// uint32 FunctionToken = 3;
inline void Notify_FunctionJITCompilationStarted::clear_functiontoken() {
  functiontoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_FunctionJITCompilationStarted::_internal_functiontoken() const {
  return functiontoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_FunctionJITCompilationStarted::functiontoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_FunctionJITCompilationStarted.FunctionToken)
  return _internal_functiontoken();
}
inline void Notify_FunctionJITCompilationStarted::_internal_set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  functiontoken_ = value;
}
inline void Notify_FunctionJITCompilationStarted::set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_functiontoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_FunctionJITCompilationStarted.FunctionToken)
}

// -------------------------------------------------------------------

// Notify_ThreadCreated

// uint64 ThreadId = 1;
inline void Notify_ThreadCreated::clear_threadid() {
  threadid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_ThreadCreated::_internal_threadid() const {
  return threadid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_ThreadCreated::threadid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_ThreadCreated.ThreadId)
  return _internal_threadid();
}
inline void Notify_ThreadCreated::_internal_set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  threadid_ = value;
}
inline void Notify_ThreadCreated::set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_threadid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_ThreadCreated.ThreadId)
}

// -------------------------------------------------------------------

// Notify_ThreadDestroyed

// uint64 ThreadId = 1;
inline void Notify_ThreadDestroyed::clear_threadid() {
  threadid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_ThreadDestroyed::_internal_threadid() const {
  return threadid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_ThreadDestroyed::threadid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_ThreadDestroyed.ThreadId)
  return _internal_threadid();
}
inline void Notify_ThreadDestroyed::_internal_set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  threadid_ = value;
}
inline void Notify_ThreadDestroyed::set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_threadid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_ThreadDestroyed.ThreadId)
}

// -------------------------------------------------------------------

// Notify_TypeInjected

// uint64 ModuleId = 1;
inline void Notify_TypeInjected::clear_moduleid() {
  moduleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_TypeInjected::_internal_moduleid() const {
  return moduleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_TypeInjected::moduleid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_TypeInjected.ModuleId)
  return _internal_moduleid();
}
inline void Notify_TypeInjected::_internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  moduleid_ = value;
}
inline void Notify_TypeInjected::set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_moduleid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_TypeInjected.ModuleId)
}

// uint32 ClassToken = 2;
inline void Notify_TypeInjected::clear_classtoken() {
  classtoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_TypeInjected::_internal_classtoken() const {
  return classtoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_TypeInjected::classtoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_TypeInjected.ClassToken)
  return _internal_classtoken();
}
inline void Notify_TypeInjected::_internal_set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  classtoken_ = value;
}
inline void Notify_TypeInjected::set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_classtoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_TypeInjected.ClassToken)
}

// -------------------------------------------------------------------

// Notify_TypeReferenced

// uint64 ModuleId = 1;
inline void Notify_TypeReferenced::clear_moduleid() {
  moduleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_TypeReferenced::_internal_moduleid() const {
  return moduleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_TypeReferenced::moduleid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_TypeReferenced.ModuleId)
  return _internal_moduleid();
}
inline void Notify_TypeReferenced::_internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  moduleid_ = value;
}
inline void Notify_TypeReferenced::set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_moduleid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_TypeReferenced.ModuleId)
}

// uint32 ClassToken = 2;
inline void Notify_TypeReferenced::clear_classtoken() {
  classtoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_TypeReferenced::_internal_classtoken() const {
  return classtoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_TypeReferenced::classtoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_TypeReferenced.ClassToken)
  return _internal_classtoken();
}
inline void Notify_TypeReferenced::_internal_set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  classtoken_ = value;
}
inline void Notify_TypeReferenced::set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_classtoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_TypeReferenced.ClassToken)
}

// -------------------------------------------------------------------

// Notify_MethodInjected

// uint64 ModuleId = 1;
inline void Notify_MethodInjected::clear_moduleid() {
  moduleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_MethodInjected::_internal_moduleid() const {
  return moduleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_MethodInjected::moduleid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodInjected.ModuleId)
  return _internal_moduleid();
}
inline void Notify_MethodInjected::_internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  moduleid_ = value;
}
inline void Notify_MethodInjected::set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_moduleid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodInjected.ModuleId)
}

// uint32 ClassToken = 2;
inline void Notify_MethodInjected::clear_classtoken() {
  classtoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_MethodInjected::_internal_classtoken() const {
  return classtoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_MethodInjected::classtoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodInjected.ClassToken)
  return _internal_classtoken();
}
inline void Notify_MethodInjected::_internal_set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  classtoken_ = value;
}
inline void Notify_MethodInjected::set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_classtoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodInjected.ClassToken)
}

// uint32 FunctionToken = 3;
inline void Notify_MethodInjected::clear_functiontoken() {
  functiontoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_MethodInjected::_internal_functiontoken() const {
  return functiontoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_MethodInjected::functiontoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodInjected.FunctionToken)
  return _internal_functiontoken();
}
inline void Notify_MethodInjected::_internal_set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  functiontoken_ = value;
}
inline void Notify_MethodInjected::set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_functiontoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodInjected.FunctionToken)
}

// .SharpDetect.Common.Messages.MethodType Type = 4;
inline void Notify_MethodInjected::clear_type() {
  type_ = 0;
}
inline ::SharpDetect::Common::Messages::MethodType Notify_MethodInjected::_internal_type() const {
  return static_cast< ::SharpDetect::Common::Messages::MethodType >(type_);
}
inline ::SharpDetect::Common::Messages::MethodType Notify_MethodInjected::type() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodInjected.Type)
  return _internal_type();
}
inline void Notify_MethodInjected::_internal_set_type(::SharpDetect::Common::Messages::MethodType value) {
  
  type_ = value;
}
inline void Notify_MethodInjected::set_type(::SharpDetect::Common::Messages::MethodType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodInjected.Type)
}

// -------------------------------------------------------------------

// Notify_MethodWrapperInjected

// uint64 ModuleId = 1;
inline void Notify_MethodWrapperInjected::clear_moduleid() {
  moduleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_MethodWrapperInjected::_internal_moduleid() const {
  return moduleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_MethodWrapperInjected::moduleid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodWrapperInjected.ModuleId)
  return _internal_moduleid();
}
inline void Notify_MethodWrapperInjected::_internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  moduleid_ = value;
}
inline void Notify_MethodWrapperInjected::set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_moduleid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodWrapperInjected.ModuleId)
}

// uint32 ClassToken = 2;
inline void Notify_MethodWrapperInjected::clear_classtoken() {
  classtoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_MethodWrapperInjected::_internal_classtoken() const {
  return classtoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_MethodWrapperInjected::classtoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodWrapperInjected.ClassToken)
  return _internal_classtoken();
}
inline void Notify_MethodWrapperInjected::_internal_set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  classtoken_ = value;
}
inline void Notify_MethodWrapperInjected::set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_classtoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodWrapperInjected.ClassToken)
}

// uint32 OriginalFunctionToken = 3;
inline void Notify_MethodWrapperInjected::clear_originalfunctiontoken() {
  originalfunctiontoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_MethodWrapperInjected::_internal_originalfunctiontoken() const {
  return originalfunctiontoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_MethodWrapperInjected::originalfunctiontoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodWrapperInjected.OriginalFunctionToken)
  return _internal_originalfunctiontoken();
}
inline void Notify_MethodWrapperInjected::_internal_set_originalfunctiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  originalfunctiontoken_ = value;
}
inline void Notify_MethodWrapperInjected::set_originalfunctiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_originalfunctiontoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodWrapperInjected.OriginalFunctionToken)
}

// uint32 WrapperFunctionToken = 4;
inline void Notify_MethodWrapperInjected::clear_wrapperfunctiontoken() {
  wrapperfunctiontoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_MethodWrapperInjected::_internal_wrapperfunctiontoken() const {
  return wrapperfunctiontoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_MethodWrapperInjected::wrapperfunctiontoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodWrapperInjected.WrapperFunctionToken)
  return _internal_wrapperfunctiontoken();
}
inline void Notify_MethodWrapperInjected::_internal_set_wrapperfunctiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  wrapperfunctiontoken_ = value;
}
inline void Notify_MethodWrapperInjected::set_wrapperfunctiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_wrapperfunctiontoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodWrapperInjected.WrapperFunctionToken)
}

// -------------------------------------------------------------------

// Notify_HelperMethodReferenced

// uint64 ModuleId = 1;
inline void Notify_HelperMethodReferenced::clear_moduleid() {
  moduleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_HelperMethodReferenced::_internal_moduleid() const {
  return moduleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_HelperMethodReferenced::moduleid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_HelperMethodReferenced.ModuleId)
  return _internal_moduleid();
}
inline void Notify_HelperMethodReferenced::_internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  moduleid_ = value;
}
inline void Notify_HelperMethodReferenced::set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_moduleid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_HelperMethodReferenced.ModuleId)
}

// uint32 ClassToken = 2;
inline void Notify_HelperMethodReferenced::clear_classtoken() {
  classtoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_HelperMethodReferenced::_internal_classtoken() const {
  return classtoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_HelperMethodReferenced::classtoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_HelperMethodReferenced.ClassToken)
  return _internal_classtoken();
}
inline void Notify_HelperMethodReferenced::_internal_set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  classtoken_ = value;
}
inline void Notify_HelperMethodReferenced::set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_classtoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_HelperMethodReferenced.ClassToken)
}

// uint32 FunctionToken = 3;
inline void Notify_HelperMethodReferenced::clear_functiontoken() {
  functiontoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_HelperMethodReferenced::_internal_functiontoken() const {
  return functiontoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_HelperMethodReferenced::functiontoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_HelperMethodReferenced.FunctionToken)
  return _internal_functiontoken();
}
inline void Notify_HelperMethodReferenced::_internal_set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  functiontoken_ = value;
}
inline void Notify_HelperMethodReferenced::set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_functiontoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_HelperMethodReferenced.FunctionToken)
}

// .SharpDetect.Common.Messages.MethodType Type = 4;
inline void Notify_HelperMethodReferenced::clear_type() {
  type_ = 0;
}
inline ::SharpDetect::Common::Messages::MethodType Notify_HelperMethodReferenced::_internal_type() const {
  return static_cast< ::SharpDetect::Common::Messages::MethodType >(type_);
}
inline ::SharpDetect::Common::Messages::MethodType Notify_HelperMethodReferenced::type() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_HelperMethodReferenced.Type)
  return _internal_type();
}
inline void Notify_HelperMethodReferenced::_internal_set_type(::SharpDetect::Common::Messages::MethodType value) {
  
  type_ = value;
}
inline void Notify_HelperMethodReferenced::set_type(::SharpDetect::Common::Messages::MethodType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_HelperMethodReferenced.Type)
}

// -------------------------------------------------------------------

// Notify_WrapperMethodReferenced

// uint64 DefModuleId = 1;
inline void Notify_WrapperMethodReferenced::clear_defmoduleid() {
  defmoduleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_WrapperMethodReferenced::_internal_defmoduleid() const {
  return defmoduleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_WrapperMethodReferenced::defmoduleid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_WrapperMethodReferenced.DefModuleId)
  return _internal_defmoduleid();
}
inline void Notify_WrapperMethodReferenced::_internal_set_defmoduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  defmoduleid_ = value;
}
inline void Notify_WrapperMethodReferenced::set_defmoduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_defmoduleid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_WrapperMethodReferenced.DefModuleId)
}

// uint32 DefClassToken = 2;
inline void Notify_WrapperMethodReferenced::clear_defclasstoken() {
  defclasstoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_WrapperMethodReferenced::_internal_defclasstoken() const {
  return defclasstoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_WrapperMethodReferenced::defclasstoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_WrapperMethodReferenced.DefClassToken)
  return _internal_defclasstoken();
}
inline void Notify_WrapperMethodReferenced::_internal_set_defclasstoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  defclasstoken_ = value;
}
inline void Notify_WrapperMethodReferenced::set_defclasstoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_defclasstoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_WrapperMethodReferenced.DefClassToken)
}

// uint32 DefFunctionToken = 3;
inline void Notify_WrapperMethodReferenced::clear_deffunctiontoken() {
  deffunctiontoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_WrapperMethodReferenced::_internal_deffunctiontoken() const {
  return deffunctiontoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_WrapperMethodReferenced::deffunctiontoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_WrapperMethodReferenced.DefFunctionToken)
  return _internal_deffunctiontoken();
}
inline void Notify_WrapperMethodReferenced::_internal_set_deffunctiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  deffunctiontoken_ = value;
}
inline void Notify_WrapperMethodReferenced::set_deffunctiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_deffunctiontoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_WrapperMethodReferenced.DefFunctionToken)
}

// uint64 RefModuleId = 4;
inline void Notify_WrapperMethodReferenced::clear_refmoduleid() {
  refmoduleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_WrapperMethodReferenced::_internal_refmoduleid() const {
  return refmoduleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_WrapperMethodReferenced::refmoduleid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_WrapperMethodReferenced.RefModuleId)
  return _internal_refmoduleid();
}
inline void Notify_WrapperMethodReferenced::_internal_set_refmoduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  refmoduleid_ = value;
}
inline void Notify_WrapperMethodReferenced::set_refmoduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_refmoduleid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_WrapperMethodReferenced.RefModuleId)
}

// uint32 RefClassToken = 5;
inline void Notify_WrapperMethodReferenced::clear_refclasstoken() {
  refclasstoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_WrapperMethodReferenced::_internal_refclasstoken() const {
  return refclasstoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_WrapperMethodReferenced::refclasstoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_WrapperMethodReferenced.RefClassToken)
  return _internal_refclasstoken();
}
inline void Notify_WrapperMethodReferenced::_internal_set_refclasstoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  refclasstoken_ = value;
}
inline void Notify_WrapperMethodReferenced::set_refclasstoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_refclasstoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_WrapperMethodReferenced.RefClassToken)
}

// uint32 RefFunctionToken = 6;
inline void Notify_WrapperMethodReferenced::clear_reffunctiontoken() {
  reffunctiontoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_WrapperMethodReferenced::_internal_reffunctiontoken() const {
  return reffunctiontoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_WrapperMethodReferenced::reffunctiontoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_WrapperMethodReferenced.RefFunctionToken)
  return _internal_reffunctiontoken();
}
inline void Notify_WrapperMethodReferenced::_internal_set_reffunctiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  reffunctiontoken_ = value;
}
inline void Notify_WrapperMethodReferenced::set_reffunctiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reffunctiontoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_WrapperMethodReferenced.RefFunctionToken)
}

// -------------------------------------------------------------------

// Notify_MethodCalled

// uint64 ModuleId = 1;
inline void Notify_MethodCalled::clear_moduleid() {
  moduleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_MethodCalled::_internal_moduleid() const {
  return moduleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_MethodCalled::moduleid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodCalled.ModuleId)
  return _internal_moduleid();
}
inline void Notify_MethodCalled::_internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  moduleid_ = value;
}
inline void Notify_MethodCalled::set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_moduleid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodCalled.ModuleId)
}

// uint32 ClassToken = 2;
inline void Notify_MethodCalled::clear_classtoken() {
  classtoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_MethodCalled::_internal_classtoken() const {
  return classtoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_MethodCalled::classtoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodCalled.ClassToken)
  return _internal_classtoken();
}
inline void Notify_MethodCalled::_internal_set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  classtoken_ = value;
}
inline void Notify_MethodCalled::set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_classtoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodCalled.ClassToken)
}

// uint32 FunctionToken = 3;
inline void Notify_MethodCalled::clear_functiontoken() {
  functiontoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_MethodCalled::_internal_functiontoken() const {
  return functiontoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_MethodCalled::functiontoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodCalled.FunctionToken)
  return _internal_functiontoken();
}
inline void Notify_MethodCalled::_internal_set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  functiontoken_ = value;
}
inline void Notify_MethodCalled::set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_functiontoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodCalled.FunctionToken)
}

// bytes ArgumentValues = 4;
inline void Notify_MethodCalled::clear_argumentvalues() {
  argumentvalues_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Notify_MethodCalled::argumentvalues() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodCalled.ArgumentValues)
  return _internal_argumentvalues();
}
inline void Notify_MethodCalled::set_argumentvalues(const std::string& value) {
  _internal_set_argumentvalues(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodCalled.ArgumentValues)
}
inline std::string* Notify_MethodCalled::mutable_argumentvalues() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.Notify_MethodCalled.ArgumentValues)
  return _internal_mutable_argumentvalues();
}
inline const std::string& Notify_MethodCalled::_internal_argumentvalues() const {
  return argumentvalues_.GetNoArena();
}
inline void Notify_MethodCalled::_internal_set_argumentvalues(const std::string& value) {
  
  argumentvalues_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Notify_MethodCalled::set_argumentvalues(std::string&& value) {
  
  argumentvalues_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SharpDetect.Common.Messages.Notify_MethodCalled.ArgumentValues)
}
inline void Notify_MethodCalled::set_argumentvalues(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  argumentvalues_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SharpDetect.Common.Messages.Notify_MethodCalled.ArgumentValues)
}
inline void Notify_MethodCalled::set_argumentvalues(const void* value, size_t size) {
  
  argumentvalues_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SharpDetect.Common.Messages.Notify_MethodCalled.ArgumentValues)
}
inline std::string* Notify_MethodCalled::_internal_mutable_argumentvalues() {
  
  return argumentvalues_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Notify_MethodCalled::release_argumentvalues() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.Notify_MethodCalled.ArgumentValues)
  
  return argumentvalues_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Notify_MethodCalled::set_allocated_argumentvalues(std::string* argumentvalues) {
  if (argumentvalues != nullptr) {
    
  } else {
    
  }
  argumentvalues_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), argumentvalues);
  // @@protoc_insertion_point(field_set_allocated:SharpDetect.Common.Messages.Notify_MethodCalled.ArgumentValues)
}

// bytes ArgumentOffsets = 5;
inline void Notify_MethodCalled::clear_argumentoffsets() {
  argumentoffsets_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Notify_MethodCalled::argumentoffsets() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodCalled.ArgumentOffsets)
  return _internal_argumentoffsets();
}
inline void Notify_MethodCalled::set_argumentoffsets(const std::string& value) {
  _internal_set_argumentoffsets(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodCalled.ArgumentOffsets)
}
inline std::string* Notify_MethodCalled::mutable_argumentoffsets() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.Notify_MethodCalled.ArgumentOffsets)
  return _internal_mutable_argumentoffsets();
}
inline const std::string& Notify_MethodCalled::_internal_argumentoffsets() const {
  return argumentoffsets_.GetNoArena();
}
inline void Notify_MethodCalled::_internal_set_argumentoffsets(const std::string& value) {
  
  argumentoffsets_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Notify_MethodCalled::set_argumentoffsets(std::string&& value) {
  
  argumentoffsets_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SharpDetect.Common.Messages.Notify_MethodCalled.ArgumentOffsets)
}
inline void Notify_MethodCalled::set_argumentoffsets(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  argumentoffsets_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SharpDetect.Common.Messages.Notify_MethodCalled.ArgumentOffsets)
}
inline void Notify_MethodCalled::set_argumentoffsets(const void* value, size_t size) {
  
  argumentoffsets_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SharpDetect.Common.Messages.Notify_MethodCalled.ArgumentOffsets)
}
inline std::string* Notify_MethodCalled::_internal_mutable_argumentoffsets() {
  
  return argumentoffsets_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Notify_MethodCalled::release_argumentoffsets() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.Notify_MethodCalled.ArgumentOffsets)
  
  return argumentoffsets_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Notify_MethodCalled::set_allocated_argumentoffsets(std::string* argumentoffsets) {
  if (argumentoffsets != nullptr) {
    
  } else {
    
  }
  argumentoffsets_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), argumentoffsets);
  // @@protoc_insertion_point(field_set_allocated:SharpDetect.Common.Messages.Notify_MethodCalled.ArgumentOffsets)
}

// -------------------------------------------------------------------

// Notify_MethodReturned

// uint64 ModuleId = 1;
inline void Notify_MethodReturned::clear_moduleid() {
  moduleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_MethodReturned::_internal_moduleid() const {
  return moduleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_MethodReturned::moduleid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodReturned.ModuleId)
  return _internal_moduleid();
}
inline void Notify_MethodReturned::_internal_set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  moduleid_ = value;
}
inline void Notify_MethodReturned::set_moduleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_moduleid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodReturned.ModuleId)
}

// uint32 ClassToken = 2;
inline void Notify_MethodReturned::clear_classtoken() {
  classtoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_MethodReturned::_internal_classtoken() const {
  return classtoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_MethodReturned::classtoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodReturned.ClassToken)
  return _internal_classtoken();
}
inline void Notify_MethodReturned::_internal_set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  classtoken_ = value;
}
inline void Notify_MethodReturned::set_classtoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_classtoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodReturned.ClassToken)
}

// uint32 FunctionToken = 3;
inline void Notify_MethodReturned::clear_functiontoken() {
  functiontoken_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_MethodReturned::_internal_functiontoken() const {
  return functiontoken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notify_MethodReturned::functiontoken() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodReturned.FunctionToken)
  return _internal_functiontoken();
}
inline void Notify_MethodReturned::_internal_set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  functiontoken_ = value;
}
inline void Notify_MethodReturned::set_functiontoken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_functiontoken(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodReturned.FunctionToken)
}

// bytes ReturnValue = 4;
inline void Notify_MethodReturned::clear_returnvalue() {
  returnvalue_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Notify_MethodReturned::returnvalue() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodReturned.ReturnValue)
  return _internal_returnvalue();
}
inline void Notify_MethodReturned::set_returnvalue(const std::string& value) {
  _internal_set_returnvalue(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodReturned.ReturnValue)
}
inline std::string* Notify_MethodReturned::mutable_returnvalue() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.Notify_MethodReturned.ReturnValue)
  return _internal_mutable_returnvalue();
}
inline const std::string& Notify_MethodReturned::_internal_returnvalue() const {
  return returnvalue_.GetNoArena();
}
inline void Notify_MethodReturned::_internal_set_returnvalue(const std::string& value) {
  
  returnvalue_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Notify_MethodReturned::set_returnvalue(std::string&& value) {
  
  returnvalue_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SharpDetect.Common.Messages.Notify_MethodReturned.ReturnValue)
}
inline void Notify_MethodReturned::set_returnvalue(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  returnvalue_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SharpDetect.Common.Messages.Notify_MethodReturned.ReturnValue)
}
inline void Notify_MethodReturned::set_returnvalue(const void* value, size_t size) {
  
  returnvalue_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SharpDetect.Common.Messages.Notify_MethodReturned.ReturnValue)
}
inline std::string* Notify_MethodReturned::_internal_mutable_returnvalue() {
  
  return returnvalue_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Notify_MethodReturned::release_returnvalue() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.Notify_MethodReturned.ReturnValue)
  
  return returnvalue_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Notify_MethodReturned::set_allocated_returnvalue(std::string* returnvalue) {
  if (returnvalue != nullptr) {
    
  } else {
    
  }
  returnvalue_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), returnvalue);
  // @@protoc_insertion_point(field_set_allocated:SharpDetect.Common.Messages.Notify_MethodReturned.ReturnValue)
}

// bytes ByRefArgumentValues = 5;
inline void Notify_MethodReturned::clear_byrefargumentvalues() {
  byrefargumentvalues_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Notify_MethodReturned::byrefargumentvalues() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodReturned.ByRefArgumentValues)
  return _internal_byrefargumentvalues();
}
inline void Notify_MethodReturned::set_byrefargumentvalues(const std::string& value) {
  _internal_set_byrefargumentvalues(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodReturned.ByRefArgumentValues)
}
inline std::string* Notify_MethodReturned::mutable_byrefargumentvalues() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.Notify_MethodReturned.ByRefArgumentValues)
  return _internal_mutable_byrefargumentvalues();
}
inline const std::string& Notify_MethodReturned::_internal_byrefargumentvalues() const {
  return byrefargumentvalues_.GetNoArena();
}
inline void Notify_MethodReturned::_internal_set_byrefargumentvalues(const std::string& value) {
  
  byrefargumentvalues_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Notify_MethodReturned::set_byrefargumentvalues(std::string&& value) {
  
  byrefargumentvalues_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SharpDetect.Common.Messages.Notify_MethodReturned.ByRefArgumentValues)
}
inline void Notify_MethodReturned::set_byrefargumentvalues(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  byrefargumentvalues_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SharpDetect.Common.Messages.Notify_MethodReturned.ByRefArgumentValues)
}
inline void Notify_MethodReturned::set_byrefargumentvalues(const void* value, size_t size) {
  
  byrefargumentvalues_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SharpDetect.Common.Messages.Notify_MethodReturned.ByRefArgumentValues)
}
inline std::string* Notify_MethodReturned::_internal_mutable_byrefargumentvalues() {
  
  return byrefargumentvalues_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Notify_MethodReturned::release_byrefargumentvalues() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.Notify_MethodReturned.ByRefArgumentValues)
  
  return byrefargumentvalues_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Notify_MethodReturned::set_allocated_byrefargumentvalues(std::string* byrefargumentvalues) {
  if (byrefargumentvalues != nullptr) {
    
  } else {
    
  }
  byrefargumentvalues_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), byrefargumentvalues);
  // @@protoc_insertion_point(field_set_allocated:SharpDetect.Common.Messages.Notify_MethodReturned.ByRefArgumentValues)
}

// bytes ByRefArgumentOffsets = 6;
inline void Notify_MethodReturned::clear_byrefargumentoffsets() {
  byrefargumentoffsets_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Notify_MethodReturned::byrefargumentoffsets() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MethodReturned.ByRefArgumentOffsets)
  return _internal_byrefargumentoffsets();
}
inline void Notify_MethodReturned::set_byrefargumentoffsets(const std::string& value) {
  _internal_set_byrefargumentoffsets(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MethodReturned.ByRefArgumentOffsets)
}
inline std::string* Notify_MethodReturned::mutable_byrefargumentoffsets() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.Notify_MethodReturned.ByRefArgumentOffsets)
  return _internal_mutable_byrefargumentoffsets();
}
inline const std::string& Notify_MethodReturned::_internal_byrefargumentoffsets() const {
  return byrefargumentoffsets_.GetNoArena();
}
inline void Notify_MethodReturned::_internal_set_byrefargumentoffsets(const std::string& value) {
  
  byrefargumentoffsets_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Notify_MethodReturned::set_byrefargumentoffsets(std::string&& value) {
  
  byrefargumentoffsets_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SharpDetect.Common.Messages.Notify_MethodReturned.ByRefArgumentOffsets)
}
inline void Notify_MethodReturned::set_byrefargumentoffsets(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  byrefargumentoffsets_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SharpDetect.Common.Messages.Notify_MethodReturned.ByRefArgumentOffsets)
}
inline void Notify_MethodReturned::set_byrefargumentoffsets(const void* value, size_t size) {
  
  byrefargumentoffsets_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SharpDetect.Common.Messages.Notify_MethodReturned.ByRefArgumentOffsets)
}
inline std::string* Notify_MethodReturned::_internal_mutable_byrefargumentoffsets() {
  
  return byrefargumentoffsets_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Notify_MethodReturned::release_byrefargumentoffsets() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.Notify_MethodReturned.ByRefArgumentOffsets)
  
  return byrefargumentoffsets_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Notify_MethodReturned::set_allocated_byrefargumentoffsets(std::string* byrefargumentoffsets) {
  if (byrefargumentoffsets != nullptr) {
    
  } else {
    
  }
  byrefargumentoffsets_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), byrefargumentoffsets);
  // @@protoc_insertion_point(field_set_allocated:SharpDetect.Common.Messages.Notify_MethodReturned.ByRefArgumentOffsets)
}

// -------------------------------------------------------------------

// Notify_GarbageCollectionStarted

// bytes GenerationsCollected = 1;
inline void Notify_GarbageCollectionStarted::clear_generationscollected() {
  generationscollected_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Notify_GarbageCollectionStarted::generationscollected() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_GarbageCollectionStarted.GenerationsCollected)
  return _internal_generationscollected();
}
inline void Notify_GarbageCollectionStarted::set_generationscollected(const std::string& value) {
  _internal_set_generationscollected(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_GarbageCollectionStarted.GenerationsCollected)
}
inline std::string* Notify_GarbageCollectionStarted::mutable_generationscollected() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.Notify_GarbageCollectionStarted.GenerationsCollected)
  return _internal_mutable_generationscollected();
}
inline const std::string& Notify_GarbageCollectionStarted::_internal_generationscollected() const {
  return generationscollected_.GetNoArena();
}
inline void Notify_GarbageCollectionStarted::_internal_set_generationscollected(const std::string& value) {
  
  generationscollected_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Notify_GarbageCollectionStarted::set_generationscollected(std::string&& value) {
  
  generationscollected_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SharpDetect.Common.Messages.Notify_GarbageCollectionStarted.GenerationsCollected)
}
inline void Notify_GarbageCollectionStarted::set_generationscollected(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  generationscollected_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SharpDetect.Common.Messages.Notify_GarbageCollectionStarted.GenerationsCollected)
}
inline void Notify_GarbageCollectionStarted::set_generationscollected(const void* value, size_t size) {
  
  generationscollected_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SharpDetect.Common.Messages.Notify_GarbageCollectionStarted.GenerationsCollected)
}
inline std::string* Notify_GarbageCollectionStarted::_internal_mutable_generationscollected() {
  
  return generationscollected_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Notify_GarbageCollectionStarted::release_generationscollected() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.Notify_GarbageCollectionStarted.GenerationsCollected)
  
  return generationscollected_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Notify_GarbageCollectionStarted::set_allocated_generationscollected(std::string* generationscollected) {
  if (generationscollected != nullptr) {
    
  } else {
    
  }
  generationscollected_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), generationscollected);
  // @@protoc_insertion_point(field_set_allocated:SharpDetect.Common.Messages.Notify_GarbageCollectionStarted.GenerationsCollected)
}

// bytes GenerationSegmentBounds = 2;
inline void Notify_GarbageCollectionStarted::clear_generationsegmentbounds() {
  generationsegmentbounds_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Notify_GarbageCollectionStarted::generationsegmentbounds() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_GarbageCollectionStarted.GenerationSegmentBounds)
  return _internal_generationsegmentbounds();
}
inline void Notify_GarbageCollectionStarted::set_generationsegmentbounds(const std::string& value) {
  _internal_set_generationsegmentbounds(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_GarbageCollectionStarted.GenerationSegmentBounds)
}
inline std::string* Notify_GarbageCollectionStarted::mutable_generationsegmentbounds() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.Notify_GarbageCollectionStarted.GenerationSegmentBounds)
  return _internal_mutable_generationsegmentbounds();
}
inline const std::string& Notify_GarbageCollectionStarted::_internal_generationsegmentbounds() const {
  return generationsegmentbounds_.GetNoArena();
}
inline void Notify_GarbageCollectionStarted::_internal_set_generationsegmentbounds(const std::string& value) {
  
  generationsegmentbounds_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Notify_GarbageCollectionStarted::set_generationsegmentbounds(std::string&& value) {
  
  generationsegmentbounds_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SharpDetect.Common.Messages.Notify_GarbageCollectionStarted.GenerationSegmentBounds)
}
inline void Notify_GarbageCollectionStarted::set_generationsegmentbounds(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  generationsegmentbounds_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SharpDetect.Common.Messages.Notify_GarbageCollectionStarted.GenerationSegmentBounds)
}
inline void Notify_GarbageCollectionStarted::set_generationsegmentbounds(const void* value, size_t size) {
  
  generationsegmentbounds_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SharpDetect.Common.Messages.Notify_GarbageCollectionStarted.GenerationSegmentBounds)
}
inline std::string* Notify_GarbageCollectionStarted::_internal_mutable_generationsegmentbounds() {
  
  return generationsegmentbounds_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Notify_GarbageCollectionStarted::release_generationsegmentbounds() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.Notify_GarbageCollectionStarted.GenerationSegmentBounds)
  
  return generationsegmentbounds_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Notify_GarbageCollectionStarted::set_allocated_generationsegmentbounds(std::string* generationsegmentbounds) {
  if (generationsegmentbounds != nullptr) {
    
  } else {
    
  }
  generationsegmentbounds_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), generationsegmentbounds);
  // @@protoc_insertion_point(field_set_allocated:SharpDetect.Common.Messages.Notify_GarbageCollectionStarted.GenerationSegmentBounds)
}

// -------------------------------------------------------------------

// Notify_GarbageCollectionFinished

// bytes GenerationsCollected = 1;
inline void Notify_GarbageCollectionFinished::clear_generationscollected() {
  generationscollected_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Notify_GarbageCollectionFinished::generationscollected() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_GarbageCollectionFinished.GenerationsCollected)
  return _internal_generationscollected();
}
inline void Notify_GarbageCollectionFinished::set_generationscollected(const std::string& value) {
  _internal_set_generationscollected(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_GarbageCollectionFinished.GenerationsCollected)
}
inline std::string* Notify_GarbageCollectionFinished::mutable_generationscollected() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.Notify_GarbageCollectionFinished.GenerationsCollected)
  return _internal_mutable_generationscollected();
}
inline const std::string& Notify_GarbageCollectionFinished::_internal_generationscollected() const {
  return generationscollected_.GetNoArena();
}
inline void Notify_GarbageCollectionFinished::_internal_set_generationscollected(const std::string& value) {
  
  generationscollected_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Notify_GarbageCollectionFinished::set_generationscollected(std::string&& value) {
  
  generationscollected_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SharpDetect.Common.Messages.Notify_GarbageCollectionFinished.GenerationsCollected)
}
inline void Notify_GarbageCollectionFinished::set_generationscollected(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  generationscollected_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SharpDetect.Common.Messages.Notify_GarbageCollectionFinished.GenerationsCollected)
}
inline void Notify_GarbageCollectionFinished::set_generationscollected(const void* value, size_t size) {
  
  generationscollected_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SharpDetect.Common.Messages.Notify_GarbageCollectionFinished.GenerationsCollected)
}
inline std::string* Notify_GarbageCollectionFinished::_internal_mutable_generationscollected() {
  
  return generationscollected_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Notify_GarbageCollectionFinished::release_generationscollected() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.Notify_GarbageCollectionFinished.GenerationsCollected)
  
  return generationscollected_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Notify_GarbageCollectionFinished::set_allocated_generationscollected(std::string* generationscollected) {
  if (generationscollected != nullptr) {
    
  } else {
    
  }
  generationscollected_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), generationscollected);
  // @@protoc_insertion_point(field_set_allocated:SharpDetect.Common.Messages.Notify_GarbageCollectionFinished.GenerationsCollected)
}

// bytes GenerationSegmentBounds = 2;
inline void Notify_GarbageCollectionFinished::clear_generationsegmentbounds() {
  generationsegmentbounds_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Notify_GarbageCollectionFinished::generationsegmentbounds() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_GarbageCollectionFinished.GenerationSegmentBounds)
  return _internal_generationsegmentbounds();
}
inline void Notify_GarbageCollectionFinished::set_generationsegmentbounds(const std::string& value) {
  _internal_set_generationsegmentbounds(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_GarbageCollectionFinished.GenerationSegmentBounds)
}
inline std::string* Notify_GarbageCollectionFinished::mutable_generationsegmentbounds() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.Notify_GarbageCollectionFinished.GenerationSegmentBounds)
  return _internal_mutable_generationsegmentbounds();
}
inline const std::string& Notify_GarbageCollectionFinished::_internal_generationsegmentbounds() const {
  return generationsegmentbounds_.GetNoArena();
}
inline void Notify_GarbageCollectionFinished::_internal_set_generationsegmentbounds(const std::string& value) {
  
  generationsegmentbounds_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Notify_GarbageCollectionFinished::set_generationsegmentbounds(std::string&& value) {
  
  generationsegmentbounds_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SharpDetect.Common.Messages.Notify_GarbageCollectionFinished.GenerationSegmentBounds)
}
inline void Notify_GarbageCollectionFinished::set_generationsegmentbounds(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  generationsegmentbounds_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SharpDetect.Common.Messages.Notify_GarbageCollectionFinished.GenerationSegmentBounds)
}
inline void Notify_GarbageCollectionFinished::set_generationsegmentbounds(const void* value, size_t size) {
  
  generationsegmentbounds_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SharpDetect.Common.Messages.Notify_GarbageCollectionFinished.GenerationSegmentBounds)
}
inline std::string* Notify_GarbageCollectionFinished::_internal_mutable_generationsegmentbounds() {
  
  return generationsegmentbounds_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Notify_GarbageCollectionFinished::release_generationsegmentbounds() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.Notify_GarbageCollectionFinished.GenerationSegmentBounds)
  
  return generationsegmentbounds_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Notify_GarbageCollectionFinished::set_allocated_generationsegmentbounds(std::string* generationsegmentbounds) {
  if (generationsegmentbounds != nullptr) {
    
  } else {
    
  }
  generationsegmentbounds_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), generationsegmentbounds);
  // @@protoc_insertion_point(field_set_allocated:SharpDetect.Common.Messages.Notify_GarbageCollectionFinished.GenerationSegmentBounds)
}

// -------------------------------------------------------------------

// Notify_RuntimeSuspendStarted

// .SharpDetect.Common.Messages.RuntimeSuspensionReason Reason = 1;
inline void Notify_RuntimeSuspendStarted::clear_reason() {
  reason_ = 0;
}
inline ::SharpDetect::Common::Messages::RuntimeSuspensionReason Notify_RuntimeSuspendStarted::_internal_reason() const {
  return static_cast< ::SharpDetect::Common::Messages::RuntimeSuspensionReason >(reason_);
}
inline ::SharpDetect::Common::Messages::RuntimeSuspensionReason Notify_RuntimeSuspendStarted::reason() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_RuntimeSuspendStarted.Reason)
  return _internal_reason();
}
inline void Notify_RuntimeSuspendStarted::_internal_set_reason(::SharpDetect::Common::Messages::RuntimeSuspensionReason value) {
  
  reason_ = value;
}
inline void Notify_RuntimeSuspendStarted::set_reason(::SharpDetect::Common::Messages::RuntimeSuspensionReason value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_RuntimeSuspendStarted.Reason)
}

// -------------------------------------------------------------------

// Notify_RuntimeSuspendFinished

// -------------------------------------------------------------------

// Notify_RuntimeThreadSuspended

// uint64 ThreadId = 1;
inline void Notify_RuntimeThreadSuspended::clear_threadid() {
  threadid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_RuntimeThreadSuspended::_internal_threadid() const {
  return threadid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_RuntimeThreadSuspended::threadid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_RuntimeThreadSuspended.ThreadId)
  return _internal_threadid();
}
inline void Notify_RuntimeThreadSuspended::_internal_set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  threadid_ = value;
}
inline void Notify_RuntimeThreadSuspended::set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_threadid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_RuntimeThreadSuspended.ThreadId)
}

// -------------------------------------------------------------------

// Notify_RuntimeThreadResumed

// uint64 ThreadId = 1;
inline void Notify_RuntimeThreadResumed::clear_threadid() {
  threadid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_RuntimeThreadResumed::_internal_threadid() const {
  return threadid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notify_RuntimeThreadResumed::threadid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_RuntimeThreadResumed.ThreadId)
  return _internal_threadid();
}
inline void Notify_RuntimeThreadResumed::_internal_set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  threadid_ = value;
}
inline void Notify_RuntimeThreadResumed::set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_threadid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_RuntimeThreadResumed.ThreadId)
}

// -------------------------------------------------------------------

// Notify_SurvivingReferences

// bytes Blocks = 1;
inline void Notify_SurvivingReferences::clear_blocks() {
  blocks_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Notify_SurvivingReferences::blocks() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_SurvivingReferences.Blocks)
  return _internal_blocks();
}
inline void Notify_SurvivingReferences::set_blocks(const std::string& value) {
  _internal_set_blocks(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_SurvivingReferences.Blocks)
}
inline std::string* Notify_SurvivingReferences::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.Notify_SurvivingReferences.Blocks)
  return _internal_mutable_blocks();
}
inline const std::string& Notify_SurvivingReferences::_internal_blocks() const {
  return blocks_.GetNoArena();
}
inline void Notify_SurvivingReferences::_internal_set_blocks(const std::string& value) {
  
  blocks_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Notify_SurvivingReferences::set_blocks(std::string&& value) {
  
  blocks_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SharpDetect.Common.Messages.Notify_SurvivingReferences.Blocks)
}
inline void Notify_SurvivingReferences::set_blocks(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  blocks_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SharpDetect.Common.Messages.Notify_SurvivingReferences.Blocks)
}
inline void Notify_SurvivingReferences::set_blocks(const void* value, size_t size) {
  
  blocks_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SharpDetect.Common.Messages.Notify_SurvivingReferences.Blocks)
}
inline std::string* Notify_SurvivingReferences::_internal_mutable_blocks() {
  
  return blocks_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Notify_SurvivingReferences::release_blocks() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.Notify_SurvivingReferences.Blocks)
  
  return blocks_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Notify_SurvivingReferences::set_allocated_blocks(std::string* blocks) {
  if (blocks != nullptr) {
    
  } else {
    
  }
  blocks_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), blocks);
  // @@protoc_insertion_point(field_set_allocated:SharpDetect.Common.Messages.Notify_SurvivingReferences.Blocks)
}

// bytes Lengths = 2;
inline void Notify_SurvivingReferences::clear_lengths() {
  lengths_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Notify_SurvivingReferences::lengths() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_SurvivingReferences.Lengths)
  return _internal_lengths();
}
inline void Notify_SurvivingReferences::set_lengths(const std::string& value) {
  _internal_set_lengths(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_SurvivingReferences.Lengths)
}
inline std::string* Notify_SurvivingReferences::mutable_lengths() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.Notify_SurvivingReferences.Lengths)
  return _internal_mutable_lengths();
}
inline const std::string& Notify_SurvivingReferences::_internal_lengths() const {
  return lengths_.GetNoArena();
}
inline void Notify_SurvivingReferences::_internal_set_lengths(const std::string& value) {
  
  lengths_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Notify_SurvivingReferences::set_lengths(std::string&& value) {
  
  lengths_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SharpDetect.Common.Messages.Notify_SurvivingReferences.Lengths)
}
inline void Notify_SurvivingReferences::set_lengths(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  lengths_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SharpDetect.Common.Messages.Notify_SurvivingReferences.Lengths)
}
inline void Notify_SurvivingReferences::set_lengths(const void* value, size_t size) {
  
  lengths_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SharpDetect.Common.Messages.Notify_SurvivingReferences.Lengths)
}
inline std::string* Notify_SurvivingReferences::_internal_mutable_lengths() {
  
  return lengths_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Notify_SurvivingReferences::release_lengths() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.Notify_SurvivingReferences.Lengths)
  
  return lengths_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Notify_SurvivingReferences::set_allocated_lengths(std::string* lengths) {
  if (lengths != nullptr) {
    
  } else {
    
  }
  lengths_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), lengths);
  // @@protoc_insertion_point(field_set_allocated:SharpDetect.Common.Messages.Notify_SurvivingReferences.Lengths)
}

// -------------------------------------------------------------------

// Notify_MovedReferences

// bytes OldBlocks = 1;
inline void Notify_MovedReferences::clear_oldblocks() {
  oldblocks_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Notify_MovedReferences::oldblocks() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MovedReferences.OldBlocks)
  return _internal_oldblocks();
}
inline void Notify_MovedReferences::set_oldblocks(const std::string& value) {
  _internal_set_oldblocks(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MovedReferences.OldBlocks)
}
inline std::string* Notify_MovedReferences::mutable_oldblocks() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.Notify_MovedReferences.OldBlocks)
  return _internal_mutable_oldblocks();
}
inline const std::string& Notify_MovedReferences::_internal_oldblocks() const {
  return oldblocks_.GetNoArena();
}
inline void Notify_MovedReferences::_internal_set_oldblocks(const std::string& value) {
  
  oldblocks_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Notify_MovedReferences::set_oldblocks(std::string&& value) {
  
  oldblocks_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SharpDetect.Common.Messages.Notify_MovedReferences.OldBlocks)
}
inline void Notify_MovedReferences::set_oldblocks(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  oldblocks_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SharpDetect.Common.Messages.Notify_MovedReferences.OldBlocks)
}
inline void Notify_MovedReferences::set_oldblocks(const void* value, size_t size) {
  
  oldblocks_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SharpDetect.Common.Messages.Notify_MovedReferences.OldBlocks)
}
inline std::string* Notify_MovedReferences::_internal_mutable_oldblocks() {
  
  return oldblocks_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Notify_MovedReferences::release_oldblocks() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.Notify_MovedReferences.OldBlocks)
  
  return oldblocks_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Notify_MovedReferences::set_allocated_oldblocks(std::string* oldblocks) {
  if (oldblocks != nullptr) {
    
  } else {
    
  }
  oldblocks_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), oldblocks);
  // @@protoc_insertion_point(field_set_allocated:SharpDetect.Common.Messages.Notify_MovedReferences.OldBlocks)
}

// bytes NewBlocks = 2;
inline void Notify_MovedReferences::clear_newblocks() {
  newblocks_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Notify_MovedReferences::newblocks() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MovedReferences.NewBlocks)
  return _internal_newblocks();
}
inline void Notify_MovedReferences::set_newblocks(const std::string& value) {
  _internal_set_newblocks(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MovedReferences.NewBlocks)
}
inline std::string* Notify_MovedReferences::mutable_newblocks() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.Notify_MovedReferences.NewBlocks)
  return _internal_mutable_newblocks();
}
inline const std::string& Notify_MovedReferences::_internal_newblocks() const {
  return newblocks_.GetNoArena();
}
inline void Notify_MovedReferences::_internal_set_newblocks(const std::string& value) {
  
  newblocks_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Notify_MovedReferences::set_newblocks(std::string&& value) {
  
  newblocks_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SharpDetect.Common.Messages.Notify_MovedReferences.NewBlocks)
}
inline void Notify_MovedReferences::set_newblocks(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  newblocks_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SharpDetect.Common.Messages.Notify_MovedReferences.NewBlocks)
}
inline void Notify_MovedReferences::set_newblocks(const void* value, size_t size) {
  
  newblocks_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SharpDetect.Common.Messages.Notify_MovedReferences.NewBlocks)
}
inline std::string* Notify_MovedReferences::_internal_mutable_newblocks() {
  
  return newblocks_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Notify_MovedReferences::release_newblocks() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.Notify_MovedReferences.NewBlocks)
  
  return newblocks_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Notify_MovedReferences::set_allocated_newblocks(std::string* newblocks) {
  if (newblocks != nullptr) {
    
  } else {
    
  }
  newblocks_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), newblocks);
  // @@protoc_insertion_point(field_set_allocated:SharpDetect.Common.Messages.Notify_MovedReferences.NewBlocks)
}

// bytes Lengths = 3;
inline void Notify_MovedReferences::clear_lengths() {
  lengths_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Notify_MovedReferences::lengths() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Notify_MovedReferences.Lengths)
  return _internal_lengths();
}
inline void Notify_MovedReferences::set_lengths(const std::string& value) {
  _internal_set_lengths(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Notify_MovedReferences.Lengths)
}
inline std::string* Notify_MovedReferences::mutable_lengths() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.Notify_MovedReferences.Lengths)
  return _internal_mutable_lengths();
}
inline const std::string& Notify_MovedReferences::_internal_lengths() const {
  return lengths_.GetNoArena();
}
inline void Notify_MovedReferences::_internal_set_lengths(const std::string& value) {
  
  lengths_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Notify_MovedReferences::set_lengths(std::string&& value) {
  
  lengths_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SharpDetect.Common.Messages.Notify_MovedReferences.Lengths)
}
inline void Notify_MovedReferences::set_lengths(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  lengths_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SharpDetect.Common.Messages.Notify_MovedReferences.Lengths)
}
inline void Notify_MovedReferences::set_lengths(const void* value, size_t size) {
  
  lengths_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SharpDetect.Common.Messages.Notify_MovedReferences.Lengths)
}
inline std::string* Notify_MovedReferences::_internal_mutable_lengths() {
  
  return lengths_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Notify_MovedReferences::release_lengths() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.Notify_MovedReferences.Lengths)
  
  return lengths_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Notify_MovedReferences::set_allocated_lengths(std::string* lengths) {
  if (lengths != nullptr) {
    
  } else {
    
  }
  lengths_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), lengths);
  // @@protoc_insertion_point(field_set_allocated:SharpDetect.Common.Messages.Notify_MovedReferences.Lengths)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Messages
}  // namespace Common
}  // namespace SharpDetect

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::SharpDetect::Common::Messages::MethodType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SharpDetect::Common::Messages::MethodType>() {
  return ::SharpDetect::Common::Messages::MethodType_descriptor();
}
template <> struct is_proto_enum< ::SharpDetect::Common::Messages::RuntimeSuspensionReason> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SharpDetect::Common::Messages::RuntimeSuspensionReason>() {
  return ::SharpDetect::Common::Messages::RuntimeSuspensionReason_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_src_2fSharpDetect_2eCommon_2fMessages_2fprofiler_5fnotifications_2eproto
