// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dotnet_agent_events.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dotnet_5fagent_5fevents_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dotnet_5fagent_5fevents_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dotnet_5fagent_5fevents_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dotnet_5fagent_5fevents_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dotnet_5fagent_5fevents_2eproto;
namespace SharpDetect {
namespace Common {
namespace Messages {
class AnalysisEvent;
class AnalysisEventDefaultTypeInternal;
extern AnalysisEventDefaultTypeInternal _AnalysisEvent_default_instance_;
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class Event_ArrayAccess;
class Event_ArrayAccessDefaultTypeInternal;
extern Event_ArrayAccessDefaultTypeInternal _Event_ArrayAccess_default_instance_;
class Event_MethodCall;
class Event_MethodCallDefaultTypeInternal;
extern Event_MethodCallDefaultTypeInternal _Event_MethodCall_default_instance_;
class Event_MethodCall_CapturedParametersEntry_DoNotUse;
class Event_MethodCall_CapturedParametersEntry_DoNotUseDefaultTypeInternal;
extern Event_MethodCall_CapturedParametersEntry_DoNotUseDefaultTypeInternal _Event_MethodCall_CapturedParametersEntry_DoNotUse_default_instance_;
}  // namespace Messages
}  // namespace Common
}  // namespace SharpDetect
PROTOBUF_NAMESPACE_OPEN
template<> ::SharpDetect::Common::Messages::AnalysisEvent* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::AnalysisEvent>(Arena*);
template<> ::SharpDetect::Common::Messages::Empty* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Empty>(Arena*);
template<> ::SharpDetect::Common::Messages::Event_ArrayAccess* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Event_ArrayAccess>(Arena*);
template<> ::SharpDetect::Common::Messages::Event_MethodCall* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Event_MethodCall>(Arena*);
template<> ::SharpDetect::Common::Messages::Event_MethodCall_CapturedParametersEntry_DoNotUse* Arena::CreateMaybeMessage<::SharpDetect::Common::Messages::Event_MethodCall_CapturedParametersEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace SharpDetect {
namespace Common {
namespace Messages {

enum EventType : int {
  ArrayCreated = 0,
  ArrayElementRead = 1,
  ArrayElementWritten = 2,
  FieldRead = 3,
  FieldWritten = 4,
  MethodCalled = 5,
  MethodReturned = 6,
  LockAcquireAttempted = 7,
  LockAcquireReturned = 8,
  LockReleased = 9,
  ObjectWaitAttempted = 10,
  ObjectWaitReturned = 11,
  ObjectPulsedOne = 12,
  ObjectPulsedAll = 13,
  EventType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EventType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool EventType_IsValid(int value);
constexpr EventType EventType_MIN = ArrayCreated;
constexpr EventType EventType_MAX = ObjectPulsedAll;
constexpr int EventType_ARRAYSIZE = EventType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EventType_descriptor();
template<typename T>
inline const std::string& EventType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EventType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EventType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EventType_descriptor(), enum_t_value);
}
inline bool EventType_Parse(
    const std::string& name, EventType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EventType>(
    EventType_descriptor(), name, value);
}
// ===================================================================

class AnalysisEvent :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.AnalysisEvent) */ {
 public:
  AnalysisEvent();
  virtual ~AnalysisEvent();

  AnalysisEvent(const AnalysisEvent& from);
  AnalysisEvent(AnalysisEvent&& from) noexcept
    : AnalysisEvent() {
    *this = ::std::move(from);
  }

  inline AnalysisEvent& operator=(const AnalysisEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline AnalysisEvent& operator=(AnalysisEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AnalysisEvent& default_instance();

  enum PayloadCase {
    kEmpty = 5,
    kMethodEvent = 6,
    kArrayEvent = 7,
    PAYLOAD_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AnalysisEvent* internal_default_instance() {
    return reinterpret_cast<const AnalysisEvent*>(
               &_AnalysisEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AnalysisEvent& a, AnalysisEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(AnalysisEvent* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AnalysisEvent* New() const final {
    return CreateMaybeMessage<AnalysisEvent>(nullptr);
  }

  AnalysisEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AnalysisEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AnalysisEvent& from);
  void MergeFrom(const AnalysisEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AnalysisEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.AnalysisEvent";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dotnet_5fagent_5fevents_2eproto);
    return ::descriptor_table_dotnet_5fagent_5fevents_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kObjectIdFieldNumber = 3,
    kManagedThreadIdFieldNumber = 4,
    kTypeFieldNumber = 2,
    kEmptyFieldNumber = 5,
    kMethodEventFieldNumber = 6,
    kArrayEventFieldNumber = 7,
  };
  // uint64 Id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 ObjectId = 3;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 ManagedThreadId = 4;
  void clear_managedthreadid();
  ::PROTOBUF_NAMESPACE_ID::uint64 managedthreadid() const;
  void set_managedthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_managedthreadid() const;
  void _internal_set_managedthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .SharpDetect.Common.Messages.EventType Type = 2;
  void clear_type();
  ::SharpDetect::Common::Messages::EventType type() const;
  void set_type(::SharpDetect::Common::Messages::EventType value);
  private:
  ::SharpDetect::Common::Messages::EventType _internal_type() const;
  void _internal_set_type(::SharpDetect::Common::Messages::EventType value);
  public:

  // .SharpDetect.Common.Messages.Empty Empty = 5;
  bool has_empty() const;
  private:
  bool _internal_has_empty() const;
  public:
  void clear_empty();
  const ::SharpDetect::Common::Messages::Empty& empty() const;
  ::SharpDetect::Common::Messages::Empty* release_empty();
  ::SharpDetect::Common::Messages::Empty* mutable_empty();
  void set_allocated_empty(::SharpDetect::Common::Messages::Empty* empty);
  private:
  const ::SharpDetect::Common::Messages::Empty& _internal_empty() const;
  ::SharpDetect::Common::Messages::Empty* _internal_mutable_empty();
  public:

  // .SharpDetect.Common.Messages.Event_MethodCall MethodEvent = 6;
  bool has_methodevent() const;
  private:
  bool _internal_has_methodevent() const;
  public:
  void clear_methodevent();
  const ::SharpDetect::Common::Messages::Event_MethodCall& methodevent() const;
  ::SharpDetect::Common::Messages::Event_MethodCall* release_methodevent();
  ::SharpDetect::Common::Messages::Event_MethodCall* mutable_methodevent();
  void set_allocated_methodevent(::SharpDetect::Common::Messages::Event_MethodCall* methodevent);
  private:
  const ::SharpDetect::Common::Messages::Event_MethodCall& _internal_methodevent() const;
  ::SharpDetect::Common::Messages::Event_MethodCall* _internal_mutable_methodevent();
  public:

  // .SharpDetect.Common.Messages.Event_ArrayAccess ArrayEvent = 7;
  bool has_arrayevent() const;
  private:
  bool _internal_has_arrayevent() const;
  public:
  void clear_arrayevent();
  const ::SharpDetect::Common::Messages::Event_ArrayAccess& arrayevent() const;
  ::SharpDetect::Common::Messages::Event_ArrayAccess* release_arrayevent();
  ::SharpDetect::Common::Messages::Event_ArrayAccess* mutable_arrayevent();
  void set_allocated_arrayevent(::SharpDetect::Common::Messages::Event_ArrayAccess* arrayevent);
  private:
  const ::SharpDetect::Common::Messages::Event_ArrayAccess& _internal_arrayevent() const;
  ::SharpDetect::Common::Messages::Event_ArrayAccess* _internal_mutable_arrayevent();
  public:

  void clear_Payload();
  PayloadCase Payload_case() const;
  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.AnalysisEvent)
 private:
  class _Internal;
  void set_has_empty();
  void set_has_methodevent();
  void set_has_arrayevent();

  inline bool has_Payload() const;
  inline void clear_has_Payload();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 managedthreadid_;
  int type_;
  union PayloadUnion {
    PayloadUnion() {}
    ::SharpDetect::Common::Messages::Empty* empty_;
    ::SharpDetect::Common::Messages::Event_MethodCall* methodevent_;
    ::SharpDetect::Common::Messages::Event_ArrayAccess* arrayevent_;
  } Payload_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_dotnet_5fagent_5fevents_2eproto;
};
// -------------------------------------------------------------------

class Empty :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Empty) */ {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);
  Empty(Empty&& from) noexcept
    : Empty() {
    *this = ::std::move(from);
  }

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  inline Empty& operator=(Empty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Empty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Empty& a, Empty& b) {
    a.Swap(&b);
  }
  inline void Swap(Empty* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Empty* New() const final {
    return CreateMaybeMessage<Empty>(nullptr);
  }

  Empty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Empty>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Empty* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Empty";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dotnet_5fagent_5fevents_2eproto);
    return ::descriptor_table_dotnet_5fagent_5fevents_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Empty)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dotnet_5fagent_5fevents_2eproto;
};
// -------------------------------------------------------------------

class Event_MethodCall_CapturedParametersEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Event_MethodCall_CapturedParametersEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::uint64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Event_MethodCall_CapturedParametersEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::uint64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
    0 > SuperType;
  Event_MethodCall_CapturedParametersEntry_DoNotUse();
  Event_MethodCall_CapturedParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Event_MethodCall_CapturedParametersEntry_DoNotUse& other);
  static const Event_MethodCall_CapturedParametersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Event_MethodCall_CapturedParametersEntry_DoNotUse*>(&_Event_MethodCall_CapturedParametersEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dotnet_5fagent_5fevents_2eproto);
    return ::descriptor_table_dotnet_5fagent_5fevents_2eproto.file_level_metadata[2];
  }

  public:
};

// -------------------------------------------------------------------

class Event_MethodCall :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Event_MethodCall) */ {
 public:
  Event_MethodCall();
  virtual ~Event_MethodCall();

  Event_MethodCall(const Event_MethodCall& from);
  Event_MethodCall(Event_MethodCall&& from) noexcept
    : Event_MethodCall() {
    *this = ::std::move(from);
  }

  inline Event_MethodCall& operator=(const Event_MethodCall& from) {
    CopyFrom(from);
    return *this;
  }
  inline Event_MethodCall& operator=(Event_MethodCall&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Event_MethodCall& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Event_MethodCall* internal_default_instance() {
    return reinterpret_cast<const Event_MethodCall*>(
               &_Event_MethodCall_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Event_MethodCall& a, Event_MethodCall& b) {
    a.Swap(&b);
  }
  inline void Swap(Event_MethodCall* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Event_MethodCall* New() const final {
    return CreateMaybeMessage<Event_MethodCall>(nullptr);
  }

  Event_MethodCall* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Event_MethodCall>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Event_MethodCall& from);
  void MergeFrom(const Event_MethodCall& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Event_MethodCall* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Event_MethodCall";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dotnet_5fagent_5fevents_2eproto);
    return ::descriptor_table_dotnet_5fagent_5fevents_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kCapturedParametersFieldNumber = 1,
    kCapturedReturnValueFieldNumber = 2,
  };
  // map<uint64, uint64> CapturedParameters = 1;
  int capturedparameters_size() const;
  private:
  int _internal_capturedparameters_size() const;
  public:
  void clear_capturedparameters();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_capturedparameters() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_capturedparameters();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::uint64 >&
      capturedparameters() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_capturedparameters();

  // uint64 CapturedReturnValue = 2;
  void clear_capturedreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::uint64 capturedreturnvalue() const;
  void set_capturedreturnvalue(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_capturedreturnvalue() const;
  void _internal_set_capturedreturnvalue(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Event_MethodCall)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Event_MethodCall_CapturedParametersEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::uint64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
      0 > capturedparameters_;
  ::PROTOBUF_NAMESPACE_ID::uint64 capturedreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dotnet_5fagent_5fevents_2eproto;
};
// -------------------------------------------------------------------

class Event_ArrayAccess :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SharpDetect.Common.Messages.Event_ArrayAccess) */ {
 public:
  Event_ArrayAccess();
  virtual ~Event_ArrayAccess();

  Event_ArrayAccess(const Event_ArrayAccess& from);
  Event_ArrayAccess(Event_ArrayAccess&& from) noexcept
    : Event_ArrayAccess() {
    *this = ::std::move(from);
  }

  inline Event_ArrayAccess& operator=(const Event_ArrayAccess& from) {
    CopyFrom(from);
    return *this;
  }
  inline Event_ArrayAccess& operator=(Event_ArrayAccess&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Event_ArrayAccess& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Event_ArrayAccess* internal_default_instance() {
    return reinterpret_cast<const Event_ArrayAccess*>(
               &_Event_ArrayAccess_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Event_ArrayAccess& a, Event_ArrayAccess& b) {
    a.Swap(&b);
  }
  inline void Swap(Event_ArrayAccess* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Event_ArrayAccess* New() const final {
    return CreateMaybeMessage<Event_ArrayAccess>(nullptr);
  }

  Event_ArrayAccess* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Event_ArrayAccess>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Event_ArrayAccess& from);
  void MergeFrom(const Event_ArrayAccess& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Event_ArrayAccess* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SharpDetect.Common.Messages.Event_ArrayAccess";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dotnet_5fagent_5fevents_2eproto);
    return ::descriptor_table_dotnet_5fagent_5fevents_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
  };
  // uint64 Index = 1;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::uint64 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SharpDetect.Common.Messages.Event_ArrayAccess)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dotnet_5fagent_5fevents_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AnalysisEvent

// uint64 Id = 1;
inline void AnalysisEvent::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AnalysisEvent::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AnalysisEvent::id() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.AnalysisEvent.Id)
  return _internal_id();
}
inline void AnalysisEvent::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void AnalysisEvent::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.AnalysisEvent.Id)
}

// .SharpDetect.Common.Messages.EventType Type = 2;
inline void AnalysisEvent::clear_type() {
  type_ = 0;
}
inline ::SharpDetect::Common::Messages::EventType AnalysisEvent::_internal_type() const {
  return static_cast< ::SharpDetect::Common::Messages::EventType >(type_);
}
inline ::SharpDetect::Common::Messages::EventType AnalysisEvent::type() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.AnalysisEvent.Type)
  return _internal_type();
}
inline void AnalysisEvent::_internal_set_type(::SharpDetect::Common::Messages::EventType value) {
  
  type_ = value;
}
inline void AnalysisEvent::set_type(::SharpDetect::Common::Messages::EventType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.AnalysisEvent.Type)
}

// uint64 ObjectId = 3;
inline void AnalysisEvent::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AnalysisEvent::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AnalysisEvent::objectid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.AnalysisEvent.ObjectId)
  return _internal_objectid();
}
inline void AnalysisEvent::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void AnalysisEvent::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.AnalysisEvent.ObjectId)
}

// uint64 ManagedThreadId = 4;
inline void AnalysisEvent::clear_managedthreadid() {
  managedthreadid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AnalysisEvent::_internal_managedthreadid() const {
  return managedthreadid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AnalysisEvent::managedthreadid() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.AnalysisEvent.ManagedThreadId)
  return _internal_managedthreadid();
}
inline void AnalysisEvent::_internal_set_managedthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  managedthreadid_ = value;
}
inline void AnalysisEvent::set_managedthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_managedthreadid(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.AnalysisEvent.ManagedThreadId)
}

// .SharpDetect.Common.Messages.Empty Empty = 5;
inline bool AnalysisEvent::_internal_has_empty() const {
  return Payload_case() == kEmpty;
}
inline bool AnalysisEvent::has_empty() const {
  return _internal_has_empty();
}
inline void AnalysisEvent::set_has_empty() {
  _oneof_case_[0] = kEmpty;
}
inline void AnalysisEvent::clear_empty() {
  if (_internal_has_empty()) {
    delete Payload_.empty_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Empty* AnalysisEvent::release_empty() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.AnalysisEvent.Empty)
  if (_internal_has_empty()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Empty* temp = Payload_.empty_;
    Payload_.empty_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Empty& AnalysisEvent::_internal_empty() const {
  return _internal_has_empty()
      ? *Payload_.empty_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Empty*>(&::SharpDetect::Common::Messages::_Empty_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Empty& AnalysisEvent::empty() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.AnalysisEvent.Empty)
  return _internal_empty();
}
inline ::SharpDetect::Common::Messages::Empty* AnalysisEvent::_internal_mutable_empty() {
  if (!_internal_has_empty()) {
    clear_Payload();
    set_has_empty();
    Payload_.empty_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Empty >(
        GetArenaNoVirtual());
  }
  return Payload_.empty_;
}
inline ::SharpDetect::Common::Messages::Empty* AnalysisEvent::mutable_empty() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.AnalysisEvent.Empty)
  return _internal_mutable_empty();
}

// .SharpDetect.Common.Messages.Event_MethodCall MethodEvent = 6;
inline bool AnalysisEvent::_internal_has_methodevent() const {
  return Payload_case() == kMethodEvent;
}
inline bool AnalysisEvent::has_methodevent() const {
  return _internal_has_methodevent();
}
inline void AnalysisEvent::set_has_methodevent() {
  _oneof_case_[0] = kMethodEvent;
}
inline void AnalysisEvent::clear_methodevent() {
  if (_internal_has_methodevent()) {
    delete Payload_.methodevent_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Event_MethodCall* AnalysisEvent::release_methodevent() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.AnalysisEvent.MethodEvent)
  if (_internal_has_methodevent()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Event_MethodCall* temp = Payload_.methodevent_;
    Payload_.methodevent_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Event_MethodCall& AnalysisEvent::_internal_methodevent() const {
  return _internal_has_methodevent()
      ? *Payload_.methodevent_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Event_MethodCall*>(&::SharpDetect::Common::Messages::_Event_MethodCall_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Event_MethodCall& AnalysisEvent::methodevent() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.AnalysisEvent.MethodEvent)
  return _internal_methodevent();
}
inline ::SharpDetect::Common::Messages::Event_MethodCall* AnalysisEvent::_internal_mutable_methodevent() {
  if (!_internal_has_methodevent()) {
    clear_Payload();
    set_has_methodevent();
    Payload_.methodevent_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Event_MethodCall >(
        GetArenaNoVirtual());
  }
  return Payload_.methodevent_;
}
inline ::SharpDetect::Common::Messages::Event_MethodCall* AnalysisEvent::mutable_methodevent() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.AnalysisEvent.MethodEvent)
  return _internal_mutable_methodevent();
}

// .SharpDetect.Common.Messages.Event_ArrayAccess ArrayEvent = 7;
inline bool AnalysisEvent::_internal_has_arrayevent() const {
  return Payload_case() == kArrayEvent;
}
inline bool AnalysisEvent::has_arrayevent() const {
  return _internal_has_arrayevent();
}
inline void AnalysisEvent::set_has_arrayevent() {
  _oneof_case_[0] = kArrayEvent;
}
inline void AnalysisEvent::clear_arrayevent() {
  if (_internal_has_arrayevent()) {
    delete Payload_.arrayevent_;
    clear_has_Payload();
  }
}
inline ::SharpDetect::Common::Messages::Event_ArrayAccess* AnalysisEvent::release_arrayevent() {
  // @@protoc_insertion_point(field_release:SharpDetect.Common.Messages.AnalysisEvent.ArrayEvent)
  if (_internal_has_arrayevent()) {
    clear_has_Payload();
      ::SharpDetect::Common::Messages::Event_ArrayAccess* temp = Payload_.arrayevent_;
    Payload_.arrayevent_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::SharpDetect::Common::Messages::Event_ArrayAccess& AnalysisEvent::_internal_arrayevent() const {
  return _internal_has_arrayevent()
      ? *Payload_.arrayevent_
      : *reinterpret_cast< ::SharpDetect::Common::Messages::Event_ArrayAccess*>(&::SharpDetect::Common::Messages::_Event_ArrayAccess_default_instance_);
}
inline const ::SharpDetect::Common::Messages::Event_ArrayAccess& AnalysisEvent::arrayevent() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.AnalysisEvent.ArrayEvent)
  return _internal_arrayevent();
}
inline ::SharpDetect::Common::Messages::Event_ArrayAccess* AnalysisEvent::_internal_mutable_arrayevent() {
  if (!_internal_has_arrayevent()) {
    clear_Payload();
    set_has_arrayevent();
    Payload_.arrayevent_ = CreateMaybeMessage< ::SharpDetect::Common::Messages::Event_ArrayAccess >(
        GetArenaNoVirtual());
  }
  return Payload_.arrayevent_;
}
inline ::SharpDetect::Common::Messages::Event_ArrayAccess* AnalysisEvent::mutable_arrayevent() {
  // @@protoc_insertion_point(field_mutable:SharpDetect.Common.Messages.AnalysisEvent.ArrayEvent)
  return _internal_mutable_arrayevent();
}

inline bool AnalysisEvent::has_Payload() const {
  return Payload_case() != PAYLOAD_NOT_SET;
}
inline void AnalysisEvent::clear_has_Payload() {
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}
inline AnalysisEvent::PayloadCase AnalysisEvent::Payload_case() const {
  return AnalysisEvent::PayloadCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Empty

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Event_MethodCall

// map<uint64, uint64> CapturedParameters = 1;
inline int Event_MethodCall::_internal_capturedparameters_size() const {
  return capturedparameters_.size();
}
inline int Event_MethodCall::capturedparameters_size() const {
  return _internal_capturedparameters_size();
}
inline void Event_MethodCall::clear_capturedparameters() {
  capturedparameters_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::uint64 >&
Event_MethodCall::_internal_capturedparameters() const {
  return capturedparameters_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::uint64 >&
Event_MethodCall::capturedparameters() const {
  // @@protoc_insertion_point(field_map:SharpDetect.Common.Messages.Event_MethodCall.CapturedParameters)
  return _internal_capturedparameters();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::uint64 >*
Event_MethodCall::_internal_mutable_capturedparameters() {
  return capturedparameters_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::uint64 >*
Event_MethodCall::mutable_capturedparameters() {
  // @@protoc_insertion_point(field_mutable_map:SharpDetect.Common.Messages.Event_MethodCall.CapturedParameters)
  return _internal_mutable_capturedparameters();
}

// uint64 CapturedReturnValue = 2;
inline void Event_MethodCall::clear_capturedreturnvalue() {
  capturedreturnvalue_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Event_MethodCall::_internal_capturedreturnvalue() const {
  return capturedreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Event_MethodCall::capturedreturnvalue() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Event_MethodCall.CapturedReturnValue)
  return _internal_capturedreturnvalue();
}
inline void Event_MethodCall::_internal_set_capturedreturnvalue(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  capturedreturnvalue_ = value;
}
inline void Event_MethodCall::set_capturedreturnvalue(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_capturedreturnvalue(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Event_MethodCall.CapturedReturnValue)
}

// -------------------------------------------------------------------

// Event_ArrayAccess

// uint64 Index = 1;
inline void Event_ArrayAccess::clear_index() {
  index_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Event_ArrayAccess::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Event_ArrayAccess::index() const {
  // @@protoc_insertion_point(field_get:SharpDetect.Common.Messages.Event_ArrayAccess.Index)
  return _internal_index();
}
inline void Event_ArrayAccess::_internal_set_index(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  index_ = value;
}
inline void Event_ArrayAccess::set_index(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:SharpDetect.Common.Messages.Event_ArrayAccess.Index)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Messages
}  // namespace Common
}  // namespace SharpDetect

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::SharpDetect::Common::Messages::EventType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SharpDetect::Common::Messages::EventType>() {
  return ::SharpDetect::Common::Messages::EventType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dotnet_5fagent_5fevents_2eproto
