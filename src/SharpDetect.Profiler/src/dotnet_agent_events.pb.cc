// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dotnet_agent_events.proto

#include "dotnet_agent_events.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_dotnet_5fagent_5fevents_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Empty_dotnet_5fagent_5fevents_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dotnet_5fagent_5fevents_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Event_ArrayAccess_dotnet_5fagent_5fevents_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dotnet_5fagent_5fevents_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Event_MethodCall_dotnet_5fagent_5fevents_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dotnet_5fagent_5fevents_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Event_MethodCall_CapturedParametersEntry_DoNotUse_dotnet_5fagent_5fevents_2eproto;
namespace SharpDetect {
namespace Common {
namespace Messages {
class AnalysisEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AnalysisEvent> _instance;
  const ::SharpDetect::Common::Messages::Empty* empty_;
  const ::SharpDetect::Common::Messages::Event_MethodCall* methodevent_;
  const ::SharpDetect::Common::Messages::Event_ArrayAccess* arrayevent_;
} _AnalysisEvent_default_instance_;
class EmptyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Empty> _instance;
} _Empty_default_instance_;
class Event_MethodCall_CapturedParametersEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Event_MethodCall_CapturedParametersEntry_DoNotUse> _instance;
} _Event_MethodCall_CapturedParametersEntry_DoNotUse_default_instance_;
class Event_MethodCallDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Event_MethodCall> _instance;
} _Event_MethodCall_default_instance_;
class Event_ArrayAccessDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Event_ArrayAccess> _instance;
} _Event_ArrayAccess_default_instance_;
}  // namespace Messages
}  // namespace Common
}  // namespace SharpDetect
static void InitDefaultsscc_info_AnalysisEvent_dotnet_5fagent_5fevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SharpDetect::Common::Messages::_AnalysisEvent_default_instance_;
    new (ptr) ::SharpDetect::Common::Messages::AnalysisEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SharpDetect::Common::Messages::AnalysisEvent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_AnalysisEvent_dotnet_5fagent_5fevents_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_AnalysisEvent_dotnet_5fagent_5fevents_2eproto}, {
      &scc_info_Empty_dotnet_5fagent_5fevents_2eproto.base,
      &scc_info_Event_MethodCall_dotnet_5fagent_5fevents_2eproto.base,
      &scc_info_Event_ArrayAccess_dotnet_5fagent_5fevents_2eproto.base,}};

static void InitDefaultsscc_info_Empty_dotnet_5fagent_5fevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SharpDetect::Common::Messages::_Empty_default_instance_;
    new (ptr) ::SharpDetect::Common::Messages::Empty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SharpDetect::Common::Messages::Empty::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Empty_dotnet_5fagent_5fevents_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Empty_dotnet_5fagent_5fevents_2eproto}, {}};

static void InitDefaultsscc_info_Event_ArrayAccess_dotnet_5fagent_5fevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SharpDetect::Common::Messages::_Event_ArrayAccess_default_instance_;
    new (ptr) ::SharpDetect::Common::Messages::Event_ArrayAccess();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SharpDetect::Common::Messages::Event_ArrayAccess::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Event_ArrayAccess_dotnet_5fagent_5fevents_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Event_ArrayAccess_dotnet_5fagent_5fevents_2eproto}, {}};

static void InitDefaultsscc_info_Event_MethodCall_dotnet_5fagent_5fevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SharpDetect::Common::Messages::_Event_MethodCall_default_instance_;
    new (ptr) ::SharpDetect::Common::Messages::Event_MethodCall();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SharpDetect::Common::Messages::Event_MethodCall::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Event_MethodCall_dotnet_5fagent_5fevents_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Event_MethodCall_dotnet_5fagent_5fevents_2eproto}, {
      &scc_info_Event_MethodCall_CapturedParametersEntry_DoNotUse_dotnet_5fagent_5fevents_2eproto.base,}};

static void InitDefaultsscc_info_Event_MethodCall_CapturedParametersEntry_DoNotUse_dotnet_5fagent_5fevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SharpDetect::Common::Messages::_Event_MethodCall_CapturedParametersEntry_DoNotUse_default_instance_;
    new (ptr) ::SharpDetect::Common::Messages::Event_MethodCall_CapturedParametersEntry_DoNotUse();
  }
  ::SharpDetect::Common::Messages::Event_MethodCall_CapturedParametersEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Event_MethodCall_CapturedParametersEntry_DoNotUse_dotnet_5fagent_5fevents_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Event_MethodCall_CapturedParametersEntry_DoNotUse_dotnet_5fagent_5fevents_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_dotnet_5fagent_5fevents_2eproto[5];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_dotnet_5fagent_5fevents_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_dotnet_5fagent_5fevents_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_dotnet_5fagent_5fevents_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SharpDetect::Common::Messages::AnalysisEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::SharpDetect::Common::Messages::AnalysisEvent, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SharpDetect::Common::Messages::AnalysisEvent, id_),
  PROTOBUF_FIELD_OFFSET(::SharpDetect::Common::Messages::AnalysisEvent, type_),
  PROTOBUF_FIELD_OFFSET(::SharpDetect::Common::Messages::AnalysisEvent, objectid_),
  PROTOBUF_FIELD_OFFSET(::SharpDetect::Common::Messages::AnalysisEvent, managedthreadid_),
  offsetof(::SharpDetect::Common::Messages::AnalysisEventDefaultTypeInternal, empty_),
  offsetof(::SharpDetect::Common::Messages::AnalysisEventDefaultTypeInternal, methodevent_),
  offsetof(::SharpDetect::Common::Messages::AnalysisEventDefaultTypeInternal, arrayevent_),
  PROTOBUF_FIELD_OFFSET(::SharpDetect::Common::Messages::AnalysisEvent, Payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SharpDetect::Common::Messages::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SharpDetect::Common::Messages::Event_MethodCall_CapturedParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SharpDetect::Common::Messages::Event_MethodCall_CapturedParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SharpDetect::Common::Messages::Event_MethodCall_CapturedParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::SharpDetect::Common::Messages::Event_MethodCall_CapturedParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SharpDetect::Common::Messages::Event_MethodCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SharpDetect::Common::Messages::Event_MethodCall, capturedparameters_),
  PROTOBUF_FIELD_OFFSET(::SharpDetect::Common::Messages::Event_MethodCall, capturedreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SharpDetect::Common::Messages::Event_ArrayAccess, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SharpDetect::Common::Messages::Event_ArrayAccess, index_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::SharpDetect::Common::Messages::AnalysisEvent)},
  { 13, -1, sizeof(::SharpDetect::Common::Messages::Empty)},
  { 18, 25, sizeof(::SharpDetect::Common::Messages::Event_MethodCall_CapturedParametersEntry_DoNotUse)},
  { 27, -1, sizeof(::SharpDetect::Common::Messages::Event_MethodCall)},
  { 34, -1, sizeof(::SharpDetect::Common::Messages::Event_ArrayAccess)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::SharpDetect::Common::Messages::_AnalysisEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::SharpDetect::Common::Messages::_Empty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::SharpDetect::Common::Messages::_Event_MethodCall_CapturedParametersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::SharpDetect::Common::Messages::_Event_MethodCall_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::SharpDetect::Common::Messages::_Event_ArrayAccess_default_instance_),
};

const char descriptor_table_protodef_dotnet_5fagent_5fevents_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\031dotnet_agent_events.proto\022\033SharpDetect"
  ".Common.Messages\"\310\002\n\rAnalysisEvent\022\n\n\002Id"
  "\030\001 \001(\004\0224\n\004Type\030\002 \001(\0162&.SharpDetect.Commo"
  "n.Messages.EventType\022\020\n\010ObjectId\030\003 \001(\004\022\027"
  "\n\017ManagedThreadId\030\004 \001(\004\0223\n\005Empty\030\005 \001(\0132\""
  ".SharpDetect.Common.Messages.EmptyH\000\022D\n\013"
  "MethodEvent\030\006 \001(\0132-.SharpDetect.Common.M"
  "essages.Event_MethodCallH\000\022D\n\nArrayEvent"
  "\030\007 \001(\0132..SharpDetect.Common.Messages.Eve"
  "nt_ArrayAccessH\000B\t\n\007Payload\"\007\n\005Empty\"\315\001\n"
  "\020Event_MethodCall\022a\n\022CapturedParameters\030"
  "\001 \003(\0132E.SharpDetect.Common.Messages.Even"
  "t_MethodCall.CapturedParametersEntry\022\033\n\023"
  "CapturedReturnValue\030\002 \001(\004\0329\n\027CapturedPar"
  "ametersEntry\022\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001(\004"
  ":\0028\001\"\"\n\021Event_ArrayAccess\022\r\n\005Index\030\001 \001(\004"
  "*\263\002\n\tEventType\022\020\n\014ArrayCreated\020\000\022\024\n\020Arra"
  "yElementRead\020\001\022\027\n\023ArrayElementWritten\020\002\022"
  "\r\n\tFieldRead\020\003\022\020\n\014FieldWritten\020\004\022\020\n\014Meth"
  "odCalled\020\005\022\022\n\016MethodReturned\020\006\022\030\n\024LockAc"
  "quireAttempted\020\007\022\027\n\023LockAcquireReturned\020"
  "\010\022\020\n\014LockReleased\020\t\022\027\n\023ObjectWaitAttempt"
  "ed\020\n\022\026\n\022ObjectWaitReturned\020\013\022\023\n\017ObjectPu"
  "lsedOne\020\014\022\023\n\017ObjectPulsedAll\020\rb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_dotnet_5fagent_5fevents_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_dotnet_5fagent_5fevents_2eproto_sccs[5] = {
  &scc_info_AnalysisEvent_dotnet_5fagent_5fevents_2eproto.base,
  &scc_info_Empty_dotnet_5fagent_5fevents_2eproto.base,
  &scc_info_Event_ArrayAccess_dotnet_5fagent_5fevents_2eproto.base,
  &scc_info_Event_MethodCall_dotnet_5fagent_5fevents_2eproto.base,
  &scc_info_Event_MethodCall_CapturedParametersEntry_DoNotUse_dotnet_5fagent_5fevents_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_dotnet_5fagent_5fevents_2eproto_once;
static bool descriptor_table_dotnet_5fagent_5fevents_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dotnet_5fagent_5fevents_2eproto = {
  &descriptor_table_dotnet_5fagent_5fevents_2eproto_initialized, descriptor_table_protodef_dotnet_5fagent_5fevents_2eproto, "dotnet_agent_events.proto", 958,
  &descriptor_table_dotnet_5fagent_5fevents_2eproto_once, descriptor_table_dotnet_5fagent_5fevents_2eproto_sccs, descriptor_table_dotnet_5fagent_5fevents_2eproto_deps, 5, 0,
  schemas, file_default_instances, TableStruct_dotnet_5fagent_5fevents_2eproto::offsets,
  file_level_metadata_dotnet_5fagent_5fevents_2eproto, 5, file_level_enum_descriptors_dotnet_5fagent_5fevents_2eproto, file_level_service_descriptors_dotnet_5fagent_5fevents_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_dotnet_5fagent_5fevents_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_dotnet_5fagent_5fevents_2eproto), true);
namespace SharpDetect {
namespace Common {
namespace Messages {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EventType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dotnet_5fagent_5fevents_2eproto);
  return file_level_enum_descriptors_dotnet_5fagent_5fevents_2eproto[0];
}
bool EventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void AnalysisEvent::InitAsDefaultInstance() {
  ::SharpDetect::Common::Messages::_AnalysisEvent_default_instance_.empty_ = const_cast< ::SharpDetect::Common::Messages::Empty*>(
      ::SharpDetect::Common::Messages::Empty::internal_default_instance());
  ::SharpDetect::Common::Messages::_AnalysisEvent_default_instance_.methodevent_ = const_cast< ::SharpDetect::Common::Messages::Event_MethodCall*>(
      ::SharpDetect::Common::Messages::Event_MethodCall::internal_default_instance());
  ::SharpDetect::Common::Messages::_AnalysisEvent_default_instance_.arrayevent_ = const_cast< ::SharpDetect::Common::Messages::Event_ArrayAccess*>(
      ::SharpDetect::Common::Messages::Event_ArrayAccess::internal_default_instance());
}
class AnalysisEvent::_Internal {
 public:
  static const ::SharpDetect::Common::Messages::Empty& empty(const AnalysisEvent* msg);
  static const ::SharpDetect::Common::Messages::Event_MethodCall& methodevent(const AnalysisEvent* msg);
  static const ::SharpDetect::Common::Messages::Event_ArrayAccess& arrayevent(const AnalysisEvent* msg);
};

const ::SharpDetect::Common::Messages::Empty&
AnalysisEvent::_Internal::empty(const AnalysisEvent* msg) {
  return *msg->Payload_.empty_;
}
const ::SharpDetect::Common::Messages::Event_MethodCall&
AnalysisEvent::_Internal::methodevent(const AnalysisEvent* msg) {
  return *msg->Payload_.methodevent_;
}
const ::SharpDetect::Common::Messages::Event_ArrayAccess&
AnalysisEvent::_Internal::arrayevent(const AnalysisEvent* msg) {
  return *msg->Payload_.arrayevent_;
}
void AnalysisEvent::set_allocated_empty(::SharpDetect::Common::Messages::Empty* empty) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Payload();
  if (empty) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      empty = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, empty, submessage_arena);
    }
    set_has_empty();
    Payload_.empty_ = empty;
  }
  // @@protoc_insertion_point(field_set_allocated:SharpDetect.Common.Messages.AnalysisEvent.Empty)
}
void AnalysisEvent::set_allocated_methodevent(::SharpDetect::Common::Messages::Event_MethodCall* methodevent) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Payload();
  if (methodevent) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      methodevent = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, methodevent, submessage_arena);
    }
    set_has_methodevent();
    Payload_.methodevent_ = methodevent;
  }
  // @@protoc_insertion_point(field_set_allocated:SharpDetect.Common.Messages.AnalysisEvent.MethodEvent)
}
void AnalysisEvent::set_allocated_arrayevent(::SharpDetect::Common::Messages::Event_ArrayAccess* arrayevent) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Payload();
  if (arrayevent) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      arrayevent = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, arrayevent, submessage_arena);
    }
    set_has_arrayevent();
    Payload_.arrayevent_ = arrayevent;
  }
  // @@protoc_insertion_point(field_set_allocated:SharpDetect.Common.Messages.AnalysisEvent.ArrayEvent)
}
AnalysisEvent::AnalysisEvent()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SharpDetect.Common.Messages.AnalysisEvent)
}
AnalysisEvent::AnalysisEvent(const AnalysisEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  clear_has_Payload();
  switch (from.Payload_case()) {
    case kEmpty: {
      _internal_mutable_empty()->::SharpDetect::Common::Messages::Empty::MergeFrom(from._internal_empty());
      break;
    }
    case kMethodEvent: {
      _internal_mutable_methodevent()->::SharpDetect::Common::Messages::Event_MethodCall::MergeFrom(from._internal_methodevent());
      break;
    }
    case kArrayEvent: {
      _internal_mutable_arrayevent()->::SharpDetect::Common::Messages::Event_ArrayAccess::MergeFrom(from._internal_arrayevent());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:SharpDetect.Common.Messages.AnalysisEvent)
}

void AnalysisEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AnalysisEvent_dotnet_5fagent_5fevents_2eproto.base);
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  clear_has_Payload();
}

AnalysisEvent::~AnalysisEvent() {
  // @@protoc_insertion_point(destructor:SharpDetect.Common.Messages.AnalysisEvent)
  SharedDtor();
}

void AnalysisEvent::SharedDtor() {
  if (has_Payload()) {
    clear_Payload();
  }
}

void AnalysisEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AnalysisEvent& AnalysisEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AnalysisEvent_dotnet_5fagent_5fevents_2eproto.base);
  return *internal_default_instance();
}


void AnalysisEvent::clear_Payload() {
// @@protoc_insertion_point(one_of_clear_start:SharpDetect.Common.Messages.AnalysisEvent)
  switch (Payload_case()) {
    case kEmpty: {
      delete Payload_.empty_;
      break;
    }
    case kMethodEvent: {
      delete Payload_.methodevent_;
      break;
    }
    case kArrayEvent: {
      delete Payload_.arrayevent_;
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void AnalysisEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:SharpDetect.Common.Messages.AnalysisEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  clear_Payload();
  _internal_metadata_.Clear();
}

const char* AnalysisEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .SharpDetect.Common.Messages.EventType Type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::SharpDetect::Common::Messages::EventType>(val));
        } else goto handle_unusual;
        continue;
      // uint64 ObjectId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 ManagedThreadId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          managedthreadid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .SharpDetect.Common.Messages.Empty Empty = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_empty(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .SharpDetect.Common.Messages.Event_MethodCall MethodEvent = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_methodevent(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .SharpDetect.Common.Messages.Event_ArrayAccess ArrayEvent = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_arrayevent(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AnalysisEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SharpDetect.Common.Messages.AnalysisEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // .SharpDetect.Common.Messages.EventType Type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // uint64 ObjectId = 3;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_objectid(), target);
  }

  // uint64 ManagedThreadId = 4;
  if (this->managedthreadid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_managedthreadid(), target);
  }

  // .SharpDetect.Common.Messages.Empty Empty = 5;
  if (_internal_has_empty()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::empty(this), target, stream);
  }

  // .SharpDetect.Common.Messages.Event_MethodCall MethodEvent = 6;
  if (_internal_has_methodevent()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::methodevent(this), target, stream);
  }

  // .SharpDetect.Common.Messages.Event_ArrayAccess ArrayEvent = 7;
  if (_internal_has_arrayevent()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::arrayevent(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SharpDetect.Common.Messages.AnalysisEvent)
  return target;
}

size_t AnalysisEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SharpDetect.Common.Messages.AnalysisEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  // uint64 ObjectId = 3;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  // uint64 ManagedThreadId = 4;
  if (this->managedthreadid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_managedthreadid());
  }

  // .SharpDetect.Common.Messages.EventType Type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  switch (Payload_case()) {
    // .SharpDetect.Common.Messages.Empty Empty = 5;
    case kEmpty: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Payload_.empty_);
      break;
    }
    // .SharpDetect.Common.Messages.Event_MethodCall MethodEvent = 6;
    case kMethodEvent: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Payload_.methodevent_);
      break;
    }
    // .SharpDetect.Common.Messages.Event_ArrayAccess ArrayEvent = 7;
    case kArrayEvent: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Payload_.arrayevent_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnalysisEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SharpDetect.Common.Messages.AnalysisEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const AnalysisEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AnalysisEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SharpDetect.Common.Messages.AnalysisEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SharpDetect.Common.Messages.AnalysisEvent)
    MergeFrom(*source);
  }
}

void AnalysisEvent::MergeFrom(const AnalysisEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SharpDetect.Common.Messages.AnalysisEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
  if (from.managedthreadid() != 0) {
    _internal_set_managedthreadid(from._internal_managedthreadid());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  switch (from.Payload_case()) {
    case kEmpty: {
      _internal_mutable_empty()->::SharpDetect::Common::Messages::Empty::MergeFrom(from._internal_empty());
      break;
    }
    case kMethodEvent: {
      _internal_mutable_methodevent()->::SharpDetect::Common::Messages::Event_MethodCall::MergeFrom(from._internal_methodevent());
      break;
    }
    case kArrayEvent: {
      _internal_mutable_arrayevent()->::SharpDetect::Common::Messages::Event_ArrayAccess::MergeFrom(from._internal_arrayevent());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void AnalysisEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SharpDetect.Common.Messages.AnalysisEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnalysisEvent::CopyFrom(const AnalysisEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SharpDetect.Common.Messages.AnalysisEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnalysisEvent::IsInitialized() const {
  return true;
}

void AnalysisEvent::InternalSwap(AnalysisEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
  swap(objectid_, other->objectid_);
  swap(managedthreadid_, other->managedthreadid_);
  swap(type_, other->type_);
  swap(Payload_, other->Payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata AnalysisEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
class Empty::_Internal {
 public:
};

Empty::Empty()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SharpDetect.Common.Messages.Empty)
}
Empty::Empty(const Empty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SharpDetect.Common.Messages.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:SharpDetect.Common.Messages.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Empty& Empty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Empty_dotnet_5fagent_5fevents_2eproto.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:SharpDetect.Common.Messages.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Empty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Empty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SharpDetect.Common.Messages.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SharpDetect.Common.Messages.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SharpDetect.Common.Messages.Empty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SharpDetect.Common.Messages.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Empty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SharpDetect.Common.Messages.Empty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SharpDetect.Common.Messages.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SharpDetect.Common.Messages.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SharpDetect.Common.Messages.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SharpDetect.Common.Messages.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Empty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

Event_MethodCall_CapturedParametersEntry_DoNotUse::Event_MethodCall_CapturedParametersEntry_DoNotUse() {}
Event_MethodCall_CapturedParametersEntry_DoNotUse::Event_MethodCall_CapturedParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Event_MethodCall_CapturedParametersEntry_DoNotUse::MergeFrom(const Event_MethodCall_CapturedParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Event_MethodCall_CapturedParametersEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Event_MethodCall_CapturedParametersEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void Event_MethodCall::InitAsDefaultInstance() {
}
class Event_MethodCall::_Internal {
 public:
};

Event_MethodCall::Event_MethodCall()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SharpDetect.Common.Messages.Event_MethodCall)
}
Event_MethodCall::Event_MethodCall(const Event_MethodCall& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  capturedparameters_.MergeFrom(from.capturedparameters_);
  capturedreturnvalue_ = from.capturedreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:SharpDetect.Common.Messages.Event_MethodCall)
}

void Event_MethodCall::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Event_MethodCall_dotnet_5fagent_5fevents_2eproto.base);
  capturedreturnvalue_ = PROTOBUF_ULONGLONG(0);
}

Event_MethodCall::~Event_MethodCall() {
  // @@protoc_insertion_point(destructor:SharpDetect.Common.Messages.Event_MethodCall)
  SharedDtor();
}

void Event_MethodCall::SharedDtor() {
}

void Event_MethodCall::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Event_MethodCall& Event_MethodCall::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Event_MethodCall_dotnet_5fagent_5fevents_2eproto.base);
  return *internal_default_instance();
}


void Event_MethodCall::Clear() {
// @@protoc_insertion_point(message_clear_start:SharpDetect.Common.Messages.Event_MethodCall)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  capturedparameters_.Clear();
  capturedreturnvalue_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Event_MethodCall::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<uint64, uint64> CapturedParameters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&capturedparameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // uint64 CapturedReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          capturedreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Event_MethodCall::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SharpDetect.Common.Messages.Event_MethodCall)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, uint64> CapturedParameters = 1;
  if (!this->_internal_capturedparameters().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::uint64 >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint64, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_capturedparameters().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_capturedparameters().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::uint64 >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::uint64 >::const_iterator
          it = this->_internal_capturedparameters().begin();
          it != this->_internal_capturedparameters().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Event_MethodCall_CapturedParametersEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::uint64 >::const_iterator
          it = this->_internal_capturedparameters().begin();
          it != this->_internal_capturedparameters().end(); ++it) {
        target = Event_MethodCall_CapturedParametersEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
      }
    }
  }

  // uint64 CapturedReturnValue = 2;
  if (this->capturedreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_capturedreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SharpDetect.Common.Messages.Event_MethodCall)
  return target;
}

size_t Event_MethodCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SharpDetect.Common.Messages.Event_MethodCall)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint64, uint64> CapturedParameters = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_capturedparameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::uint64 >::const_iterator
      it = this->_internal_capturedparameters().begin();
      it != this->_internal_capturedparameters().end(); ++it) {
    total_size += Event_MethodCall_CapturedParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // uint64 CapturedReturnValue = 2;
  if (this->capturedreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_capturedreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Event_MethodCall::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SharpDetect.Common.Messages.Event_MethodCall)
  GOOGLE_DCHECK_NE(&from, this);
  const Event_MethodCall* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Event_MethodCall>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SharpDetect.Common.Messages.Event_MethodCall)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SharpDetect.Common.Messages.Event_MethodCall)
    MergeFrom(*source);
  }
}

void Event_MethodCall::MergeFrom(const Event_MethodCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SharpDetect.Common.Messages.Event_MethodCall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  capturedparameters_.MergeFrom(from.capturedparameters_);
  if (from.capturedreturnvalue() != 0) {
    _internal_set_capturedreturnvalue(from._internal_capturedreturnvalue());
  }
}

void Event_MethodCall::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SharpDetect.Common.Messages.Event_MethodCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event_MethodCall::CopyFrom(const Event_MethodCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SharpDetect.Common.Messages.Event_MethodCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event_MethodCall::IsInitialized() const {
  return true;
}

void Event_MethodCall::InternalSwap(Event_MethodCall* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  capturedparameters_.Swap(&other->capturedparameters_);
  swap(capturedreturnvalue_, other->capturedreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Event_MethodCall::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Event_ArrayAccess::InitAsDefaultInstance() {
}
class Event_ArrayAccess::_Internal {
 public:
};

Event_ArrayAccess::Event_ArrayAccess()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SharpDetect.Common.Messages.Event_ArrayAccess)
}
Event_ArrayAccess::Event_ArrayAccess(const Event_ArrayAccess& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:SharpDetect.Common.Messages.Event_ArrayAccess)
}

void Event_ArrayAccess::SharedCtor() {
  index_ = PROTOBUF_ULONGLONG(0);
}

Event_ArrayAccess::~Event_ArrayAccess() {
  // @@protoc_insertion_point(destructor:SharpDetect.Common.Messages.Event_ArrayAccess)
  SharedDtor();
}

void Event_ArrayAccess::SharedDtor() {
}

void Event_ArrayAccess::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Event_ArrayAccess& Event_ArrayAccess::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Event_ArrayAccess_dotnet_5fagent_5fevents_2eproto.base);
  return *internal_default_instance();
}


void Event_ArrayAccess::Clear() {
// @@protoc_insertion_point(message_clear_start:SharpDetect.Common.Messages.Event_ArrayAccess)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Event_ArrayAccess::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 Index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Event_ArrayAccess::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SharpDetect.Common.Messages.Event_ArrayAccess)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Index = 1;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SharpDetect.Common.Messages.Event_ArrayAccess)
  return target;
}

size_t Event_ArrayAccess::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SharpDetect.Common.Messages.Event_ArrayAccess)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 Index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Event_ArrayAccess::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SharpDetect.Common.Messages.Event_ArrayAccess)
  GOOGLE_DCHECK_NE(&from, this);
  const Event_ArrayAccess* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Event_ArrayAccess>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SharpDetect.Common.Messages.Event_ArrayAccess)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SharpDetect.Common.Messages.Event_ArrayAccess)
    MergeFrom(*source);
  }
}

void Event_ArrayAccess::MergeFrom(const Event_ArrayAccess& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SharpDetect.Common.Messages.Event_ArrayAccess)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void Event_ArrayAccess::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SharpDetect.Common.Messages.Event_ArrayAccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event_ArrayAccess::CopyFrom(const Event_ArrayAccess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SharpDetect.Common.Messages.Event_ArrayAccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event_ArrayAccess::IsInitialized() const {
  return true;
}

void Event_ArrayAccess::InternalSwap(Event_ArrayAccess* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(index_, other->index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Event_ArrayAccess::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Messages
}  // namespace Common
}  // namespace SharpDetect
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::SharpDetect::Common::Messages::AnalysisEvent* Arena::CreateMaybeMessage< ::SharpDetect::Common::Messages::AnalysisEvent >(Arena* arena) {
  return Arena::CreateInternal< ::SharpDetect::Common::Messages::AnalysisEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::SharpDetect::Common::Messages::Empty* Arena::CreateMaybeMessage< ::SharpDetect::Common::Messages::Empty >(Arena* arena) {
  return Arena::CreateInternal< ::SharpDetect::Common::Messages::Empty >(arena);
}
template<> PROTOBUF_NOINLINE ::SharpDetect::Common::Messages::Event_MethodCall_CapturedParametersEntry_DoNotUse* Arena::CreateMaybeMessage< ::SharpDetect::Common::Messages::Event_MethodCall_CapturedParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::SharpDetect::Common::Messages::Event_MethodCall_CapturedParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::SharpDetect::Common::Messages::Event_MethodCall* Arena::CreateMaybeMessage< ::SharpDetect::Common::Messages::Event_MethodCall >(Arena* arena) {
  return Arena::CreateInternal< ::SharpDetect::Common::Messages::Event_MethodCall >(arena);
}
template<> PROTOBUF_NOINLINE ::SharpDetect::Common::Messages::Event_ArrayAccess* Arena::CreateMaybeMessage< ::SharpDetect::Common::Messages::Event_ArrayAccess >(Arena* arena) {
  return Arena::CreateInternal< ::SharpDetect::Common::Messages::Event_ArrayAccess >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
